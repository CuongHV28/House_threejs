{"version":3,"sources":["node_modules/three/build/three.module.js","node_modules/three/examples/jsm/controls/OrbitControls.js","src/js/shader/pencil.js","src/js/shader/stripes.js","src/materials.ts","src/houses/spanish.ts","src/house.ts","node_modules/three-mesh-bvh/src/core/Constants.js","node_modules/three-mesh-bvh/src/core/MeshBVHNode.js","node_modules/three-mesh-bvh/src/utils/ArrayBoxUtilities.js","node_modules/three-mesh-bvh/src/core/buildFunctions.js","node_modules/three-mesh-bvh/src/math/SeparatingAxisBounds.js","node_modules/three-mesh-bvh/src/math/MathUtilities.js","node_modules/three-mesh-bvh/src/math/ExtendedTriangle.js","node_modules/three-mesh-bvh/src/math/OrientedBox.js","node_modules/three-mesh-bvh/src/utils/ThreeRayIntersectUtilities.js","node_modules/three-mesh-bvh/src/utils/GeometryRayIntersectUtilities.js","node_modules/three-mesh-bvh/src/utils/TriangleUtilities.js","node_modules/three-mesh-bvh/src/utils/PrimitivePool.js","node_modules/three-mesh-bvh/src/core/nodeBufferFunctions.js","node_modules/three-mesh-bvh/src/core/castFunctions.js","node_modules/three-mesh-bvh/src/core/MeshBVH.js","node_modules/three-mesh-bvh/src/objects/MeshBVHVisualizer.js","node_modules/three-mesh-bvh/src/debug/Debug.js","node_modules/three-mesh-bvh/src/utils/ExtensionUtilities.js","node_modules/three-mesh-bvh/src/gpu/VertexAttributeTexture.js","node_modules/three-mesh-bvh/src/gpu/MeshBVHUniformStruct.js","node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","node_modules/three-mesh-bvh/src/utils/StaticGeometryGenerator.js","node_modules/three-mesh-bvh/src/index.js","node_modules/three-bvh-csg/src/core/HalfEdgeMap.js","node_modules/three-bvh-csg/src/core/utils.js","node_modules/three-bvh-csg/src/core/Brush.js","node_modules/three-bvh-csg/src/core/IntersectionMap.js","node_modules/three-bvh-csg/src/core/constants.js","node_modules/three-bvh-csg/src/core/operationsUtils.js","node_modules/three-bvh-csg/src/core/TriangleSplitter.js","node_modules/three-bvh-csg/src/core/TypeBackedArray.js","node_modules/three-bvh-csg/src/core/TypedAttributeData.js","node_modules/three-bvh-csg/src/core/OperationDebugData.js","node_modules/three-bvh-csg/src/core/operations.js","node_modules/three-bvh-csg/src/core/Evaluator.js","node_modules/three-bvh-csg/src/core/Operation.js","node_modules/three-bvh-csg/src/core/OperationGroup.js","node_modules/three-bvh-csg/src/materials/shaderUtils.js","node_modules/three-bvh-csg/src/materials/GridMaterial.js","node_modules/three-bvh-csg/src/core/debugUtils.js","node_modules/three-bvh-csg/src/objects/TriangleSetHelper.js","node_modules/three-bvh-csg/src/objects/EdgesHelper.js","node_modules/three-bvh-csg/src/objects/PointsHelper.js","node_modules/three-bvh-csg/src/objects/HalfEdgeHelper.js","node_modules/three-bvh-csg/src/index.js","src/shapes/awnings.ts","src/shapes/balconies.ts","src/shapes/chairs.ts","src/shapes/tables.ts","src/shapes/shapes.ts","node_modules/chroma-js/chroma.js","src/daylight.ts","node_modules/stats.js/build/stats.min.js","src/index.ts","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","String","Number","REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","EventDispatcher","addEventListener","listener","_listeners","undefined","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","_lut","toString","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize$1","Float32Array","Uint16Array","Uint8Array","Int16Array","Int8Array","normalize","round","MathUtils","freeze","denormalize","Vector2","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","add","w","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","isMatrix3","error","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","rotate","theta","translate","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Int32Array","Uint32Array","Float64Array","getTypedArray","buffer","createElementNS","document","SRGBToLinear","LinearToSRGB","FN","_defineProperty","ColorManagement","legacyMode","workingColorSpace","colorSpace","convert","color","sourceColorSpace","targetColorSpace","fn","fromWorkingColorSpace","toWorkingColorSpace","_colorKeywords","_rgb","_hslA","_hslB","hue2rgb","toComponents","source","Color","isColor","setRGB","setHex","setStyle","hex","setHSL","style","handleAlpha","string","parseFloat","exec","components","parseInt","size","setColorName","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","delta","getRGB","getStyle","concat","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","getZ","normalized","toJSON","_context3","NAMES","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","canvas","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","Source","isSource","version","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","textureId","Texture","_EventDispatcher","_this2","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","_callSuper","isTexture","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","_inherits","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","Vector4","z","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","acos","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getW","_context4","WebGLRenderTarget","_EventDispatcher2","_this3","options","isWebGLRenderTarget","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","samples","setSize","assign","DataArrayTexture","_Texture","_this4","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_this5","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_this6","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_this7","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","_WebGLRenderTarget3","count","_this8","isWebGLMultipleRenderTargets","il","Quaternion","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","isEuler","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","angleTo","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","_context5","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","denominator","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","randomDirection","_context6","Box3","Infinity","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","expandByPoint","setFromCenterAndSize","halfSize","_vector$b","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","attributes","position","boundingBox","computeBoundingBox","_box$3","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$3","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","clampedPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_toFarthestPoint","_toPoint","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","missingRadiusHalf","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","isMatrix4","n14","n24","n34","n41","n42","n43","n44","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","yx","zx","zy","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","_matrix$1","_quaternion$3","Euler","DefaultOrder","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context7","toVector3","RotationOrders","Layers","mask","channel","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","_EventDispatcher3","_this9","isObject3D","parent","DefaultUp","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","remove","removeFromParent","clear","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","isInstancedMesh","instanceMatrix","instanceColor","serialize","library","element","isScene","background","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getUV","uv1","uv2","uv3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","materialId","Material","_EventDispatcher4","_this10","isMaterial","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","flatShading","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","fog","srcPlanes","dstPlanes","fromType","MeshBasicMaterial","_Material","_this11","isMeshBasicMaterial","_get","_getPrototypeOf","_vector$9","_vector2$1","BufferAttribute","itemSize","isBufferAttribute","usage","updateRange","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","copyColorsArray","colors","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZ","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","Uint8BufferAttribute","_BufferAttribute2","Uint8ClampedBufferAttribute","_BufferAttribute3","Int16BufferAttribute","_BufferAttribute4","Uint16BufferAttribute","_BufferAttribute5","Int32BufferAttribute","_BufferAttribute6","Uint32BufferAttribute","_BufferAttribute7","Float16BufferAttribute","_BufferAttribute8","_this12","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","Float64BufferAttribute","_BufferAttribute10","_id$1","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_this13","isBufferGeometry","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","merge","attribute1","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_this14","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","raycaster","intersects","intersection","morphPosition","groupMaterial","end","checkBufferGeometryIntersection","faceIndex","face","checkIntersection","morphInfluences","influence","boneTransform","BoxGeometry","BoxBufferGeometry","_BufferGeometry","_this15","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","UniformsUtils","default_vertex","default_fragment","ShaderMaterial","_Material2","_this16","isShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_this17","PerspectiveCamera","_Camera","_this18","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","renderTarget","_this19","isWebGLCubeRenderTarget","_possibleConstructorReturn","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","_this$children","_slicedToArray","currentRenderTarget","getRenderTarget","currentToneMapping","toneMapping","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","_Texture3","_this20","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget4","_this21","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","deleteBuffer","delete","cached","elementSize","PlaneGeometry","PlaneBufferGeometry","_BufferGeometry2","_this22","width_half","height_half","segment_width","segment_height","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","output_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","ior","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","iridescenceThicknessMinimum","iridescenceThicknessMaximum","sheenColorMap","sheenRoughnessMap","transmissionSamplerSize","transmissionSamplerMap","WebGLBackground","cubemaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","useCache","materialProperties","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_this23","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","MAX_SAMPLES","_flatCamera","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","programs","autoReset","numericalSort","absNumericalSort","morph","WebGLMorphtargets","influencesList","morphTextures","workInfluences","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","handleSource","errorLine","split","lines2","from","to","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","getActiveAttrib","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","decodeVideoTexture","physicallyCorrectLights","opaque","outputEncoding","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","_id","WebGLShaderCache","shaderCache","Map","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator","_createForOfIteratorHelper","_step","shaderStage","code","err","getVertexShaderID","getFragmentShaderID","Set","stage","WebGLShaderStage","WebGLPrograms","cubeuvmaps","_programLayers","_customShaders","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","useAlphaTest","useClearcoat","useIridescence","isXRRenderTarget","isVideoTexture","isFogExp2","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderState","_Material3","_this24","isMeshDepthMaterial","_Material4","_this25","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","mapPass","pars","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","renderObject","VSMPass","blurSamples","renderBufferDirect","getDepthMaterial","result","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","k","kl","depthMaterial","WebGLState","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","scissorParam","viewportParam","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","bindFramebuffer","framebuffer","drawBuffersWEBGL","useProgram","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","frontFace","cullFace","setLineWidth","lineWidth","factor","activeTexture","webglSlot","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texSubImage2D","texSubImage3D","compressedTexSubImage2D","texStorage2D","texStorage3D","texImage3D","WebGLTextures","_gl","utils","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","filterToGL","setTextureParameters","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","__currentVersion","pixelStorei","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","isDepthTexture","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","WebGLUtils","HALF_FLOAT_OES","SRGB_ALPHA_EXT","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","_PerspectiveCamera","_this26","isArrayCamera","cameras","Group","_Object3D4","_this27","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","disconnect","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","getPose","targetRaySpace","transform","_iterator2","_step2","inputjoint","jointPose","getJointPose","jointName","joint","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","DepthTexture","_Texture4","_this28","WebXRManager","_EventDispatcher6","_this29","framebufferScaleFactor","referenceSpaceType","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","inputSourcesMap","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","onSessionEnd","onInputSourcesChange","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","inputSources","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","getCamera","getFoveation","fixedFoveation","foveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraVRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","WebGLMaterials","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","uvScaleMap","uv2ScaleMap","createCanvasElement","display","WebGLRenderer","isWebGLRenderer","_context","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","_alpha","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","gammaFactor","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","material2","getProgram","self","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","halfFloatSupportedByExt","readPixels","copyFramebufferToTexture","level","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","compressedTexSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","_WebGLRenderer","FogExp2","Fog","Scene","_Object3D5","_this30","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_this31","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_this32","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_this33","_currentLevel","addLevel","getCurrentLevel","getObjectForDistance","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","_Mesh","_this34","bindMatrixInverse","bind","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","Bone","_Object3D8","_this35","isBone","DataTexture","_Texture5","_this36","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute11","_this37","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","_Mesh2","_this38","getColorAt","getMatrixAt","raycastTimes","instanceId","setColorAt","setMatrixAt","_Material6","_this39","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_this40","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_this41","LineLoop","_Line2","_this42","_Material7","_this43","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_this44","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","video","_this45","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_this46","CompressedTexture","_Texture8","_this47","CanvasTexture","_Texture9","_this48","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","tz","EllipseCurve","_Curve","_this49","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","aRadius","_this50","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_this51","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_this52","v3","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_this53","isCubicBezierCurve3","LineCurve","_Curve5","_this54","isLineCurve","LineCurve3","_Curve6","_this55","isLineCurve3","QuadraticBezierCurve","_Curve7","_this56","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_this57","isQuadraticBezierCurve3","SplineCurve","_Curve9","_this58","isSplineCurve","Curves","CurvePath","_Curve10","_this59","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_this60","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","LatheBufferGeometry","_BufferGeometry3","_this61","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","CapsuleBufferGeometry","_LatheGeometry","_this62","capSegments","radialSegments","CircleGeometry","CircleBufferGeometry","_BufferGeometry4","_this63","thetaStart","thetaLength","segment","CylinderGeometry","CylinderBufferGeometry","_BufferGeometry5","_this64","radiusTop","radiusBottom","openEnded","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","ConeBufferGeometry","_CylinderGeometry","_this65","PolyhedronGeometry","PolyhedronBufferGeometry","_BufferGeometry6","_this66","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","DodecahedronBufferGeometry","_PolyhedronGeometry","_this67","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_this68","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_this69","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","findHoleBridge","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","ExtrudeBufferGeometry","_BufferGeometry8","_this70","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","IcosahedronBufferGeometry","_PolyhedronGeometry2","_this71","OctahedronGeometry","OctahedronBufferGeometry","_PolyhedronGeometry3","_this72","RingGeometry","RingBufferGeometry","_BufferGeometry9","_this73","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","ShapeBufferGeometry","_BufferGeometry10","_this74","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","SphereBufferGeometry","_BufferGeometry11","_this75","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TetrahedronBufferGeometry","_PolyhedronGeometry4","_this76","TorusGeometry","TorusBufferGeometry","_BufferGeometry12","_this77","tube","tubularSegments","TorusKnotGeometry","TorusKnotBufferGeometry","_BufferGeometry13","_this78","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","TubeBufferGeometry","_BufferGeometry14","_this79","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_this80","edges","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_this81","RawShaderMaterial","_ShaderMaterial","_this82","_Material9","_this83","_MeshStandardMaterial","_this84","_sheen","_clearcoat","_iridescence","_transmission","_toConsumableArray","_Material10","_this85","_Material11","_this86","_Material12","_this87","_Material13","_this88","_Material14","_this89","_LineBasicMaterial","_this90","materialLib","AnimationUtils","arraySlice","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_this91","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","getInterpolation","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","ColorKeyframeTrack","_KeyframeTrack2","NumberKeyframeTrack","_KeyframeTrack3","QuaternionLinearInterpolant","_Interpolant4","QuaternionKeyframeTrack","_KeyframeTrack4","StringKeyframeTrack","_KeyframeTrack5","VectorKeyframeTrack","_KeyframeTrack6","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","loading","FileLoader","_Loader","_this92","setTimeout","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","response","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","_ref2","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","CompressedTextureLoader","_Loader3","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","urls","DataTextureLoader","_Loader6","texData","TextureLoader","_Loader7","Light","_Object3D11","_this93","HemisphereLight","_Light","_this94","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_this95","isSpotLightShadow","SpotLight","_Light2","_this96","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_this97","_cubeDirections","_cubeUps","PointLight","_Light3","_this98","DirectionalLightShadow","_LightShadow3","_this99","isDirectionalLightShadow","DirectionalLight","_Light4","_this100","AmbientLight","_Light5","_this101","RectAreaLight","_Light6","_this102","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_this103","MaterialLoader","_Loader8","_this104","getTexture","shading","setTextures","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_this105","BufferGeometryLoader","_Loader9","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_loadAsync","_callee2","_callee2$","_context9","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context10","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_i306","_deserializedImage2","_callee5$","_context12","_deserializeImage3","_callee4","_url","_callee4$","_context11","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","setTexturePath","ImageBitmapLoader","_Loader11","_this106","isImageBitmapLoader","createImageBitmap","setOptions","fetchOptions","res","colorSpaceConversion","imageBitmap","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","_LightProbe","_this107","isHemisphereLightProbe","sky","ground","AmbientLightProbe","_LightProbe2","_this108","isAmbientLightProbe","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_this109","gain","createGain","connect","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_this110","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_this111","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_this112","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","InstancedInterleavedBuffer","_InterleavedBuffer","_this113","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_this114","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_this115","getBoneList","isSkeletonHelper","boneList","PointLightHelper","_Mesh3","sphereSize","_this116","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_this117","GridHelper","_LineSegments2","_this118","PolarGridHelper","_LineSegments3","_this119","radials","circles","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_this120","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_this121","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","_box","BoxHelper","_LineSegments5","_this122","Box3Helper","_LineSegments6","_this123","PlaneHelper","_Line3","_this124","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_this125","headLength","headWidth","setDirection","setColor","AxesHelper","_LineSegments7","_this126","setColors","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","DataUtils","toHalfFloat","val","_floatView","_uint32View","_baseTable","_shiftTable","fromHalfFloat","_mantissaTable","_offsetTable","_exponentTable","_buffer","ParametricGeometry","_BufferGeometry17","TextGeometry","_BufferGeometry18","FontLoader","Font","ImmediateRenderObject","WebGLMultisampleRenderTarget","_WebGLRenderTarget5","_this127","DataTexture2DArray","_DataArrayTexture","DataTexture3D","_Data3DTexture","revision","__THREE__","_three","require","_changeEvent","_startEvent","_endEvent","OrbitControls","touchAction","minDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","UP","BOTTOM","mouseButtons","touches","ONE","TWO","target0","position0","zoom0","_domElementKeyEvents","getPolarAngle","spherical","getAzimuthalAngle","getDistance","listenToKeyEvents","onKeyDown","saveState","STATE","NONE","quat","quatInverse","lastPosition","lastQuaternion","twoPI","rotateLeft","getAutoRotationAngle","sphericalDelta","panOffset","zoomChanged","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","ctrlKey","metaKey","shiftKey","trackPointer","pointer","passive","MapControls","THREE","_interopRequireWildcard","_getRequireWildcardCache","__esModule","default","getOwnPropertyDescriptor","pencil","u_time","u_frame","u_resolution","innerWidth","innerHeight","devicePixelRatio","u_mouse","getElementById","textContent","_default","stripes","CENTER","AVERAGE","SAH","NOT_INTERSECTED","INTERSECTED","CONTAINED","TRIANGLE_INTERSECT_COST","TRAVERSAL_COST","BYTES_PER_NODE","IS_LEAFNODE_FLAG","FLOAT32_EPSILON","MeshBVHNode","arrayToBox","nodeIndex32","getLongestEdgeIndex","bounds","splitDimIdx","splitDist","dist","copyBounds","unionBounds","aVal","bVal","expandByTriangleBounds","triangleBounds","tCenter","tHalf","tMin","tMax","computeSurfaceArea","_MeshBVHNode","_ArrayBoxUtilities","_Constants","ensureIndex","geo","vertexCount","BufferConstructor","useSharedArrayBuffer","SharedArrayBuffer","getRootIndexRanges","ranges","rangeBoundaries","sortedBoundaries","getBounds","centroidTarget","minx","miny","minz","maxx","maxy","maxz","cminx","cminy","cminz","cmaxx","cmaxy","cmaxz","includeCentroid","lx","rx","ly","ry","cz","hz","lz","rz","getCentroidBounds","partition","pos","axisOffset","BIN_COUNT","binsSort","candidate","sahBins","rightCacheBounds","leftCacheBounds","leftBounds","getOptimalSplit","nodeBoundingData","centroidBoundingData","strategy","getAverage","rootSurfaceArea","bestCost","cStart","cEnd","axisLeft","axisRight","axisLength","binWidth","truncatedBins","bin","splitCount","bi","leftCount","rightCount","rightBounds","leftProb","rightProb","cost","triCenter","relativeCenter","binIndex","lastBin","nextBin","binCount","avg","computeTriangleBounds","fullBounds","posAttr","triCount","posArr","bufferOffset","getters","tri","tri3","tri6","ai","ci","el","halfExtents","el2","buildTree","triggerProgress","trianglesProcessed","totalTriangles","splitNode","reachedMaxDepth","maxDepth","verbose","maxLeafTris","boundingData","splitOffset","splitAxis","lstart","lcount","cacheCentroidBoundingData","rstart","rcount","roots","buildPackedTree","uint32Array","uint16Array","packedRoots","nodeCount","countNodes","populateBuffer","byteOffset","stride4Offset","stride2Offset","isLeaf","nextUnusedPointer","SeparatingAxisBounds","setFromPointsField","field","isSeparated","setFromBox","boxMin","boxMax","areIntersecting","cacheSatBounds","shape1","shape2","points1","satAxes1","satAxes","satBounds1","satBounds","points2","satAxes2","satBounds2","sb","sa","closestPointLineToLine","dir1","dir2","v02","l1","l2","v10","v32","d0232","d3210","d3232","d0210","d1010","closestPointsSegmentToSegment","paramResult","temp1","temp2","target1","target2","closestPoint","closestPoint2","sphereIntersectTriangle","closestPointTemp","projectedPointTemp","planeTemp","lineTemp","closestPoint1","closestPoint3","dp","cp","_SeparatingAxisBounds","_MathUtilities","DIST_EPSILON","isNearZero","ExtendedTriangle","args","isExtendedTriangle","axis0","sab0","axis1","sab1","axis2","sab2","axis3","sab3","closestPointToSegment","point1","point2","edge","distanceToSegment","closestDistanceSq","nexti","saTri2","arr1","arr2","cachedSatBounds","cachedSatBounds2","cachedAxis","tempDir","edge1","edge2","plane1","plane2","sa1","sa2","found1","count1","pNext","targetPoint","startIntersects","doesIntersect","found2","count2","e1","e2","separated1","separated2","distanceToTriangle","cornerFields","line1","line2","lineTarget","otherVec","thisVec","f11","f12","f21","f22","_ExtendedTriangle","OrientedBox","isOrientedBox","invMatrix","alignedSatBounds","minVec","pi","aabbBounds","saTri","pointsArr","triSatBounds","triSatAxes","distanceToBox","xyzFields","segments1","segments2","threshold2","nextIndex2","f1","f2","intersectionPoint","intersectTri","intersections","triOffset","_ThreeRayIntersectUtilities","intersectTris","intersectClosestTri","convertRaycastIntersect","hit","setTriangle","ta","tb","tc","iterateOverTriangles","intersectsTriangleFunc","contained","tempV1","tempV2","tempV3","tempUV1","tempUV2","tempUV3","getTriangleHitPointInfo","triangleIndex","firstVertexIndex","PrimitivePool","getNewPrimitive","_getNewPrimitive","_primitives","getPrimitive","primitives","releasePrimitive","primitive","IS_LEAF","n16","OFFSET","COUNT","LEFT_NODE","RIGHT_NODE","SPLIT_AXIS","BOUNDING_DATA_INDEX","_OrientedBox","_GeometryRayIntersectUtilities","_TriangleUtilities","_PrimitivePool","_nodeBufferFunctions","boxIntersection","nodeIndex16","_float32Array","_uint16Array","_uint32Array","leftIndex","intersectRay","rightIndex","raycastFirst","xyzAxis","rayDir","leftToRight","c1Intersection","c1Result","isOutside","c2Intersection","c2Result","shapecast","_box1","_box2","boxStack","boxPool","shapecastTraverse","intersectsBoundsFunc","intersectsRangeFunc","nodeScoreFunc","nodeIndexByteOffset","getLeftOffset","getRightEndOffset","score1","score2","box1","box2","temp","isC1Leaf","c1StopTraversal","isC2Leaf","c2StopTraversal","intersectsGeometry","triangle2","invertedMat","obb","obb2","otherGeometry","geometryToBvh","cachedObb","thisGeometry","thisIndex","thisPos","boundsTree","intersectsBounds","leftIntersection","rightIntersection","bufferStack","_prevBuffer","clearBuffer","_buildFunctions","_castFunctions","SKIP_GENERATION","aabb","aabb2","tempMatrix","temp3","temp4","tempBox","trianglePool","MeshBVH","bvh","cloneBuffers","rootData","_roots","indexAttribute","deserialize","newIndex","setBoundingBox","refit","nodeIndices","_traverse","node32Index","node16Index","offsetLeft","offsetRight","forceChildren","includesLeft","includesRight","traverseLeft","traverseRight","leftChange","rightChange","didChange","lefti","righti","minLeftValue","maxLeftValue","minRightValue","maxRightValue","rootIndex","stopTraversal","materialOrSide","isArrayMaterial","materialSide","startCount","closestResult","geomToMesh","_intersectsTriangleFunc","_orderNodesFunc","Function","originalTriangleFunc","i3","boundsTraverseOrder","intersectsRange","originalIntersectsRange","nodeIndex","bvhcast","otherBvh","matrixToLocal","intersectsRanges","intersectsTriangles","otherIndexAttr","otherPositionAttr","iterateOverDoubleTriangles","offset2","depth1","depth2","originalIntersectsRanges","nodeIndex1","nodeIndex2","boxToMesh","closestPointToGeometry","minThreshold","maxThreshold","otherPos","otherIndex","tempTarget1","tempTargetDest1","tempTarget2","tempTargetDest2","closestDistance","closestDistanceTriIndex","closestDistanceOtherTriIndex","score","otherOffset","otherCount","minThresholdSq","maxThresholdSq","triIndex","MeshBVHRootVisualizer","displayEdges","displayParents","_group","targetDepth","boundsCount","posIndex","positionArray","terminate","xVal","yVal","zVal","indexLength","posOffset","MeshBVHVisualizer","edgeMaterial","meshMaterial","totalRoots","_vec","getPrimitiveSize","arr","getRootExtremes","leafNodeCount","tris","splits","surfaceAreaScore","offsetOrSplit","l0","surfaceArea","getBVHExtremes","estimateMemoryInBytes","obj","traversed","stack","bytes","curr","validateBounds","depthStack","passes","isContained","assert","getJSONStructure","_MeshBVH","tmpInverseMatrix","origMeshRaycastFunc","acceleratedRaycast","firstHitOnly","hits","computeBoundsTree","disposeBoundsTree","countToStringFormat","countToFormat","countToIntFormat","VertexAttributeTexture","overrideItemSize","_forcedType","updateFrom","attr","originalItemSize","originalCount","originalBufferCons","byteCount","targetType","finalStride","normalizeValue","targetBufferCons","dimension","dataArray","originalNormalized","ii","UIntVertexAttributeTexture","IntVertexAttributeTexture","FloatVertexAttributeTexture","_VertexAttributeTexture","bvhToTextures","boundsTexture","contentsTexture","boundsDimension","boundsArray","contentsDimension","contentsArray","boundsIndex","mergedLeafCount","MeshBVHUniformStruct","autoDispose","bvhBounds","bvhContents","shaderStructs","shaderIntersectFunction","shaderDistanceFunction","_positionVector","_normalVector","_tangentVector","_tangentVector4","_morphVector","_temp","validateAttributes","attr1","attr2","sameCount","sameNormalized","sameType","sameItemSize","createAttributeClone","countOverride","cons","copyAttributeContents","io","addScaledMatrix","matrixArray","boneNormalTransform","applyMorphTarget","morphData","mergeBufferGeometries","useGroups","updateIndex","targetGeometry","isIndexed","attributesUsed","attributesCount","forceUpateIndex","attrList","targetAttribute","StaticGeometryGenerator","meshes","finalMeshes","applyWorldTransforms","_intermediateGeometry","getMaterials","generate","geom","_convertToStaticGeometry","includeNormal","includes","includeTangent","targetAttributes","morphTangent","_MeshBVHVisualizer","_Debug","_ExtensionUtilities","_exportNames","_MeshBVHUniformStruct","_shaderFunctions","_StaticGeometryGenerator","_vertices","hashNumber","hashVertex","HalfEdgeMap","unmatchedEdges","matchedEdges","useDrawRange","getSiblingTriangleIndex","edgeIndex","getSiblingEdgeIndex","maxTriCount","nextE","_vec0","_vec1","vh0","vh1","areSharedArrayBuffersSupported","convertToSharedArrayBuffer","sharedBuffer","uintArray","sharedUintArray","_threeMeshBvh","_HalfEdgeMap","_utils","Brush","isBrush","_previousMatrix","markUpdated","isDirty","el1","prepareGeometry","halfEdges","groupIndices","lg","disposeCacheData","IntersectionMap","intersectionSet","ids","intersectionId","ADDITION","SUBTRACTION","DIFFERENCE","INTERSECTION","_IntersectionMap","_constants","_tri","_vec3","_vec4a","_vec4b","_vec4c","_vec4_0","_vec4_1","_vec4_2","_edge","JITTER_EPSILON","COPLANAR","BACK_SIDE","FRONT_SIDE","INVERT_TRI","ADD_TRI","SKIP_TRI","_debugContext","setDebugContext","debugData","getHitSide","rand","hitBackSide","Boolean","collectIntersectingTriangles","aIntersections","bIntersections","triangleA","triangleB","ia","addEdge","addIntersectingTriangles","appendAttributeFromTriangle","baryCoordTri","attributeInfo","pushBarycoordInterpolatedValues","appendAttributesFromIndices","appendAttributeFromIndex","getOperationAction","operation","hitSide","attrArr","addValues","_operationsUtils","COPLANAR_EPSILON","_foundEdge","_planeNormal","_plane","_exTriangle","isTriDegenerate","CullableTriangle","originalSide","coplanarCount","initFrom","updateSide","coplanarIndex","foundSide","TrianglePool","_pool","_index","getTriangle","TriangleSplitter","initialize","poolTri","splitByTriangle","splitByPlane","splittingTriangle","vertexSplitEnd","positiveSide","onPlane","coplanarEdge","startDist","endDist","didIntersect","otherVert1","otherVert2","nextTri","singleVert","findIndex","nextVert1","nextVert2","nextTri1","nextTri2","TypeBackedArray","initialSize","expansionFactor","expand","newArray","_TypeBackedArray","TypedAttributeData","groupAttributes","getType","getTotalLength","attrSet","getGroupSet","rootAttrSet","newAttrSet","getGroupArray","referenceAttr","initializeArray","rootSet","TriangleIntersectData","addTriangle","getIntersectArray","TriangleIntersectionSets","addTriangleIntersection","triA","triB","getTrianglesAsArray","getTriangleIndices","getIntersectionIndices","getIntersectionsAsArray","id2","triSet","addTriangles","key2","OperationDebugData","triangleIntersectsA","triangleIntersectsB","intersectionEdges","_triA","_triB","_barycoordTri","getFirstIdFromSet","performOperation","splitter","typedAttributeData","resultGroups","resultMaterials","groupOffset","performWholeTriangleOperations","performSplitTriangleOperations","intersectionMap","aIndex","aPosition","bBVH","bIndex","bPosition","splitIds","groupIndex","ia3","ia0","ia1","ia2","intersectingIndices","ib3","ib0","ib1","ib2","clippedTri","splitTriSet","aAttributes","traverseSet","currId","sid","_TriangleSplitter","_TypedAttributeData","_OperationDebugData","_operations","_Brush","applyToGeometry","referenceGeometry","needsDisposal","requiredLength","refAttr","trimmedArray","posCount","getMaterialList","Evaluator","triangleSplitter","attributeData","targetBrush","aGroups","bGroups","aMaterials","bMaterials","materialMap","allMaterials","foundGroup","evaluateHierarchy","flatTraverse","isOperationGroup","brush","_cachedGeometry","_cachedMaterials","Operation","isOperation","_previousOperation","insertBefore","insertAfter","OperationGroup","addWorldPosition","csgGridShaderMixin","checkerboardColor","CSG_GRID","_shaderUtils","GridMaterial","enableGrid","_enableGrid","getTriangleDefinitions","getVectorDefinition","logTriangleDefinitions","generateRandomTriangleColors","TriangleSetHelper","lineGeom","_lines","setTriangles","triPositions","linePositions","i9","i18","EdgesHelper","setEdges","flatMap","PointsHelper","setPoints","_EdgesHelper","_tri1","_tri2","_center2","_edgeCenter","_edgeCenter2","_projected","_projected2","_projectedDir","_projectedDir2","_edgeDir","_edgeDir2","_vec2","_finalPoint","_finalPoint2","_plane2","HalfEdgeHelper","setHalfEdges","otherTriIndex","otherEdgeIndex","_Evaluator","_Operation","_OperationGroup","_GridMaterial","_debugUtils","_TriangleSetHelper","_PointsHelper","_HalfEdgeHelper","bundleURL","getBundleURLCached","getBundleURL","getBaseURL","bundle","updateLink","link","newLink","cloneNode","onload","href","parentNode","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","module","OVERLAY_ID","OldModule","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","overlay","createErrorOverlay","appendChild","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","deps","some"],"mappings":"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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2010-2022 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '141';\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst FlatShading = 1;\nconst SmoothShading = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [];\n\nfor ( let i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize$1( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nvar MathUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize$1\n});\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tthis.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor() {\n\n\t\tthis.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tscale( sx, sy ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tconst te = this.elements;\n\n\t\tconst a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tconst a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] > 65535 ) return true;\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\n// JavaScript RGB-to-RGB transforms, defined as\n// FN[InputColorSpace][OutputColorSpace] callback functions.\nconst FN = {\n\t[ SRGBColorSpace ]: { [ LinearSRGBColorSpace ]: SRGBToLinear },\n\t[ LinearSRGBColorSpace ]: { [ SRGBColorSpace ]: LinearToSRGB },\n};\n\nconst ColorManagement = {\n\n\tlegacyMode: true,\n\n\tget workingColorSpace() {\n\n\t\treturn LinearSRGBColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.legacyMode || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tif ( FN[ sourceColorSpace ] && FN[ sourceColorSpace ][ targetColorSpace ] !== undefined ) {\n\n\t\t\tconst fn = FN[ sourceColorSpace ][ targetColorSpace ];\n\n\t\t\tcolor.r = fn( color.r );\n\t\t\tcolor.g = fn( color.g );\n\t\t\tcolor.b = fn( color.b );\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tthrow new Error( 'Unsupported color space conversion.' );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t},\n\n};\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _rgb = { r: 0, g: 0, b: 0 };\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction toComponents( source, target ) {\n\n\ttarget.r = source.r;\n\ttarget.g = source.g;\n\ttarget.b = source.b;\n\n\treturn target;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = LinearSRGBColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = LinearSRGBColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tconst l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l, colorSpace );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\treturn clamp( _rgb.r * 255, 0, 255 ) << 16 ^ clamp( _rgb.g * 255, 0, 255 ) << 8 ^ clamp( _rgb.b * 255, 0, 255 ) << 0;\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = LinearSRGBColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\tconst r = _rgb.r, g = _rgb.g, b = _rgb.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = LinearSRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\ttarget.r = _rgb.r;\n\t\ttarget.g = _rgb.g;\n\t\ttarget.b = _rgb.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ _rgb.r } ${ _rgb.g } ${ _rgb.b })`;\n\n\t\t}\n\n\t\treturn `rgb(${( _rgb.r * 255 ) | 0},${( _rgb.g * 255 ) | 0},${( _rgb.b * 255 ) | 0})`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\tif ( attribute.normalized === true ) {\n\n\t\t\t// assuming Uint8Array\n\n\t\t\tthis.r /= 255;\n\t\t\tthis.g /= 255;\n\t\t\tthis.b /= 255;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.prototype.slice.call( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width, height, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, depth ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, depth ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width, height, count, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.set( 0, 0, this.width, this.height );\n\t\tthis.scissor.set( 0, 0, this.width, this.height );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerp( qa, qb, qm, t ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.' );\n\t\treturn qm.slerpQuaternions( qa, qb, t );\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tthis.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( precise && geometry.attributes != undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t_vector$b.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t}\n\n\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$3 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$3.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$3, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$3 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$b.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _toFarthestPoint = /*@__PURE__*/ new Vector3();\nconst _toPoint = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n\n\t\t_toPoint.subVectors( point, this.center );\n\n\t\tconst lengthSq = _toPoint.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\t\t\tconst missingRadiusHalf = ( length - this.radius ) * 0.5;\n\n\t\t\t// Nudge this sphere towards the target point. Add half the missing distance to radius,\n\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\n\t\t\t// the whole missing distance were just added to radius.\n\n\t\t\tthis.center.add( _toPoint.multiplyScalar( missingRadiusHalf / length ) );\n\t\t\tthis.radius += missingRadiusHalf;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n\n\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\n\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\n\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\n\n\t\t if ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t _toFarthestPoint.set( 0, 0, 1 ).multiplyScalar( sphere.radius );\n\n\n\t\t} else {\n\n\t\t\t_toFarthestPoint.subVectors( sphere.center, this.center ).normalize().multiplyScalar( sphere.radius );\n\n\t\t}\n\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _toFarthestPoint ) );\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _toFarthestPoint ) );\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tthis.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n\t// @deprecated since r138, 02cf0df1cb4575d5842fef9c85bb5a89fe020d53\n\n\ttoVector3() {\n\n\t\tconsole.error( 'THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead' );\n\n\t}\n\n}\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3$1.x );\n\t\ttarget.addScaledVector( uv2, _v3$1.y );\n\t\ttarget.addScaledVector( uv3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatibility if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\t// @deprecated since r131, f5803c62cc4a29d90744e9dc7811d086e354c1d8\n\n\tget vertexTangents() {\n\n\t\tconsole.warn( 'THREE.' + this.type + ': .vertexTangents has been removed.' );\n\t\treturn false;\n\n\t}\n\n\tset vertexTangents( value ) {\n\n\t\tconsole.warn( 'THREE.' + this.type + ': .vertexTangents has been removed.' );\n\n\t}\n\n}\n\nMaterial.fromType = function ( /*type*/ ) {\n\n\t// TODO: Behavior added in Materials.js\n\n\treturn null;\n\n};\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tcopyColorsArray( colors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tlet color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector2sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector3sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector4sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tmerge( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tconst attribute1 = attributes[ key ];\n\t\t\tconst attributeArray1 = attribute1.array;\n\n\t\t\tconst attribute2 = geometry.attributes[ key ];\n\t\t\tconst attributeArray2 = attribute2.array;\n\n\t\t\tconst attributeOffset = attribute2.itemSize * offset;\n\t\t\tconst length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\tfor ( let i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\t return new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\t// geometry generator parameters\n\n\t\tif ( source.parameters !== undefined ) this.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _tempB = /*@__PURE__*/ new Vector3();\nconst _tempC = /*@__PURE__*/ new Vector3();\n\nconst _morphA = /*@__PURE__*/ new Vector3();\nconst _morphB = /*@__PURE__*/ new Vector3();\nconst _morphC = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tlet intersection;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv2 = geometry.attributes.uv2;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t_vA$1.fromBufferAttribute( position, a );\n\t_vB$1.fromBufferAttribute( position, b );\n\t_vC$1.fromBufferAttribute( position, c );\n\n\tconst morphInfluences = object.morphTargetInfluences;\n\n\tif ( morphPosition && morphInfluences ) {\n\n\t\t_morphA.set( 0, 0, 0 );\n\t\t_morphB.set( 0, 0, 0 );\n\t\t_morphC.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\tconst influence = morphInfluences[ i ];\n\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t} else {\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA$1 ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB$1 ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC$1 ), influence );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_vA$1.add( _morphA );\n\t\t_vB$1.add( _morphB );\n\t\t_vC$1.add( _morphC );\n\n\t}\n\n\tif ( object.isSkinnedMesh ) {\n\n\t\tobject.boneTransform( a, _vA$1 );\n\t\tobject.boneTransform( b, _vB$1 );\n\t\tobject.boneTransform( c, _vC$1 );\n\n\t}\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv2, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv2, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = 90, aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget !== true ) {\n\n\t\t\tconsole.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst currentToneMapping = renderer.toneMapping;\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.toneMapping = currentToneMapping;\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$2.center.set( 0, 0, 0 );\n\t\t_sphere$2.radius = 0.7071067811865476;\n\t\t_sphere$2.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = 5131;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\n#ifdef USE_IRIDESCENCE\\nvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = mix(F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence);\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\n#endif\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\nconst mat3 XYZ_TO_REC709 = mat3(\\n    3.2404542, -0.9692660,  0.0556434,\\n   -1.5371385,  1.8760108, -0.2040259,\\n   -0.4985314,  0.0415560,  1.0572252\\n);\\nvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n   vec3 sqrtF0 = sqrt( fresnel0 );\\n   return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n}\\nvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n   return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n}\\nfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n   return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n}\\nvec3 evalSensitivity( float OPD, vec3 shift ) {\\n   float phase = 2.0 * PI * OPD * 1.0e-9;\\n   vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n   vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n   vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n   vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( -pow2( phase ) * var );\\n   xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[0] ) * exp( -4.5282e+09 * pow2( phase ) );\\n   xyz /= 1.0685e-7;\\n   vec3 srgb = XYZ_TO_REC709 * xyz;\\n   return srgb;\\n}\\nvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n   vec3 I;\\n   float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n   float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n   float cosTheta2Sq = 1.0 - sinTheta2Sq;\\n   if ( cosTheta2Sq < 0.0 ) {\\n       return vec3( 1.0 );\\n   }\\n   float cosTheta2 = sqrt( cosTheta2Sq );\\n   float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n   float R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n   float R21 = R12;\\n   float T121 = 1.0 - R12;\\n   float phi12 = 0.0;\\n   if ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n   float phi21 = PI - phi12;\\n   vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );   vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n   vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n   vec3 phi23 = vec3( 0.0 );\\n   if ( baseIOR[0] < iridescenceIOR ) phi23[0] = PI;\\n   if ( baseIOR[1] < iridescenceIOR ) phi23[1] = PI;\\n   if ( baseIOR[2] < iridescenceIOR ) phi23[2] = PI;\\n   float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n   vec3 phi = vec3( phi21 ) + phi23;\\n   vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n   vec3 r123 = sqrt( R123 );\\n   vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n   vec3 C0 = R12 + Rs;\\n   I = C0;\\n   vec3 Cm = Rs - T121;\\n   for ( int m = 1; m <= 2; ++m ) {\\n       Cm *= r123;\\n       vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n       I += Cm * Sm;\\n   }\\n   return max( I, vec3( 0.0 ) );\\n}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\\t#endif\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\\n\\t#else\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\nfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\\nif ( material.iridescenceThickness == 0.0 ) {\\n\\tmaterial.iridescence = 0.0;\\n} else {\\n\\tmaterial.iridescence = saturate( material.iridescence );\\n}\\nif ( material.iridescence > 0.0 ) {\\n\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tfloat transmissionAlpha = 1.0;\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\\n\\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef texture2DLodEXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( attenuationDistance == 0.0 ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$g = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$g = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tgl_FragColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\\n\\t#endif\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\toutput_fragment: output_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$g,\n\tbackground_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\t\tuv2Transform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 } // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionSamplerSize: { value: new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: new Color( 0x000000 ) },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularColor: { value: new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nfunction WebGLBackground( renderer, cubemaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tbackground = cubemaps.get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( 34921 );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( 34930 );\n\tconst maxVertexTextures = gl.getParameter( 35660 );\n\tconst maxTextureSize = gl.getParameter( 3379 );\n\tconst maxCubemapSize = gl.getParameter( 34076 );\n\n\tconst maxAttributes = gl.getParameter( 34921 );\n\tconst maxVertexUniforms = gl.getParameter( 36347 );\n\tconst maxVaryings = gl.getParameter( 36348 );\n\tconst maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tencoding: LinearEncoding,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction denormalize( morph, attribute ) {\n\n\tlet denominator = 1;\n\tconst array = attribute.isInterleavedBufferAttribute ? attribute.data.array : attribute.array;\n\n\tif ( array instanceof Int8Array ) denominator = 127;\n\telse if ( array instanceof Int16Array ) denominator = 32767;\n\telse if ( array instanceof Int32Array ) denominator = 2147483647;\n\telse console.error( 'THREE.WebGLMorphtargets: Unsupported morph attribute data type: ', array );\n\n\tmorph.divideScalar( denominator );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tif ( morphTarget.normalized === true ) denormalize( morph, morphTarget );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tif ( morphNormal.normalized === true ) denormalize( morph, morphNormal );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tif ( morphColor.normalized === true ) denormalize( morph, morphColor );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nconst emptyTexture = new Texture();\nconst emptyArrayTexture = new DataArrayTexture();\nconst empty3dTexture = new Data3DTexture();\nconst emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, 35718 );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, 35713 );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === 35674 ) locationSize = 2;\n\t\tif ( info.type === 35675 ) locationSize = 3;\n\t\tif ( info.type === 35676 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string\n\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n}\n\nfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\treturn loopReplacer( match, start, end, snippet );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error(\n\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, 35715 ) + '\\n\\n' +\n\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\tfragmentErrors\n\t\t\t);\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\n\t\tif ( cache.has( material ) === false ) {\n\n\t\t\tcache.set( material, new Set() );\n\n\t\t}\n\n\t\treturn cache.get( material );\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\n\t\tif ( cache.has( code ) === false ) {\n\n\t\t\tconst stage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn cache.get( code );\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst vertexTextures = capabilities.vertexTextures;\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst useAlphaTest = material.alphaTest > 0;\n\t\tconst useClearcoat = material.clearcoat > 0;\n\t\tconst useIridescence = material.iridescence > 0;\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget === null ) ? renderer.outputEncoding : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding ),\n\t\t\tmap: !! material.map,\n\t\t\tmatcap: !! material.matcap,\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tdecodeVideoTexture: !! material.map && ( material.map.isVideoTexture === true ) && ( material.map.encoding === sRGBEncoding ),\n\n\t\t\tclearcoat: useClearcoat,\n\t\t\tclearcoatMap: useClearcoat && !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: useClearcoat && !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: useClearcoat && !! material.clearcoatNormalMap,\n\n\t\t\tiridescence: useIridescence,\n\t\t\tiridescenceMap: useIridescence && !! material.iridescenceMap,\n\t\t\tiridescenceThicknessMap: useIridescence && !! material.iridescenceThicknessMap,\n\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\tspecularIntensityMap: !! material.specularIntensityMap,\n\t\t\tspecularColorMap: !! material.specularColorMap,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: !! material.alphaMap,\n\t\t\talphaTest: useAlphaTest,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: material.sheen > 0,\n\t\t\tsheenColorMap: !! material.sheenColorMap,\n\t\t\tsheenRoughnessMap: !! material.sheenRoughnessMap,\n\n\t\t\ttransmission: material.transmission > 0,\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\t\t\tthicknessMap: !! material.thicknessMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( !! material.normalMap && !! geometry.attributes.tangent ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || !! material.displacementMap || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || !! material.sheenColorMap || !! material.sheenRoughnessMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || material.transmission > 0 || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || material.sheen > 0 || !! material.sheenColorMap || !! material.sheenRoughnessMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: !! material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: !! material.depthPacking,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputEncoding );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputEncoding );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.vertexUvs );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.map )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.lightMap )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.aoMap )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.emissiveMap )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.bumpMap )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.normalMap )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.objectSpaceNormalMap )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.tangentSpaceNormalMap )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.clearcoatMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.clearcoatRoughnessMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.clearcoatNormalMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.iridescenceMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.iridescenceThicknessMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.displacementMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.specularMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.roughnessMap )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.metalnessMap )\n\t\t\t_programLayers.enable( 24 );\n\t\tif ( parameters.gradientMap )\n\t\t\t_programLayers.enable( 25 );\n\t\tif ( parameters.alphaMap )\n\t\t\t_programLayers.enable( 26 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 27 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 28 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 29 );\n\t\tif ( parameters.vertexUvs )\n\t\t\t_programLayers.enable( 30 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 31 );\n\t\tif ( parameters.uvsVertexOnly )\n\t\t\t_programLayers.enable( 32 );\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 33 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.physicallyCorrectLights )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.specularIntensityMap )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.specularColorMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.transmissionMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.thicknessMap )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.sheenColorMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.sheenRoughnessMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 23 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tlet list;\n\n\t\tif ( lists.has( scene ) === false ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= lists.get( scene ).length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlists.get( scene ).push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = lists.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, physicallyCorrectLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\n\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( physicallyCorrectLights ) {\n\n\t\tlights.setup( lightsArray, physicallyCorrectLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tlet renderState;\n\n\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStates.get( scene ).length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStates.get( scene ).push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t}\n\n\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0 ) ||\n\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t( material.alphaMap && material.alphaTest > 0 ) ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( 35661 );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( 3088 );\n\tconst viewportParam = gl.getParameter( 2978 );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// 36009 is equivalent to 36160\n\n\t\t\t\tif ( target === 36009 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36160 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === 36160 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36009 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = 36064 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = 36064;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== 1029 ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = 1029;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: 32774,\n\t\t[ SubtractEquation ]: 32778,\n\t\t[ ReverseSubtractEquation ]: 32779\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = 32775;\n\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: 0,\n\t\t[ OneFactor ]: 1,\n\t\t[ SrcColorFactor ]: 768,\n\t\t[ SrcAlphaFactor ]: 770,\n\t\t[ SrcAlphaSaturateFactor ]: 776,\n\t\t[ DstColorFactor ]: 774,\n\t\t[ DstAlphaFactor ]: 772,\n\t\t[ OneMinusSrcColorFactor ]: 769,\n\t\t[ OneMinusSrcAlphaFactor ]: 771,\n\t\t[ OneMinusDstColorFactor ]: 775,\n\t\t[ OneMinusDstAlphaFactor ]: 773\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( 32926 )\n\t\t\t: disable( 32926 );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( 3042 );\n\t\tgl.disable( 2884 );\n\t\tgl.disable( 2929 );\n\t\tgl.disable( 32823 );\n\t\tgl.disable( 3089 );\n\t\tgl.disable( 2960 );\n\t\tgl.disable( 32926 );\n\n\t\tgl.blendEquation( 32774 );\n\t\tgl.blendFunc( 1, 0 );\n\t\tgl.blendFuncSeparate( 1, 0, 1, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( 513 );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( 519, 0, 0xffffffff );\n\t\tgl.stencilOp( 7680, 7680, 7680 );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( 1029 );\n\t\tgl.frontFace( 2305 );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( 33984 );\n\n\t\tgl.bindFramebuffer( 36160, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( 36009, null );\n\t\t\tgl.bindFramebuffer( 36008, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, encoding, isVideoTexture = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 33319 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33328;\n\t\t\tif ( glType === 5131 ) internalFormat = 33327;\n\t\t\tif ( glType === 5121 ) internalFormat = 33323;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = ( encoding === sRGBEncoding && isVideoTexture === false ) ? 35907 : 32856;\n\t\t\tif ( glType === 32819 ) internalFormat = 32854;\n\t\t\tif ( glType === 32820 ) internalFormat = 32855;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 33327 || internalFormat === 33328 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.encoding );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: 10497,\n\t\t[ ClampToEdgeWrapping ]: 33071,\n\t\t[ MirroredRepeatWrapping ]: 33648\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: 9728,\n\t\t[ NearestMipmapNearestFilter ]: 9984,\n\t\t[ NearestMipmapLinearFilter ]: 9986,\n\n\t\t[ LinearFilter ]: 9729,\n\t\t[ LinearMipmapNearestFilter ]: 9985,\n\t\t[ LinearMipmapLinearFilter ]: 9987\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = 3553;\n\n\t\tif ( texture.isDataArrayTexture ) textureType = 35866;\n\t\tif ( texture.isData3DTexture ) textureType = 32879;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\tif ( source.version !== source.__currentVersion || forceUpload === true ) {\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( source.__currentVersion === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = 6402;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 35866, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 35866, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 32879, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 32879, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsource.__currentVersion = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\tif ( source.version !== source.__currentVersion || forceUpload === true ) {\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( source.__currentVersion === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tsource.__currentVersion = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tif ( textureTarget === 32879 || textureTarget === 35866 ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else {\n\n\t\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = 33189;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 36096, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 33306, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, 36064, 3553 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( 3553, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 3553, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, 36064 + i, 3553 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 3553 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = 3553;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? 32879 : 35866;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, 36064, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = 16384;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? 33306 : 36096;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, null );\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( 36064 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36008, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( 36009, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, null );\n\t\t\tstate.bindFramebuffer( 36009, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst encoding = texture.encoding;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( encoding !== LinearEncoding ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture encoding:', encoding );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, encoding = null ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\tif ( p === RGBFormat ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228' );\n\t\t\treturn 6408;\n\n\t\t}\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return 36244;\n\t\tif ( p === RGFormat ) return 33319;\n\t\tif ( p === RGIntegerFormat ) return 33320;\n\t\tif ( p === RGBAIntegerFormat ) return 36249;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\t\t\t\t\t\t// ??\n\t\t\t\t\t\thand.add( joint );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst joint = hand.joints[ inputjoint.jointName ];\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst inputSourcesMap = new Map();\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controller = inputSourcesMap.get( event.inputSource );\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tinputSourcesMap.forEach( function ( controller, inputSource ) {\n\n\t\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\t\tcontroller.disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tinputSourcesMap.clear();\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? 35056 : 33190;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: ( renderer.outputEncoding === sRGBEncoding ) ? 35907 : 32856,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\t// Set foveation to maximum.\n\t\t\t\tthis.setFoveation( 1.0 );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\tconst inputSources = session.inputSources;\n\n\t\t\t// Assign controllers to available inputSources\n\n\t\t\tfor ( let i = 0; i < inputSources.length; i ++ ) {\n\n\t\t\t\tconst index = inputSources[ i ].handedness === 'right' ? 1 : 0;\n\t\t\t\tinputSourcesMap.set( inputSources[ i ], controllers[ index ] );\n\n\t\t\t}\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\t\tinputSourcesMap.delete( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\tcameraVR.matrixWorld.decompose( cameraVR.position, cameraVR.quaternion, cameraVR.scale );\n\n\t\t\t// update user camera and its children\n\n\t\t\tcamera.position.copy( cameraVR.position );\n\t\t\tcamera.quaternion.copy( cameraVR.quaternion );\n\t\t\tcamera.scale.copy( cameraVR.scale );\n\t\t\tcamera.matrix.copy( cameraVR.matrix );\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\treturn glProjLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\treturn glBaseLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( foveation ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst inputSources = session.inputSources;\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = inputSources[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer.physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\t\t// 13. iridescence map\n\t\t// 14. iridescence thickness map\n\t\t// 15. specular intensity map\n\t\t// 16. specular tint map\n\t\t// 17. transmission map\n\t\t// 18. thickness map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t} else if ( material.iridescenceMap ) {\n\n\t\t\tuvScaleMap = material.iridescenceMap;\n\n\t\t} else if ( material.iridescenceThicknessMap ) {\n\n\t\t\tuvScaleMap = material.iridescenceThicknessMap;\n\n\t\t} else if ( material.specularIntensityMap ) {\n\n\t\t\tuvScaleMap = material.specularIntensityMap;\n\n\t\t} else if ( material.specularColorMap ) {\n\n\t\t\tuvScaleMap = material.specularColorMap;\n\n\t\t} else if ( material.transmissionMap ) {\n\n\t\t\tuvScaleMap = material.transmissionMap;\n\n\t\t} else if ( material.thicknessMap ) {\n\n\t\t\tuvScaleMap = material.thicknessMap;\n\n\t\t} else if ( material.sheenColorMap ) {\n\n\t\t\tuvScaleMap = material.sheenColorMap;\n\n\t\t} else if ( material.sheenRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.sheenRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t}\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters = {} ) {\n\n\tthis.isWebGLRenderer = true;\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet _alpha;\n\n\tif ( _context !== null ) {\n\n\t\t_alpha = _context.getContextAttributes().alpha;\n\n\t} else {\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false;\n\n\t}\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\tconst renderListStack = [];\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t//\n\n\tObject.defineProperties( this, {\n\n\t\t// @deprecated since r136, 0e21088102b4de7e0a0a33140620b7a3424b9e6d\n\n\t\tgammaFactor: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\n\t\t\t\treturn 2;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// transmission\n\n\tlet _transmissionRenderTarget = null;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector2 = new Vector2();\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: true,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\tif ( 'setAttribute' in _canvas ) _canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t_canvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\textensions.init( capabilities );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, state, objects, _alpha, _premultipliedAlpha );\n\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.shadowMap = shadowMap;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color ) bits |= 16384;\n\t\tif ( depth ) bits |= 256;\n\t\tif ( stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t_canvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tcubeuvmaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\t\tprogramCache.dispose();\n\n\t\txr.dispose();\n\n\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t_transmissionRenderTarget = null;\n\n\t\t}\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tconst infoAutoReset = info.autoReset;\n\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\tconst shadowMapType = shadowMap.type;\n\n\t\tinitGLContext();\n\n\t\tinfo.autoReset = infoAutoReset;\n\t\tshadowMap.enabled = shadowMapEnabled;\n\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\tshadowMap.type = shadowMapType;\n\n\t}\n\n\tfunction onContextCreationError( event ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReferences( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\tconst programs = properties.get( material ).programs;\n\n\t\tif ( programs !== undefined ) {\n\n\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t} );\n\n\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tconst dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tconst drawStart = Math.max( rangeStart, groupStart );\n\t\tconst drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tconst drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tgetProgram( material2, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\trenderStateStack.pop();\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tfunction onXRSessionStart() {\n\n\t\tanimation.stop();\n\n\t}\n\n\tfunction onXRSessionEnd() {\n\n\t\tanimation.start();\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\tcurrentRenderList.init();\n\n\t\trenderListStack.push( currentRenderList );\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene );\n\n\t\t// render scene\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tif ( camera.isArrayCamera ) {\n\n\t\t\tconst cameras = camera.cameras;\n\n\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t// _gl.finish();\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\trenderStateStack.pop();\n\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\trenderListStack.pop();\n\n\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderList = null;\n\n\t\t}\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, scene, camera );\n\n\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t}\n\n\tfunction renderTransmissionPass( opaqueObjects, scene, camera ) {\n\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\tgenerateMipmaps: true,\n\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\tsamples: ( isWebGL2 && _antialias === true ) ? 4 : 0\n\t\t\t} );\n\n\t\t}\n\n\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t} else {\n\n\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t}\n\n\t\t//\n\n\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\t\t_this.clear();\n\n\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\tconst currentToneMapping = _this.toneMapping;\n\t\t_this.toneMapping = NoToneMapping;\n\n\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t_this.toneMapping = currentToneMapping;\n\n\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\tif ( material.transparent === true && material.side === DoubleSide ) {\n\n\t\t\tmaterial.side = BackSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = FrontSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = DoubleSide;\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction getProgram( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet programs = materialProperties.programs;\n\n\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\tif ( programs === undefined ) {\n\n\t\t\t// new material\n\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tprograms = new Map();\n\t\t\tmaterialProperties.programs = programs;\n\n\t\t}\n\n\t\tlet program = programs.get( programCacheKey );\n\n\t\tif ( program !== undefined ) {\n\n\t\t\t// early out if program and light state is identical\n\n\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\treturn program;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.currentProgram = program;\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\treturn program;\n\n\t}\n\n\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\tmaterialProperties.instancing = parameters.instancing;\n\t\tmaterialProperties.skinning = parameters.skinning;\n\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t}\n\n\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding );\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\tconst vertexTangents = !! material.normalMap && !! geometry.attributes.tangent;\n\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\tconst morphColors = !! geometry.morphAttributes.color;\n\t\tconst toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tlet needsProgramChange = false;\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tneedsProgramChange = true;\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\t//\n\n\t\tlet program = materialProperties.currentProgram;\n\n\t\tif ( needsProgramChange === true ) {\n\n\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst p_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tlet useDefaultFramebuffer = true;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet framebuffer = null;\n\t\tlet isCube = false;\n\t\tlet isRenderTarget3D = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture ) {\n\n\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t}\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tconst framebufferBound = state.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t_gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t}\n\n\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexSubImage2D( 3553, level, 0, 0, position.x, position.y, width, height );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\t\tlet glTarget;\n\n\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\tglTarget = 32879;\n\n\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\tglTarget = 35866;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tconst unpackRowLen = _gl.getParameter( 3314 );\n\t\tconst unpackImageHeight = _gl.getParameter( 32878 );\n\t\tconst unpackSkipPixels = _gl.getParameter( 3316 );\n\t\tconst unpackSkipRows = _gl.getParameter( 3315 );\n\t\tconst unpackSkipImages = _gl.getParameter( 32877 );\n\n\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t_gl.pixelStorei( 3314, image.width );\n\t\t_gl.pixelStorei( 32878, image.height );\n\t\t_gl.pixelStorei( 3316, sourceBox.min.x );\n\t\t_gl.pixelStorei( 3315, sourceBox.min.y );\n\t\t_gl.pixelStorei( 32877, sourceBox.min.z );\n\n\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.pixelStorei( 3314, unpackRowLen );\n\t\t_gl.pixelStorei( 32878, unpackImageHeight );\n\t\t_gl.pixelStorei( 3316, unpackSkipPixels );\n\t\t_gl.pixelStorei( 3315, unpackSkipRows );\n\t\t_gl.pixelStorei( 32877, unpackSkipImages );\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\t_currentActiveCubeFace = 0;\n\t\t_currentActiveMipmapLevel = 0;\n\t\t_currentRenderTarget = null;\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.prototype.slice.call( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// deinterleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interlaved attribtue\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getUV( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\treturn this;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tboneTransform( index, target ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( target ).applyMatrix4( this.bindMatrix );\n\n\t\ttarget.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\ttarget.addScaledVector( _vector$5.copy( _basePosition ).applyMatrix4( _matrix ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.frame = - 1;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tif ( typeof normalized === 'number' ) {\n\n\t\t\tmeshPerAttribute = normalized;\n\n\t\t\tnormalized = false;\n\n\t\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t\t}\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _mesh = /*@__PURE__*/ new Mesh();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.frustumCulled = false;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height, format ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.format = format;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = new Vector3();\nconst px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst tangent = optionalTarget || new Vector2();\n\n\t\ttangent.copy( this.v2 ).sub( this.v1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, - 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = new Vector3();\nconst _v1$1 = new Vector3();\nconst _normal = new Vector3();\nconst _triangle = new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tlet p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\tif ( outerNode ) {\n\n\t\tconst b = splitPolygon( outerNode, hole );\n\n\t\t// filter collinear points around the cuts\n\t\tfilterPoints( outerNode, outerNode.next );\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode;\n\tconst hx = hole.x;\n\tconst hy = hole.y;\n\tlet qx = - Infinity, m;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // doesn't intersect other edges\n\t\t( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t\t( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t\tequals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tlet depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t// deprecated options\n\n\t\t\tif ( options.amount !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\t\tdepth = options.amount;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCapsuleBufferGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = 0.0;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._sheen = 0.0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst materialLib = {\n\tShadowMaterial,\n\tSpriteMaterial,\n\tRawShaderMaterial,\n\tShaderMaterial,\n\tPointsMaterial,\n\tMeshPhysicalMaterial,\n\tMeshStandardMaterial,\n\tMeshPhongMaterial,\n\tMeshToonMaterial,\n\tMeshNormalMaterial,\n\tMeshLambertMaterial,\n\tMeshDepthMaterial,\n\tMeshDistanceMaterial,\n\tMeshBasicMaterial,\n\tMeshMatcapMaterial,\n\tLineDashedMaterial,\n\tLineBasicMaterial,\n\tMaterial\n};\n\nMaterial.fromType = function ( type ) {\n\n\treturn new materialLib[ type ]();\n\n};\n\nconst AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tconst n = times.length;\n\t\tconst result = new Array( n );\n\t\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tconst nValues = values.length;\n\t\tconst result = new values.constructor( nValues );\n\n\t\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tconst srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tlet i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tlet value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t},\n\n\tsubclip: function ( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\t\tconst clip = sourceClip.clone();\n\n\t\tclip.name = name;\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tconst track = clip.tracks[ i ];\n\t\t\tconst valueSize = track.getValueSize();\n\n\t\t\tconst times = [];\n\t\t\tconst values = [];\n\n\t\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( times.length === 0 ) continue;\n\n\t\t\ttrack.times = AnimationUtils.convertArray( times, track.times.constructor );\n\t\t\ttrack.values = AnimationUtils.convertArray( values, track.values.constructor );\n\n\t\t\ttracks.push( track );\n\n\t\t}\n\n\t\tclip.tracks = tracks;\n\n\t\t// find minimum .times value across all tracks in the trimmed clip\n\n\t\tlet minStartTime = Infinity;\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// shift all tracks such that clip begins at t=0\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t\t}\n\n\t\tclip.resetDuration();\n\n\t\treturn clip;\n\n\t},\n\n\tmakeClipAdditive: function ( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\t\tif ( fps <= 0 ) fps = 30;\n\n\t\tconst numTracks = referenceClip.tracks.length;\n\t\tconst referenceTime = referenceFrame / fps;\n\n\t\t// Make each track's values relative to the values at the reference frame\n\t\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t\t// Skip this track if it's non-numeric\n\t\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t\t} );\n\n\t\t\tif ( targetTrack === undefined ) continue;\n\n\t\t\tlet referenceOffset = 0;\n\t\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t\t}\n\n\t\t\tlet targetOffset = 0;\n\t\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t\t}\n\n\t\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\t\tlet referenceValue;\n\n\t\t\t// Find the value to subtract out of the track\n\t\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else {\n\n\t\t\t\t// Interpolate to the reference value\n\t\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t\t}\n\n\t\t\t// Conjugate the quaternion\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t\t}\n\n\t\t\t// Subtract the reference value from all of the track values\n\n\t\t\tconst numTimes = targetTrack.times.length;\n\t\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart,\n\t\t\t\t\t\treferenceValue,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\t\treturn targetClip;\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = AnimationUtils.arraySlice( this.times ),\n\t\t\tvalues = AnimationUtils.arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = AnimationUtils.arraySlice( this.times, 0 );\n\t\tconst values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nconst loading = {};\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow Error( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}` );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.encoding !== undefined ) {\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = Material.fromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON( this );\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: The legacy Geometry type is no longer supported.' );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor ( let j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tconst material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/* DEPRECATED */\n\n\tsetTexturePath( value ) {\n\n\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nconst AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\t_context = value;\n\n\t}\n\n};\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isHemisphereLightProbe = true;\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isAmbientLightProbe = true;\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = /*@__PURE__*/ new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$4.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the radials\n\n\t\tfor ( let i = 0; i <= radials; i ++ ) {\n\n\t\t\tconst v = ( i / radials ) * ( Math.PI * 2 );\n\n\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( x, 0, z );\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\t// create the circles\n\n\t\tfor ( let i = 0; i <= circles; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / circles * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2', colorFrustum );\n\t\taddLine( 'n2', 'n4', colorFrustum );\n\t\taddLine( 'n4', 'n3', colorFrustum );\n\t\taddLine( 'n3', 'n1', colorFrustum );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2', colorFrustum );\n\t\taddLine( 'f2', 'f4', colorFrustum );\n\t\taddLine( 'f4', 'f3', colorFrustum );\n\t\taddLine( 'f3', 'f1', colorFrustum );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1', colorFrustum );\n\t\taddLine( 'n2', 'f2', colorFrustum );\n\t\taddLine( 'n3', 'f3', colorFrustum );\n\t\taddLine( 'n4', 'f4', colorFrustum );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1', colorCone );\n\t\taddLine( 'p', 'n2', colorCone );\n\t\taddLine( 'p', 'n3', colorCone );\n\t\taddLine( 'p', 'n4', colorCone );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2', colorUp );\n\t\taddLine( 'u2', 'u3', colorUp );\n\t\taddLine( 'u3', 'u1', colorUp );\n\n\t\t// target\n\n\t\taddLine( 'c', 't', colorTarget );\n\t\taddLine( 'p', 'c', colorCross );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2', colorCross );\n\t\taddLine( 'cn3', 'cn4', colorCross );\n\n\t\taddLine( 'cf1', 'cf2', colorCross );\n\t\taddLine( 'cf3', 'cf4', colorCross );\n\n\t\tfunction addLine( a, b, color ) {\n\n\t\t\taddPoint( a, color );\n\t\t\taddPoint( b, color );\n\n\t\t}\n\n\t\tfunction addPoint( id, color ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tlet scale = - this.plane.constant;\n\n\t\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\t\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nclass DataUtils {\n\n\t// float32 to float16\n\n\tstatic toHalfFloat( val ) {\n\n\t\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\t\tval = clamp( val, - 65504, 65504 );\n\n\t\t_floatView[ 0 ] = val;\n\t\tconst f = _uint32View[ 0 ];\n\t\tconst e = ( f >> 23 ) & 0x1ff;\n\t\treturn _baseTable[ e ] + ( ( f & 0x007fffff ) >> _shiftTable[ e ] );\n\n\t}\n\n\t// float16 to float32\n\n\tstatic fromHalfFloat( val ) {\n\n\t\tconst m = val >> 10;\n\t\t_uint32View[ 0 ] = _mantissaTable[ _offsetTable[ m ] + ( val & 0x3ff ) ] + _exponentTable[ m ];\n\t\treturn _floatView[ 0 ];\n\n\t}\n\n}\n\n// float32 to float16 helpers\n\nconst _buffer = new ArrayBuffer( 4 );\nconst _floatView = new Float32Array( _buffer );\nconst _uint32View = new Uint32Array( _buffer );\n\nconst _baseTable = new Uint32Array( 512 );\nconst _shiftTable = new Uint32Array( 512 );\n\nfor ( let i = 0; i < 256; ++ i ) {\n\n\tconst e = i - 127;\n\n\t// very small number (0, -0)\n\n\tif ( e < - 27 ) {\n\n\t\t_baseTable[ i ] = 0x0000;\n\t\t_baseTable[ i | 0x100 ] = 0x8000;\n\t\t_shiftTable[ i ] = 24;\n\t\t_shiftTable[ i | 0x100 ] = 24;\n\n\t\t// small number (denorm)\n\n\t} else if ( e < - 14 ) {\n\n\t\t_baseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t_baseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t_shiftTable[ i ] = - e - 1;\n\t\t_shiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t// normal number\n\n\t} else if ( e <= 15 ) {\n\n\t\t_baseTable[ i ] = ( e + 15 ) << 10;\n\t\t_baseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t_shiftTable[ i ] = 13;\n\t\t_shiftTable[ i | 0x100 ] = 13;\n\n\t\t// large number (Infinity, -Infinity)\n\n\t} else if ( e < 128 ) {\n\n\t\t_baseTable[ i ] = 0x7c00;\n\t\t_baseTable[ i | 0x100 ] = 0xfc00;\n\t\t_shiftTable[ i ] = 24;\n\t\t_shiftTable[ i | 0x100 ] = 24;\n\n\t\t// stay (NaN, Infinity, -Infinity)\n\n\t} else {\n\n\t\t_baseTable[ i ] = 0x7c00;\n\t\t_baseTable[ i | 0x100 ] = 0xfc00;\n\t\t_shiftTable[ i ] = 13;\n\t\t_shiftTable[ i | 0x100 ] = 13;\n\n\t}\n\n}\n\n// float16 to float32 helpers\n\nconst _mantissaTable = new Uint32Array( 2048 );\nconst _exponentTable = new Uint32Array( 64 );\nconst _offsetTable = new Uint32Array( 64 );\n\nfor ( let i = 1; i < 1024; ++ i ) {\n\n\tlet m = i << 13; // zero pad mantissa bits\n\tlet e = 0; // zero exponent\n\n\t// normalized\n\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\tm <<= 1;\n\t\te -= 0x00800000; // decrement exponent\n\n\t}\n\n\tm &= ~ 0x00800000; // clear leading 1 bit\n\te += 0x38800000; // adjust bias\n\n\t_mantissaTable[ i ] = m | e;\n\n}\n\nfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t_mantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n}\n\nfor ( let i = 1; i < 31; ++ i ) {\n\n\t_exponentTable[ i ] = i << 23;\n\n}\n\n_exponentTable[ 31 ] = 0x47800000;\n_exponentTable[ 32 ] = 0x80000000;\nfor ( let i = 33; i < 63; ++ i ) {\n\n\t_exponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n}\n\n_exponentTable[ 63 ] = 0xc7800000;\n\nfor ( let i = 1; i < 64; ++ i ) {\n\n\tif ( i !== 32 ) {\n\n\t\t_offsetTable[ i ] = 1024;\n\n\t}\n\n}\n\n// r133, c5bb5434555a3c3ddd784944a0a124f996fc721b\n\nclass ParametricGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tconsole.error( 'THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js' );\n\t\tsuper();\n\n\t}\n\n}\n\n// r133, eb58ff153119090d3bbb24474ea0ffc40c70dc92\n\nclass TextGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tconsole.error( 'THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js' );\n\t\tsuper();\n\n\t}\n\n}\n\n// r133, eb58ff153119090d3bbb24474ea0ffc40c70dc92\n\nfunction FontLoader() {\n\n\tconsole.error( 'THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js' );\n\n}\n\n// r133, eb58ff153119090d3bbb24474ea0ffc40c70dc92\n\nfunction Font() {\n\n\tconsole.error( 'THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js' );\n\n}\n\n// r134, d65e0af06644fe5a84a6fc0e372f4318f95a04c0\n\nfunction ImmediateRenderObject() {\n\n\tconsole.error( 'THREE.ImmediateRenderObject has been removed.' );\n\n}\n\n// r138, 48b05d3500acc084df50be9b4c90781ad9b8cb17\n\nclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, options ) {\n\n\t\tconsole.error( 'THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the \"samples\" property to greater 0 to enable multisampling.' );\n\t\tsuper( width, height, options );\n\t\tthis.samples = 4;\n\n\t}\n\n}\n\n// r138, f9cd9cab03b7b64244e304900a3a2eeaa3a588ce\n\nclass DataTexture2DArray extends DataArrayTexture {\n\n\tconstructor( data, width, height, depth ) {\n\n\t\tconsole.warn( 'THREE.DataTexture2DArray has been renamed to DataArrayTexture.' );\n\t\tsuper( data, width, height, depth );\n\n\t}\n\n}\n\n// r138, f9cd9cab03b7b64244e304900a3a2eeaa3a588ce\n\nclass DataTexture3D extends Data3DTexture {\n\n\tconstructor( data, width, height, depth ) {\n\n\t\tconsole.warn( 'THREE.DataTexture3D has been renamed to Data3DTexture.' );\n\t\tsuper( data, width, height, depth );\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry as BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry as CapsuleBufferGeometry, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry as CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedTexture, CompressedTextureLoader, ConeGeometry as ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry as CylinderBufferGeometry, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry as DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry as ExtrudeBufferGeometry, ExtrudeGeometry, FileLoader, FlatShading, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, Font, FontLoader, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry as IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry as LatheBufferGeometry, LatheGeometry, Layers, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry as OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, ParametricGeometry, Path, PerspectiveCamera, Plane, PlaneGeometry as PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry as PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry as RingBufferGeometry, RingGeometry, SRGBColorSpace, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry as ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, SmoothShading, Source, Sphere, SphereGeometry as SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry as TetrahedronBufferGeometry, TetrahedronGeometry, TextGeometry, Texture, TextureLoader, TorusGeometry as TorusBufferGeometry, TorusGeometry, TorusKnotGeometry as TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry as TubeBufferGeometry, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t    removePointer( event );\n\n\t\t    if ( pointers.length === 0 ) {\n\n\t\t        scope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t        scope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t        scope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t    }\n\n\t\t    scope.dispatchEvent( _endEvent );\n\n\t\t    state = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n","import * as THREE from \"three\";\r\n\r\nconst pencil = () => {\r\n  // Define the shader uniforms\r\n  let uniforms = {\r\n    u_time: {\r\n      type: \"f\",\r\n      value: 0.0\r\n    },\r\n    u_frame: {\r\n      type: \"f\",\r\n      value: 0.0\r\n    },\r\n    u_resolution: {\r\n      type: \"v2\",\r\n      value: new THREE.Vector2(\r\n        window.innerWidth,\r\n        window.innerHeight\r\n      ).multiplyScalar(window.devicePixelRatio)\r\n    },\r\n    u_mouse: {\r\n      type: \"v2\",\r\n      value: new THREE.Vector2(\r\n        0.7 * window.innerWidth,\r\n        window.innerHeight\r\n      ).multiplyScalar(window.devicePixelRatio)\r\n    }\r\n  };\r\n\r\n  // Create the shader material\r\n  let material = new THREE.ShaderMaterial({\r\n    uniforms: uniforms,\r\n    vertexShader: document.getElementById(\"pencil-vertexShader\").textContent,\r\n    fragmentShader: document.getElementById(\"pencil-fragmentShader\")\r\n      .textContent,\r\n    side: THREE.DoubleSide,\r\n    transparent: true,\r\n    extensions: {\r\n      derivatives: true\r\n    }\r\n  });\r\n\r\n  return material;\r\n};\r\n\r\nexport default pencil;\r\n","import * as THREE from \"three\";\r\n\r\nconst stripes = () => {\r\n  // Define the shader uniforms\r\n  let uniforms = {\r\n    u_time: {\r\n      type: \"f\",\r\n      value: 0.0\r\n    },\r\n    u_frame: {\r\n      type: \"f\",\r\n      value: 0.0\r\n    },\r\n    u_resolution: {\r\n      type: \"v2\",\r\n      value: new THREE.Vector2(\r\n        window.innerWidth,\r\n        window.innerHeight\r\n      ).multiplyScalar(window.devicePixelRatio)\r\n    },\r\n    u_mouse: {\r\n      type: \"v2\",\r\n      value: new THREE.Vector2(\r\n        0.7 * window.innerWidth,\r\n        window.innerHeight\r\n      ).multiplyScalar(window.devicePixelRatio)\r\n    }\r\n  };\r\n\r\n  // Create the shader material\r\n  let material = new THREE.ShaderMaterial({\r\n    uniforms: uniforms,\r\n    vertexShader: document.getElementById(\"stripes-vertexShader\").textContent,\r\n    fragmentShader: document.getElementById(\"stripes-fragmentShader\")\r\n      .textContent,\r\n    side: THREE.DoubleSide,\r\n    transparent: true,\r\n    extensions: {\r\n      derivatives: true\r\n    }\r\n  });\r\n\r\n  return material;\r\n};\r\n\r\nexport default stripes;\r\n","import {\r\n  Clock,\r\n  Color,\r\n  MathUtils,\r\n  MeshBasicMaterial,\r\n  PerspectiveCamera,\r\n  Scene,\r\n  BoxGeometry,\r\n  WebGLRenderer,\r\n  BoxBufferGeometry,\r\n  CylinderBufferGeometry,\r\n  Mesh,\r\n  DirectionalLight,\r\n  AmbientLight,\r\n  RawShaderMaterial,\r\n  DoubleSide,\r\n  Vector2,\r\n  Vector3,\r\n  MeshNormalMaterial,\r\n  MeshPhongMaterial,\r\n  MeshLambertMaterial,\r\n  MeshStandardMaterial\r\n} from \"three\";\r\n\r\nimport crosshatchMaterial from \"./js/shader/pencil.js\";\r\nimport stripedCutoutMaterial from \"./js/shader/stripes.js\";\r\n// import {\r\n//   ToonShaderMaterial_error,\r\n//   custommaterial,\r\n//   toonmaterial_toarrayerror\r\n// } from \"./js/ToonShaderMaterial\";\r\n\r\nconst normalMaterial = new MeshNormalMaterial();\r\nconst standartMaterial = new MeshStandardMaterial({ color: 0x666666 });\r\nconst lambert = new MeshLambertMaterial({ color: \"#fff\" });\r\nconst phongMaterial = new MeshPhongMaterial({ color: 0x0908ef });\r\nfunction toonMaterial() {\r\n  const uniforms = {\r\n    u_time: { type: \"f\", value: 0.0 },\r\n    u_resolution: { type: \"v3\", value: new Vector2() },\r\n    u_mouse: { type: \"v2\", value: new Vector2() },\r\n    u_lightDirection: { type: \"v3\", value: new Vector3(1.0, 1.0, 1.0) },\r\n    u_globalColor: { type: \"v3\", value: new Vector3(1.0, 1.0, 1.0) },\r\n    u_gradient: { type: \"f,\", value: 3.0 },\r\n    u_inflate: { type: \"f\", value: 0.0 },\r\n    u_isEdge: { type: \"i\", value: true }\r\n  };\r\n\r\n  const material = new RawShaderMaterial({\r\n    vertexShader: document.querySelector(\"#js-vertex-shader\").textContent,\r\n    fragmentShader: document.querySelector(\"#js-fragment-shader\").textContent,\r\n    wireframe: false,\r\n    transparent: true,\r\n    uniforms: uniforms,\r\n    flatShading: true,\r\n    side: DoubleSide\r\n  });\r\n\r\n  return material;\r\n}\r\n\r\n//着色器材质\r\n// let fishShaderMaterial = new THREE.ShaderMaterial({\r\n//   uniforms: {\r\n//     light: { type: \"v3\", value: directionalLight.position },\r\n//     color: {\r\n//       // 方块的基础色\r\n//       type: \"v3\", // 指定变量类型为三维向量\r\n//       value: new THREE.Color(\"#1308EF\")\r\n//     }\r\n//   },\r\n//   vertexShader: document.getElementById(\"fish-vertexShader\").textContent,\r\n//   fragmentShader: document.getElementById(\"fish-fragmentShader\").textContent,\r\n//   side: THREE.FrontSide,\r\n//   blending: THREE.AdditiveBlending,\r\n//   transparent: true\r\n// });\r\n\r\nconst colors = {\r\n  ground: 0x333333,\r\n  pavement: 0x999999,\r\n  background: 0xffffff,\r\n  wall: 0xff9999, //0xf4e4d5,\r\n  window: 0x333333,\r\n  alu: 0x111111,\r\n  white: 0xffffff,\r\n  awening: 0x0000ff,\r\n  wood: 0xffffff,\r\n  floor: 0x864427,\r\n  roof: 0x330000,\r\n  green: 0x008833\r\n};\r\n\r\nlet bulbMaterial = new MeshStandardMaterial({\r\n  color: 0xffffff,\r\n  metalness: 0,\r\n  roughness: 0\r\n});\r\nlet bulbMaterialOn = new MeshLambertMaterial({\r\n  color: 0xffffff,\r\n  emissive: 0xffffff,\r\n  emissiveIntensity: 1\r\n});\r\nlet plantMaterial = new MeshStandardMaterial({\r\n  color: colors.green,\r\n  metalness: 0,\r\n  roughness: 0.5\r\n});\r\nlet groundMaterial = new MeshStandardMaterial({\r\n  color: colors.ground\r\n});\r\nlet pavementMaterial = new MeshStandardMaterial({ color: colors.pavement });\r\nlet backgroundMaterial = new MeshStandardMaterial({ color: colors.background });\r\nlet roofMaterial = new MeshLambertMaterial({\r\n  color: colors.roof,\r\n  side: DoubleSide\r\n});\r\nlet floorMaterial = new MeshLambertMaterial({\r\n  color: colors.floor,\r\n  side: DoubleSide\r\n});\r\nlet windowMaterial = new MeshStandardMaterial({ color: colors.window });\r\nlet wallMaterial = new MeshLambertMaterial({\r\n  color: colors.wall,\r\n  side: DoubleSide\r\n});\r\nlet aluMaterial = new MeshStandardMaterial({\r\n  color: colors.alu,\r\n  metalness: 0,\r\n  roughness: 0.5\r\n});\r\nlet aweningMaterial = new MeshStandardMaterial({\r\n  color: colors.awening,\r\n  metalness: 0,\r\n  roughness: 1\r\n});\r\nlet aweningMaterial2 = new MeshStandardMaterial({\r\n  color: colors.white,\r\n  metalness: 0,\r\n  roughness: 1\r\n});\r\nlet woodMaterial = new MeshStandardMaterial({\r\n  color: colors.wood,\r\n  metalness: 0,\r\n  roughness: 0.5\r\n});\r\n\r\nexport {\r\n  colors,\r\n  lambert,\r\n  normalMaterial,\r\n  standartMaterial,\r\n  crosshatchMaterial,\r\n  stripedCutoutMaterial,\r\n  phongMaterial,\r\n  toonMaterial,\r\n  windowMaterial,\r\n  wallMaterial,\r\n  aluMaterial,\r\n  aweningMaterial,\r\n  aweningMaterial2,\r\n  woodMaterial,\r\n  floorMaterial,\r\n  roofMaterial,\r\n  backgroundMaterial,\r\n  groundMaterial,\r\n  pavementMaterial,\r\n  plantMaterial,\r\n  bulbMaterial,\r\n  bulbMaterialOn\r\n};\r\n","import * as THREE from \"three\";\r\nimport {\r\n  roofMaterial,\r\n  floorMaterial,\r\n  wallMaterial,\r\n  aluMaterial,\r\n  aweningMaterial,\r\n  aweningMaterial2,\r\n  woodMaterial,\r\n  plantMaterial,\r\n  bulbMaterial,\r\n  bulbMaterialOn,\r\n} from \"../materials\";\r\n\r\nimport {\r\n  IHouse,\r\n  IBalconySettings,\r\n  IBalconyDoorSettings,\r\n  IAwningSettings,\r\n  IPlantSettings,\r\n  IHoleSettings,\r\n  IHangingLightsSettings,\r\n  IHouseSide,\r\n  IHouseFloor,\r\n} from \"./types\";\r\n\r\nconst spanishhouse: IHouse = {\r\n  floors: [],\r\n  wallthickness: 0.2,\r\n};\r\n\r\nconst insertBalconyDoor = ({\r\n  open,\r\n}: IBalconyDoorSettings): IBalconyDoorSettings => {\r\n  return {\r\n    type: \"balconydoor\",\r\n    z: -spanishhouse.wallthickness / 2,\r\n    open: open || [80, 60],\r\n    shutters: 3,\r\n    materials: {\r\n      default: woodMaterial,\r\n    },\r\n  };\r\n};\r\n\r\nconst insertWindowShutters = (shutters?: number) => {\r\n  return {\r\n    type: \"shuttersWithFrame\",\r\n    shutters: shutters || 2,\r\n    open: [45, 10],\r\n    z: -spanishhouse.wallthickness / 2,\r\n    materials: {\r\n      default: woodMaterial,\r\n    },\r\n  };\r\n};\r\n\r\nconst insertWallRailing = () => {\r\n  return {\r\n    type: \"wallRailing\",\r\n    z: -spanishhouse.wallthickness / 2,\r\n    materials: {\r\n      default: aluMaterial,\r\n    },\r\n  };\r\n};\r\n\r\nconst insertHangingLights = ({\r\n  width,\r\n  depth,\r\n}: {\r\n  width: number;\r\n  depth: number;\r\n}) => {\r\n  return {\r\n    type: \"hangingLights\",\r\n    z: -spanishhouse.wallthickness / 2,\r\n    path: [\r\n      new THREE.Vector3(0, 0, 0),\r\n      new THREE.Vector3(0, 0, depth),\r\n      new THREE.Vector3(width, 0, depth),\r\n      new THREE.Vector3(width, 0, 0),\r\n    ],\r\n    depth: depth || 2,\r\n    hanging: [0.2, 0.4, 0.2],\r\n    materials: {\r\n      default: aluMaterial,\r\n      bulb: bulbMaterialOn,\r\n    },\r\n  };\r\n};\r\n\r\nconst insertBalcony = (): IBalconySettings => {\r\n  return {\r\n    type: \"balcony\",\r\n    top: 0,\r\n    left: -0.2,\r\n    right: -0.2,\r\n    z: 0,\r\n    depth: 1.2,\r\n    materials: {\r\n      default: wallMaterial,\r\n      alu: aluMaterial,\r\n    },\r\n  };\r\n};\r\n\r\nconst insertFrenchBalcony = (): IBalconySettings => {\r\n  return {\r\n    type: \"balcony\",\r\n    top: 0,\r\n    left: -0.2,\r\n    right: -0.2,\r\n    z: 0,\r\n    depth: 0.2,\r\n    materials: {\r\n      default: wallMaterial,\r\n      alu: aluMaterial,\r\n    },\r\n  };\r\n};\r\n\r\nconst insertRetractableAwening = ({\r\n  opened,\r\n  top,\r\n}: IAwningSettings): IAwningSettings => {\r\n  const settings = {\r\n    type: \"retractable-awning\",\r\n    top: top || -0.2,\r\n    left: -0.2,\r\n    right: -0.2,\r\n    z: 0,\r\n    depth: 1,\r\n    height: 1,\r\n    opened: opened || 70,\r\n    stiffness: 0.8,\r\n    segments: 17,\r\n    materials: {\r\n      default: wallMaterial,\r\n      alu: aluMaterial,\r\n      fabric: [aweningMaterial, aweningMaterial2],\r\n    },\r\n  };\r\n\r\n  // settings.opened = Math.random() * 100;\r\n\r\n  return settings;\r\n};\r\n\r\nconst insertAwening = (): IAwningSettings => {\r\n  return {\r\n    type: \"awning\",\r\n    top: -0.1,\r\n    left: -0.2,\r\n    right: -0.2,\r\n    z: 0,\r\n    depth: 1,\r\n    height: 1,\r\n    opened: 90,\r\n    stiffness: 0.5,\r\n    segments: 17,\r\n    materials: {\r\n      default: wallMaterial,\r\n      alu: aluMaterial,\r\n      fabric: [aweningMaterial, aweningMaterial2],\r\n    },\r\n  };\r\n};\r\n\r\nconst insertPlant = (): IPlantSettings => {\r\n  return {\r\n    type: \"plant\",\r\n    z: 0,\r\n    materials: {\r\n      default: plantMaterial,\r\n    },\r\n  };\r\n};\r\n\r\nconst awening = (props: { offsetLeft: number }) => {\r\n  return {\r\n    ...props,\r\n    bottom: 0,\r\n    top: 0.02,\r\n    width: 1,\r\n    shapes: [insertAwening()],\r\n  };\r\n};\r\nfunction balconyWithDoorAndAwening(props) {\r\n  return {\r\n    bottom: 0.01,\r\n    ...props,\r\n    width: 3,\r\n    height: 2.4,\r\n    shapes: [insertAwening(), insertBalcony(), insertBalconyDoor()],\r\n  };\r\n}\r\nfunction balconyWithDoorAndReAwening(props: {\r\n  awening: IAwningSettings;\r\n  door: any;\r\n}) {\r\n  return {\r\n    bottom: 0.01,\r\n    ...props,\r\n    width: 3,\r\n    height: 2.4,\r\n    shapes: [\r\n      insertRetractableAwening({ opened: props.awening?.opened }),\r\n      insertBalcony(),\r\n      insertBalconyDoor({ ...props.door }),\r\n    ],\r\n  };\r\n}\r\nfunction cafeopening(props: {\r\n  width?: number;\r\n  awening: IAwningSettings;\r\n  door: any;\r\n}) {\r\n  return {\r\n    bottom: 0.01,\r\n    width: 3,\r\n    height: 2.5,\r\n    ...props,\r\n    shapes: [\r\n      insertRetractableAwening({ ...props.awening }),\r\n      insertBalconyDoor({ ...props.door }),\r\n    ],\r\n  };\r\n}\r\nfunction normalWindowWithFrenchBalcony(props: { offsetLeft: number }) {\r\n  return {\r\n    ...props,\r\n    width: 1,\r\n    height: 2,\r\n    shapes: [insertWindowShutters(2), insertFrenchBalcony()],\r\n  };\r\n}\r\n\r\nfunction normalWindow(props: { offsetLeft: number; width?: number }) {\r\n  return {\r\n    bottom: 0.2,\r\n    width: props.width || 1,\r\n    height: 2,\r\n    ...props,\r\n    shapes: [insertWindowShutters(2)],\r\n  };\r\n}\r\n\r\nfunction smallWindow(props: { offsetLeft: number }) {\r\n  return {\r\n    bottom: 0.2,\r\n    width: 0.5,\r\n    height: 0.5,\r\n    ...props,\r\n    shapes: [insertWindowShutters(1)],\r\n  };\r\n}\r\n\r\n//cuong\r\nfunction smallWindowCuong(props: {\r\n  offsetLeft: number;\r\n  bottom: number;\r\n  width: number;\r\n  height: number;\r\n}) {\r\n  return {\r\n    ...props,\r\n    shapes: [insertWindowShutters(1)],\r\n  };\r\n}\r\n\r\nfunction hangingLights(props: { offsetLeft: number }) {\r\n  const settings = {\r\n    width: 3,\r\n    height: 3,\r\n    ...props,\r\n    shapes: [],\r\n  };\r\n  settings.shapes = [\r\n    insertHangingLights({ width: settings.width, depth: settings.depth }),\r\n  ];\r\n  return settings;\r\n}\r\n\r\nfunction wallRailing(props: { offsetLeft: number; width?: number }) {\r\n  return {\r\n    width: 2,\r\n    height: 0.4,\r\n    top: 0.1,\r\n    ...props,\r\n    shapes: [insertWallRailing()],\r\n  };\r\n}\r\n\r\nfunction entranceDoor() {\r\n  return {\r\n    bottom: 0,\r\n    roundTop: 1,\r\n    // shapes: [insertWindowShutters(1)]\r\n  };\r\n}\r\n\r\nfunction plant(props: { offsetLeft: number }) {\r\n  return {\r\n    ...props,\r\n    shapes: [insertPlant()],\r\n    // shapes: [insertWindowShutters(1)]\r\n  };\r\n}\r\n\r\nspanishhouse.floors = [\r\n  {\r\n    height: 0.01,\r\n    floor: false,\r\n    materials: {\r\n      floor: floorMaterial,\r\n    },\r\n    sides: [\r\n      {\r\n        start: new THREE.Vector3(-4, 0, 2),\r\n      },\r\n      {\r\n        start: new THREE.Vector3(3, 0, 2),\r\n        holes: [],\r\n      },\r\n      {\r\n        start: new THREE.Vector3(3, 0, -2),\r\n      },\r\n      {\r\n        start: new THREE.Vector3(-3, 0, -3),\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    height: 4,\r\n    floor: true,\r\n    materials: {\r\n      floor: floorMaterial,\r\n    },\r\n    sides: [\r\n      {\r\n        holes: [\r\n          cafeopening({\r\n            offsetLeft: 0.35,\r\n            width: 3,\r\n            awening: { opened: 80, top: -80 },\r\n            door: { open: [80, 80] },\r\n          }),\r\n          normalWindow({ offsetLeft: 0.7 }),\r\n          hangingLights({ offsetLeft: 0.5, width: 6, depth: 3 }),\r\n        ],\r\n      },\r\n      {\r\n        holes: [smallWindow({ offsetLeft: 2 })],\r\n      },\r\n      {},\r\n      {},\r\n    ],\r\n  },\r\n  {\r\n    height: 3,\r\n    materials: {\r\n      floor: floorMaterial,\r\n    },\r\n    sides: [\r\n      {\r\n        // shift: new THREE.Vector3(0, 0, 40),\r\n        holes: [\r\n          balconyWithDoorAndReAwening({\r\n            offsetLeft: 0.5,\r\n            awening: { opened: 10 },\r\n            // door: { open: [0, 0] }\r\n          }),\r\n        ],\r\n      },\r\n      {\r\n        // shift: new THREE.Vector3(0, 0, 40)\r\n      },\r\n      {},\r\n      {},\r\n    ],\r\n  },\r\n  {\r\n    height: 2.6,\r\n    materials: {\r\n      floor: floorMaterial,\r\n    },\r\n    sides: [\r\n      {\r\n        // holes: [smallWindow({ .offsetLeft: 200 })]\r\n        holes: [\r\n          balconyWithDoorAndReAwening({\r\n            offsetLeft: 0.5,\r\n            awening: { opened: 10 },\r\n          }),\r\n          //hangingLights({ offsetLeft: 0.5, width: 400, depth: 130 })\r\n          // normalWindow({  offsetLeft: 0.5 })\r\n        ],\r\n      },\r\n      {\r\n        holes: [smallWindow({ offsetLeft: 2 })],\r\n      },\r\n      {},\r\n      {},\r\n    ],\r\n  },\r\n  {\r\n    height: 1,\r\n    materials: {\r\n      floor: roofMaterial,\r\n    },\r\n    sides: [\r\n      {\r\n        holes: [\r\n          plant({ offsetLeft: 0.5, offsetFront: 0.5, height: 2 }),\r\n          wallRailing({ offsetLeft: 0.5, width: 4 }),\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst house: IHouse = {\r\n  floors: [],\r\n  wallthickness: spanishhouse.wallthickness,\r\n};\r\n\r\nfunction addFloor(props: { height: number }) {\r\n  house.floors.push({ ...props, sides: [] });\r\n\r\n  return house.floors[house.floors.length - 1];\r\n}\r\nconsole.clear();\r\n\r\nfor (var f = 0; f < spanishhouse.floors.length; f++) {\r\n  const floor = spanishhouse.floors[f];\r\n  let currentFloor = addFloor({\r\n    height: floor.height,\r\n    materials: floor.materials,\r\n    floor: floor.floor === undefined ? true : floor.floor,\r\n  });\r\n\r\n  currentFloor.sides = floor.sides;\r\n}\r\n\r\n// Step 1: Define a new floor object\r\nconst newFloor = {\r\n  height: 3, // Example height\r\n  floor: true, // This indicates it's an actual floor and not just a structural element\r\n  materials: {\r\n    floor: floorMaterial, // Assuming you want to use the same floor material as the other floors\r\n  },\r\n  sides: [\r\n    {\r\n      // Assuming this side of the floor will have the window\r\n      holes: [\r\n        normalWindow({ offsetLeft: 1 }), // Step 3: Add a window with an offset of 1 from the left\r\n\r\n        smallWindowCuong({ offsetLeft: 3, bottom: 0.5, width: 1, height: 1 }),\r\n        // hangingLights({ offsetLeft: 0.5, width: 6, depth: 3 }),\r\n      ],\r\n    },\r\n    {\r\n      holes: [\r\n        smallWindow({ offsetLeft: 1 }),\r\n        smallWindowCuong({ offsetLeft: 1, bottom: 0.6, width: 2, height: 1 }),\r\n      ],\r\n    },\r\n    {\r\n      holes: [\r\n        smallWindow({ offsetLeft: 1 }),\r\n        smallWindowCuong({ offsetLeft: 3, bottom: 0.3, width: 1, height: 1 }),\r\n        // smallWindowCuong({ offsetLeft: 3 }),\r\n      ],\r\n    },\r\n    {}, // Other sides of the floor without holes\r\n  ],\r\n};\r\n\r\n// Step 4: Add the new floor to the house\r\nhouse.floors.push(newFloor);\r\n\r\nconst newFloor2 = {\r\n  height: 3, // Example height\r\n  floor: true, // This indicates it's an actual floor and not just a structural element\r\n  materials: {\r\n    floor: floorMaterial, // Assuming you want to use the same floor material as the other floors\r\n  },\r\n  sides: [\r\n    {\r\n      // Assuming this side of the floor will have the window\r\n      holes: [\r\n        normalWindow({ offsetLeft: 1 }), // Step 3: Add a window with an offset of 1 from the left\r\n\r\n      ],\r\n    },\r\n    {\r\n      holes: [\r\n        smallWindowCuong({ offsetLeft: 1, bottom: 0.6, width: 2, height: 1 }),\r\n      ],\r\n    },\r\n    {\r\n      holes: [\r\n        smallWindow({ offsetLeft: 1 }),\r\n        smallWindowCuong({ offsetLeft: 3, bottom: 0.3, width: 1, height: 1 }),\r\n        // smallWindowCuong({ offsetLeft: 3 }),\r\n      ],\r\n    },\r\n    {}, // Other sides of the floor without holes\r\n  ],\r\n};\r\nhouse.floors.push(newFloor2);\r\n\r\nexport default house;\r\n","import * as THREE from \"three\";\r\nimport { Vector3 } from \"three\";\r\nimport {\r\n  roofMaterial,\r\n  floorMaterial,\r\n  wallMaterial,\r\n  aluMaterial,\r\n  aweningMaterial,\r\n  aweningMaterial2,\r\n  woodMaterial,\r\n  plantMaterial,\r\n  bulbMaterial,\r\n  bulbMaterialOn\r\n} from \"./materials\";\r\n\r\nimport { IHouse } from \"./houses/types\";\r\n\r\nconsole.clear();\r\n\r\nexport function getNormal(u: Vector3, v: Vector3): Vector3 {\r\n  return new THREE.Plane().setFromCoplanarPoints(new Vector3(), u, v).normal;\r\n}\r\n\r\nexport function signedAngleTo(u: Vector3, v: Vector3): number {\r\n  // Get the signed angle between u and v, in the range [-pi, pi]\r\n  const angle = u.angleTo(v);\r\n  const normal = getNormal(u, v);\r\n  return normal.z * angle;\r\n}\r\n\r\nconst angleTo = (from: THREE.Vector3, to: THREE.Vector3) => {\r\n  let angle = 0;\r\n  try {\r\n    let closingAngle = to.angleTo(from);\r\n    angle = THREE.MathUtils.radToDeg(closingAngle);\r\n\r\n    if (angle < 0) {\r\n      angle += 180;\r\n    }\r\n  } catch {\r\n    console.log(from, to);\r\n  }\r\n\r\n  return angle;\r\n};\r\n\r\nconst setData = (house: IHouse) => {\r\n  if (house.floors.length > 0) {\r\n    let previousFloor;\r\n    for (var f = 1; f < house.floors.length; f++) {\r\n      const floor = house.floors[f];\r\n      previousFloor = house.floors[f - 1];\r\n      if (!floor.sides) {\r\n        floor.sides = [];\r\n      }\r\n\r\n      // Create empty arrays\r\n      for (var s = 0; s < house.floors[0].sides.length; s++) {\r\n        if (!floor.sides[s]) {\r\n          floor.sides.push({});\r\n        }\r\n      }\r\n\r\n      // Fill in side data from previous\r\n      for (s = 0; s < house.floors[0].sides.length; s++) {\r\n        const side = floor.sides[s];\r\n        const y = previousFloor.sides[0].start.y + previousFloor.height;\r\n\r\n        side.start = previousFloor.sides[s].start\r\n          ?.clone()\r\n          .add(side.shift || new Vector3());\r\n        side.start.y = y;\r\n        if (s === 0) {\r\n          floor.sides[floor.sides.length - 1].end = side.start?.clone();\r\n        } else {\r\n          floor.sides[s - 1].end = side.start?.clone();\r\n        }\r\n        side.width = 3;\r\n        // side.end = previousFloor.sides[s].end?.clone();\r\n      }\r\n    }\r\n\r\n    for (f = 1; f < house.floors.length; f++) {\r\n      for (s = 0; s < house.floors[0].sides.length; s++) {\r\n        const side = house.floors[f].sides[s];\r\n        side.width = side.start?.distanceTo(side.end);\r\n      }\r\n    }\r\n  }\r\n  for (f = 0; f < house.floors.length; f++) {\r\n    const floor = house.floors[f];\r\n    for (s = 0; s < floor.sides.length; s++) {\r\n      const side = floor.sides[s];\r\n      if (side.holes) {\r\n        const sideWidth = side.width || 1;\r\n        // const floorBase = house.floors\r\n        //   .slice(0, f)\r\n        //   .reduce((partialSum, a) => partialSum + a.height, 0);\r\n\r\n        for (var ii = 0; ii < side.holes.length; ii++) {\r\n          if (side.holes[ii]) {\r\n            const hole = side.holes[ii];\r\n\r\n            let windowOffset = hole.offsetLeft;\r\n            if (hole.offsetLeft != null && hole.offsetLeft < 1) {\r\n              windowOffset = sideWidth * hole.offsetLeft;\r\n            }\r\n\r\n            if (hole.top != null && hole.bottom != null && !hole.height) {\r\n              const holeHeight = floor.height * (1 - hole.top - hole.bottom);\r\n\r\n              hole.height = holeHeight;\r\n            }\r\n            if (side.start) {\r\n              if (hole.bottom != null) {\r\n                hole.y = floor.height * hole.bottom + hole.height / 2;\r\n              } else if (hole.top != null) {\r\n                hole.y =\r\n                  floor.height - hole.height / 2 + floor.height * hole.top;\r\n              } else {\r\n                hole.y = 0;\r\n              }\r\n            }\r\n\r\n            hole.x = windowOffset;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // if (floor.ground) {\r\n    //   for (var g = 0; g < floor.ground.length; g++) {\r\n    //     const ground = floor.ground[g];\r\n    //     if (ground) {\r\n    //       console.log(ground);\r\n    //     }\r\n    //   }\r\n    // }\r\n  }\r\n  console.log(\"--------\");\r\n  console.log(house);\r\n\r\n  return house;\r\n};\r\n\r\nconst fillData = (house: IHouse) => {\r\n  if (!house.floors.length) return;\r\n\r\n  for (var f = 0; f < 1; f++) {\r\n    const floor = house.floors[f];\r\n    for (var s = 0; s < floor.sides.length; s++) {\r\n      const side = floor.sides[s];\r\n      if (s < floor.sides.length - 1) {\r\n        side.end = floor.sides[s + 1].start.clone();\r\n      } else {\r\n        side.end = floor.sides[0].start.clone();\r\n      }\r\n    }\r\n  }\r\n\r\n  return setData(house);\r\n};\r\n\r\nconst init = (house: IHouse) => {\r\n  return fillData(house);\r\n};\r\n\r\nexport default init;\r\n","// Split strategy constants\nexport const CENTER = 0;\nexport const AVERAGE = 1;\nexport const SAH = 2;\n\n// Traversal constants\nexport const NOT_INTERSECTED = 0;\nexport const INTERSECTED = 1;\nexport const CONTAINED = 2;\n\n// SAH cost constants\n// TODO: hone these costs more. The relative difference between them should be the\n// difference in measured time to perform a triangle intersection vs traversing\n// bounds.\nexport const TRIANGLE_INTERSECT_COST = 1.25;\nexport const TRAVERSAL_COST = 1;\n\n\n// Build constants\nexport const BYTES_PER_NODE = 6 * 4 + 4 + 4;\nexport const IS_LEAFNODE_FLAG = 0xFFFF;\n\n// EPSILON for computing floating point error during build\n// https://en.wikipedia.org/wiki/Machine_epsilon#Values_for_standard_hardware_floating_point_arithmetics\nexport const FLOAT32_EPSILON = Math.pow( 2, - 24 );\n\n","export class MeshBVHNode {\n\n\tconstructor() {\n\n\t\t// internal nodes have boundingData, left, right, and splitAxis\n\t\t// leaf nodes have offset and count (referring to primitives in the mesh geometry)\n\n\t}\n\n}\n","export function arrayToBox( nodeIndex32, array, target ) {\n\n\ttarget.min.x = array[ nodeIndex32 ];\n\ttarget.min.y = array[ nodeIndex32 + 1 ];\n\ttarget.min.z = array[ nodeIndex32 + 2 ];\n\n\ttarget.max.x = array[ nodeIndex32 + 3 ];\n\ttarget.max.y = array[ nodeIndex32 + 4 ];\n\ttarget.max.z = array[ nodeIndex32 + 5 ];\n\n\treturn target;\n\n}\n\nexport function getLongestEdgeIndex( bounds ) {\n\n\tlet splitDimIdx = - 1;\n\tlet splitDist = - Infinity;\n\n\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\tconst dist = bounds[ i + 3 ] - bounds[ i ];\n\t\tif ( dist > splitDist ) {\n\n\t\t\tsplitDist = dist;\n\t\t\tsplitDimIdx = i;\n\n\t\t}\n\n\t}\n\n\treturn splitDimIdx;\n\n}\n\n// copys bounds a into bounds b\nexport function copyBounds( source, target ) {\n\n\ttarget.set( source );\n\n}\n\n// sets bounds target to the union of bounds a and b\nexport function unionBounds( a, b, target ) {\n\n\tlet aVal, bVal;\n\tfor ( let d = 0; d < 3; d ++ ) {\n\n\t\tconst d3 = d + 3;\n\n\t\t// set the minimum values\n\t\taVal = a[ d ];\n\t\tbVal = b[ d ];\n\t\ttarget[ d ] = aVal < bVal ? aVal : bVal;\n\n\t\t// set the max values\n\t\taVal = a[ d3 ];\n\t\tbVal = b[ d3 ];\n\t\ttarget[ d3 ] = aVal > bVal ? aVal : bVal;\n\n\t}\n\n}\n\n// expands the given bounds by the provided triangle bounds\nexport function expandByTriangleBounds( startIndex, triangleBounds, bounds ) {\n\n\tfor ( let d = 0; d < 3; d ++ ) {\n\n\t\tconst tCenter = triangleBounds[ startIndex + 2 * d ];\n\t\tconst tHalf = triangleBounds[ startIndex + 2 * d + 1 ];\n\n\t\tconst tMin = tCenter - tHalf;\n\t\tconst tMax = tCenter + tHalf;\n\n\t\tif ( tMin < bounds[ d ] ) {\n\n\t\t\tbounds[ d ] = tMin;\n\n\t\t}\n\n\t\tif ( tMax > bounds[ d + 3 ] ) {\n\n\t\t\tbounds[ d + 3 ] = tMax;\n\n\t\t}\n\n\t}\n\n}\n\n// compute bounds surface area\nexport function computeSurfaceArea( bounds ) {\n\n\tconst d0 = bounds[ 3 ] - bounds[ 0 ];\n\tconst d1 = bounds[ 4 ] - bounds[ 1 ];\n\tconst d2 = bounds[ 5 ] - bounds[ 2 ];\n\n\treturn 2 * ( d0 * d1 + d1 * d2 + d2 * d0 );\n\n}\n","import { BufferAttribute } from 'three';\nimport { MeshBVHNode } from './MeshBVHNode.js';\nimport { getLongestEdgeIndex, computeSurfaceArea, copyBounds, unionBounds, expandByTriangleBounds } from '../utils/ArrayBoxUtilities.js';\nimport {\n\tCENTER, AVERAGE, SAH, TRIANGLE_INTERSECT_COST, TRAVERSAL_COST,\n\tBYTES_PER_NODE, FLOAT32_EPSILON, IS_LEAFNODE_FLAG,\n} from './Constants.js';\n\nfunction ensureIndex( geo, options ) {\n\n\tif ( ! geo.index ) {\n\n\t\tconst vertexCount = geo.attributes.position.count;\n\t\tconst BufferConstructor = options.useSharedArrayBuffer ? SharedArrayBuffer : ArrayBuffer;\n\t\tlet index;\n\t\tif ( vertexCount > 65535 ) {\n\n\t\t\tindex = new Uint32Array( new BufferConstructor( 4 * vertexCount ) );\n\n\t\t} else {\n\n\t\t\tindex = new Uint16Array( new BufferConstructor( 2 * vertexCount ) );\n\n\t\t}\n\n\t\tgeo.setIndex( new BufferAttribute( index, 1 ) );\n\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tindex[ i ] = i;\n\n\t\t}\n\n\t}\n\n}\n\n// Computes the set of { offset, count } ranges which need independent BVH roots. Each\n// region in the geometry index that belongs to a different set of material groups requires\n// a separate BVH root, so that triangles indices belonging to one group never get swapped\n// with triangle indices belongs to another group. For example, if the groups were like this:\n//\n// [-------------------------------------------------------------]\n// |__________________|\n//   g0 = [0, 20]  |______________________||_____________________|\n//                      g1 = [16, 40]           g2 = [41, 60]\n//\n// we would need four BVH roots: [0, 15], [16, 20], [21, 40], [41, 60].\nfunction getRootIndexRanges( geo ) {\n\n\tif ( ! geo.groups || ! geo.groups.length ) {\n\n\t\treturn [ { offset: 0, count: geo.index.count / 3 } ];\n\n\t}\n\n\tconst ranges = [];\n\tconst rangeBoundaries = new Set();\n\tfor ( const group of geo.groups ) {\n\n\t\trangeBoundaries.add( group.start );\n\t\trangeBoundaries.add( group.start + group.count );\n\n\t}\n\n\t// note that if you don't pass in a comparator, it sorts them lexicographically as strings :-(\n\tconst sortedBoundaries = Array.from( rangeBoundaries.values() ).sort( ( a, b ) => a - b );\n\tfor ( let i = 0; i < sortedBoundaries.length - 1; i ++ ) {\n\n\t\tconst start = sortedBoundaries[ i ], end = sortedBoundaries[ i + 1 ];\n\t\tranges.push( { offset: ( start / 3 ), count: ( end - start ) / 3 } );\n\n\t}\n\n\treturn ranges;\n\n}\n\n// computes the union of the bounds of all of the given triangles and puts the resulting box in target. If\n// centroidTarget is provided then a bounding box is computed for the centroids of the triangles, as well.\n// These are computed together to avoid redundant accesses to bounds array.\nfunction getBounds( triangleBounds, offset, count, target, centroidTarget = null ) {\n\n\tlet minx = Infinity;\n\tlet miny = Infinity;\n\tlet minz = Infinity;\n\tlet maxx = - Infinity;\n\tlet maxy = - Infinity;\n\tlet maxz = - Infinity;\n\n\tlet cminx = Infinity;\n\tlet cminy = Infinity;\n\tlet cminz = Infinity;\n\tlet cmaxx = - Infinity;\n\tlet cmaxy = - Infinity;\n\tlet cmaxz = - Infinity;\n\n\tconst includeCentroid = centroidTarget !== null;\n\tfor ( let i = offset * 6, end = ( offset + count ) * 6; i < end; i += 6 ) {\n\n\t\tconst cx = triangleBounds[ i + 0 ];\n\t\tconst hx = triangleBounds[ i + 1 ];\n\t\tconst lx = cx - hx;\n\t\tconst rx = cx + hx;\n\t\tif ( lx < minx ) minx = lx;\n\t\tif ( rx > maxx ) maxx = rx;\n\t\tif ( includeCentroid && cx < cminx ) cminx = cx;\n\t\tif ( includeCentroid && cx > cmaxx ) cmaxx = cx;\n\n\t\tconst cy = triangleBounds[ i + 2 ];\n\t\tconst hy = triangleBounds[ i + 3 ];\n\t\tconst ly = cy - hy;\n\t\tconst ry = cy + hy;\n\t\tif ( ly < miny ) miny = ly;\n\t\tif ( ry > maxy ) maxy = ry;\n\t\tif ( includeCentroid && cy < cminy ) cminy = cy;\n\t\tif ( includeCentroid && cy > cmaxy ) cmaxy = cy;\n\n\t\tconst cz = triangleBounds[ i + 4 ];\n\t\tconst hz = triangleBounds[ i + 5 ];\n\t\tconst lz = cz - hz;\n\t\tconst rz = cz + hz;\n\t\tif ( lz < minz ) minz = lz;\n\t\tif ( rz > maxz ) maxz = rz;\n\t\tif ( includeCentroid && cz < cminz ) cminz = cz;\n\t\tif ( includeCentroid && cz > cmaxz ) cmaxz = cz;\n\n\t}\n\n\ttarget[ 0 ] = minx;\n\ttarget[ 1 ] = miny;\n\ttarget[ 2 ] = minz;\n\n\ttarget[ 3 ] = maxx;\n\ttarget[ 4 ] = maxy;\n\ttarget[ 5 ] = maxz;\n\n\tif ( includeCentroid ) {\n\n\t\tcentroidTarget[ 0 ] = cminx;\n\t\tcentroidTarget[ 1 ] = cminy;\n\t\tcentroidTarget[ 2 ] = cminz;\n\n\t\tcentroidTarget[ 3 ] = cmaxx;\n\t\tcentroidTarget[ 4 ] = cmaxy;\n\t\tcentroidTarget[ 5 ] = cmaxz;\n\n\t}\n\n}\n\n// A stand alone function for retrieving the centroid bounds.\nfunction getCentroidBounds( triangleBounds, offset, count, centroidTarget ) {\n\n\tlet cminx = Infinity;\n\tlet cminy = Infinity;\n\tlet cminz = Infinity;\n\tlet cmaxx = - Infinity;\n\tlet cmaxy = - Infinity;\n\tlet cmaxz = - Infinity;\n\n\tfor ( let i = offset * 6, end = ( offset + count ) * 6; i < end; i += 6 ) {\n\n\t\tconst cx = triangleBounds[ i + 0 ];\n\t\tif ( cx < cminx ) cminx = cx;\n\t\tif ( cx > cmaxx ) cmaxx = cx;\n\n\t\tconst cy = triangleBounds[ i + 2 ];\n\t\tif ( cy < cminy ) cminy = cy;\n\t\tif ( cy > cmaxy ) cmaxy = cy;\n\n\t\tconst cz = triangleBounds[ i + 4 ];\n\t\tif ( cz < cminz ) cminz = cz;\n\t\tif ( cz > cmaxz ) cmaxz = cz;\n\n\t}\n\n\tcentroidTarget[ 0 ] = cminx;\n\tcentroidTarget[ 1 ] = cminy;\n\tcentroidTarget[ 2 ] = cminz;\n\n\tcentroidTarget[ 3 ] = cmaxx;\n\tcentroidTarget[ 4 ] = cmaxy;\n\tcentroidTarget[ 5 ] = cmaxz;\n\n}\n\n\n// reorders `tris` such that for `count` elements after `offset`, elements on the left side of the split\n// will be on the left and elements on the right side of the split will be on the right. returns the index\n// of the first element on the right side, or offset + count if there are no elements on the right side.\nfunction partition( index, triangleBounds, offset, count, split ) {\n\n\tlet left = offset;\n\tlet right = offset + count - 1;\n\tconst pos = split.pos;\n\tconst axisOffset = split.axis * 2;\n\n\t// hoare partitioning, see e.g. https://en.wikipedia.org/wiki/Quicksort#Hoare_partition_scheme\n\twhile ( true ) {\n\n\t\twhile ( left <= right && triangleBounds[ left * 6 + axisOffset ] < pos ) {\n\n\t\t\tleft ++;\n\n\t\t}\n\n\n\t\t// if a triangle center lies on the partition plane it is considered to be on the right side\n\t\twhile ( left <= right && triangleBounds[ right * 6 + axisOffset ] >= pos ) {\n\n\t\t\tright --;\n\n\t\t}\n\n\t\tif ( left < right ) {\n\n\t\t\t// we need to swap all of the information associated with the triangles at index\n\t\t\t// left and right; that's the verts in the geometry index, the bounds,\n\t\t\t// and perhaps the SAH planes\n\n\t\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\t\tlet t0 = index[ left * 3 + i ];\n\t\t\t\tindex[ left * 3 + i ] = index[ right * 3 + i ];\n\t\t\t\tindex[ right * 3 + i ] = t0;\n\n\t\t\t\tlet t1 = triangleBounds[ left * 6 + i * 2 + 0 ];\n\t\t\t\ttriangleBounds[ left * 6 + i * 2 + 0 ] = triangleBounds[ right * 6 + i * 2 + 0 ];\n\t\t\t\ttriangleBounds[ right * 6 + i * 2 + 0 ] = t1;\n\n\t\t\t\tlet t2 = triangleBounds[ left * 6 + i * 2 + 1 ];\n\t\t\t\ttriangleBounds[ left * 6 + i * 2 + 1 ] = triangleBounds[ right * 6 + i * 2 + 1 ];\n\t\t\t\ttriangleBounds[ right * 6 + i * 2 + 1 ] = t2;\n\n\t\t\t}\n\n\t\t\tleft ++;\n\t\t\tright --;\n\n\t\t} else {\n\n\t\t\treturn left;\n\n\t\t}\n\n\t}\n\n}\n\nconst BIN_COUNT = 32;\nconst binsSort = ( a, b ) => a.candidate - b.candidate;\nconst sahBins = new Array( BIN_COUNT ).fill().map( () => {\n\n\treturn {\n\n\t\tcount: 0,\n\t\tbounds: new Float32Array( 6 ),\n\t\trightCacheBounds: new Float32Array( 6 ),\n\t\tleftCacheBounds: new Float32Array( 6 ),\n\t\tcandidate: 0,\n\n\t};\n\n} );\nconst leftBounds = new Float32Array( 6 );\n\nfunction getOptimalSplit( nodeBoundingData, centroidBoundingData, triangleBounds, offset, count, strategy ) {\n\n\tlet axis = - 1;\n\tlet pos = 0;\n\n\t// Center\n\tif ( strategy === CENTER ) {\n\n\t\taxis = getLongestEdgeIndex( centroidBoundingData );\n\t\tif ( axis !== - 1 ) {\n\n\t\t\tpos = ( centroidBoundingData[ axis ] + centroidBoundingData[ axis + 3 ] ) / 2;\n\n\t\t}\n\n\t} else if ( strategy === AVERAGE ) {\n\n\t\taxis = getLongestEdgeIndex( nodeBoundingData );\n\t\tif ( axis !== - 1 ) {\n\n\t\t\tpos = getAverage( triangleBounds, offset, count, axis );\n\n\t\t}\n\n\t} else if ( strategy === SAH ) {\n\n\t\tconst rootSurfaceArea = computeSurfaceArea( nodeBoundingData );\n\t\tlet bestCost = TRIANGLE_INTERSECT_COST * count;\n\n\t\t// iterate over all axes\n\t\tconst cStart = offset * 6;\n\t\tconst cEnd = ( offset + count ) * 6;\n\t\tfor ( let a = 0; a < 3; a ++ ) {\n\n\t\t\tconst axisLeft = centroidBoundingData[ a ];\n\t\t\tconst axisRight = centroidBoundingData[ a + 3 ];\n\t\t\tconst axisLength = axisRight - axisLeft;\n\t\t\tconst binWidth = axisLength / BIN_COUNT;\n\n\t\t\t// If we have fewer triangles than we're planning to split then just check all\n\t\t\t// the triangle positions because it will be faster.\n\t\t\tif ( count < BIN_COUNT / 4 ) {\n\n\t\t\t\t// initialize the bin candidates\n\t\t\t\tconst truncatedBins = [ ...sahBins ];\n\t\t\t\ttruncatedBins.length = count;\n\n\t\t\t\t// set the candidates\n\t\t\t\tlet b = 0;\n\t\t\t\tfor ( let c = cStart; c < cEnd; c += 6, b ++ ) {\n\n\t\t\t\t\tconst bin = truncatedBins[ b ];\n\t\t\t\t\tbin.candidate = triangleBounds[ c + 2 * a ];\n\t\t\t\t\tbin.count = 0;\n\n\t\t\t\t\tconst {\n\t\t\t\t\t\tbounds,\n\t\t\t\t\t\tleftCacheBounds,\n\t\t\t\t\t\trightCacheBounds,\n\t\t\t\t\t} = bin;\n\t\t\t\t\tfor ( let d = 0; d < 3; d ++ ) {\n\n\t\t\t\t\t\trightCacheBounds[ d ] = Infinity;\n\t\t\t\t\t\trightCacheBounds[ d + 3 ] = - Infinity;\n\n\t\t\t\t\t\tleftCacheBounds[ d ] = Infinity;\n\t\t\t\t\t\tleftCacheBounds[ d + 3 ] = - Infinity;\n\n\t\t\t\t\t\tbounds[ d ] = Infinity;\n\t\t\t\t\t\tbounds[ d + 3 ] = - Infinity;\n\n\t\t\t\t\t}\n\n\t\t\t\t\texpandByTriangleBounds( c, triangleBounds, bounds );\n\n\t\t\t\t}\n\n\t\t\t\ttruncatedBins.sort( binsSort );\n\n\t\t\t\t// remove redundant splits\n\t\t\t\tlet splitCount = count;\n\t\t\t\tfor ( let bi = 0; bi < splitCount; bi ++ ) {\n\n\t\t\t\t\tconst bin = truncatedBins[ bi ];\n\t\t\t\t\twhile ( bi + 1 < splitCount && truncatedBins[ bi + 1 ].candidate === bin.candidate ) {\n\n\t\t\t\t\t\ttruncatedBins.splice( bi + 1, 1 );\n\t\t\t\t\t\tsplitCount --;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// find the appropriate bin for each triangle and expand the bounds.\n\t\t\t\tfor ( let c = cStart; c < cEnd; c += 6 ) {\n\n\t\t\t\t\tconst center = triangleBounds[ c + 2 * a ];\n\t\t\t\t\tfor ( let bi = 0; bi < splitCount; bi ++ ) {\n\n\t\t\t\t\t\tconst bin = truncatedBins[ bi ];\n\t\t\t\t\t\tif ( center >= bin.candidate ) {\n\n\t\t\t\t\t\t\texpandByTriangleBounds( c, triangleBounds, bin.rightCacheBounds );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\texpandByTriangleBounds( c, triangleBounds, bin.leftCacheBounds );\n\t\t\t\t\t\t\tbin.count ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// expand all the bounds\n\t\t\t\tfor ( let bi = 0; bi < splitCount; bi ++ ) {\n\n\t\t\t\t\tconst bin = truncatedBins[ bi ];\n\t\t\t\t\tconst leftCount = bin.count;\n\t\t\t\t\tconst rightCount = count - bin.count;\n\n\t\t\t\t\t// check the cost of this split\n\t\t\t\t\tconst leftBounds = bin.leftCacheBounds;\n\t\t\t\t\tconst rightBounds = bin.rightCacheBounds;\n\n\t\t\t\t\tlet leftProb = 0;\n\t\t\t\t\tif ( leftCount !== 0 ) {\n\n\t\t\t\t\t\tleftProb = computeSurfaceArea( leftBounds ) / rootSurfaceArea;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet rightProb = 0;\n\t\t\t\t\tif ( rightCount !== 0 ) {\n\n\t\t\t\t\t\trightProb = computeSurfaceArea( rightBounds ) / rootSurfaceArea;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cost = TRAVERSAL_COST + TRIANGLE_INTERSECT_COST * (\n\t\t\t\t\t\tleftProb * leftCount + rightProb * rightCount\n\t\t\t\t\t);\n\n\t\t\t\t\tif ( cost < bestCost ) {\n\n\t\t\t\t\t\taxis = a;\n\t\t\t\t\t\tbestCost = cost;\n\t\t\t\t\t\tpos = bin.candidate;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// reset the bins\n\t\t\t\tfor ( let i = 0; i < BIN_COUNT; i ++ ) {\n\n\t\t\t\t\tconst bin = sahBins[ i ];\n\t\t\t\t\tbin.count = 0;\n\t\t\t\t\tbin.candidate = axisLeft + binWidth + i * binWidth;\n\n\t\t\t\t\tconst bounds = bin.bounds;\n\t\t\t\t\tfor ( let d = 0; d < 3; d ++ ) {\n\n\t\t\t\t\t\tbounds[ d ] = Infinity;\n\t\t\t\t\t\tbounds[ d + 3 ] = - Infinity;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over all center positions\n\t\t\t\tfor ( let c = cStart; c < cEnd; c += 6 ) {\n\n\t\t\t\t\tconst triCenter = triangleBounds[ c + 2 * a ];\n\t\t\t\t\tconst relativeCenter = triCenter - axisLeft;\n\n\t\t\t\t\t// in the partition function if the centroid lies on the split plane then it is\n\t\t\t\t\t// considered to be on the right side of the split\n\t\t\t\t\tlet binIndex = ~ ~ ( relativeCenter / binWidth );\n\t\t\t\t\tif ( binIndex >= BIN_COUNT ) binIndex = BIN_COUNT - 1;\n\n\t\t\t\t\tconst bin = sahBins[ binIndex ];\n\t\t\t\t\tbin.count ++;\n\n\t\t\t\t\texpandByTriangleBounds( c, triangleBounds, bin.bounds );\n\n\t\t\t\t}\n\n\t\t\t\t// cache the unioned bounds from right to left so we don't have to regenerate them each time\n\t\t\t\tconst lastBin = sahBins[ BIN_COUNT - 1 ];\n\t\t\t\tcopyBounds( lastBin.bounds, lastBin.rightCacheBounds );\n\t\t\t\tfor ( let i = BIN_COUNT - 2; i >= 0; i -- ) {\n\n\t\t\t\t\tconst bin = sahBins[ i ];\n\t\t\t\t\tconst nextBin = sahBins[ i + 1 ];\n\t\t\t\t\tunionBounds( bin.bounds, nextBin.rightCacheBounds, bin.rightCacheBounds );\n\n\t\t\t\t}\n\n\t\t\t\tlet leftCount = 0;\n\t\t\t\tfor ( let i = 0; i < BIN_COUNT - 1; i ++ ) {\n\n\t\t\t\t\tconst bin = sahBins[ i ];\n\t\t\t\t\tconst binCount = bin.count;\n\t\t\t\t\tconst bounds = bin.bounds;\n\n\t\t\t\t\tconst nextBin = sahBins[ i + 1 ];\n\t\t\t\t\tconst rightBounds = nextBin.rightCacheBounds;\n\n\t\t\t\t\t// dont do anything with the bounds if the new bounds have no triangles\n\t\t\t\t\tif ( binCount !== 0 ) {\n\n\t\t\t\t\t\tif ( leftCount === 0 ) {\n\n\t\t\t\t\t\t\tcopyBounds( bounds, leftBounds );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tunionBounds( bounds, leftBounds, leftBounds );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tleftCount += binCount;\n\n\t\t\t\t\t// check the cost of this split\n\t\t\t\t\tlet leftProb = 0;\n\t\t\t\t\tlet rightProb = 0;\n\n\t\t\t\t\tif ( leftCount !== 0 ) {\n\n\t\t\t\t\t\tleftProb = computeSurfaceArea( leftBounds ) / rootSurfaceArea;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst rightCount = count - leftCount;\n\t\t\t\t\tif ( rightCount !== 0 ) {\n\n\t\t\t\t\t\trightProb = computeSurfaceArea( rightBounds ) / rootSurfaceArea;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cost = TRAVERSAL_COST + TRIANGLE_INTERSECT_COST * (\n\t\t\t\t\t\tleftProb * leftCount + rightProb * rightCount\n\t\t\t\t\t);\n\n\t\t\t\t\tif ( cost < bestCost ) {\n\n\t\t\t\t\t\taxis = a;\n\t\t\t\t\t\tbestCost = cost;\n\t\t\t\t\t\tpos = bin.candidate;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\tconsole.warn( `MeshBVH: Invalid build strategy value ${ strategy } used.` );\n\n\t}\n\n\treturn { axis, pos };\n\n}\n\n// returns the average coordinate on the specified axis of the all the provided triangles\nfunction getAverage( triangleBounds, offset, count, axis ) {\n\n\tlet avg = 0;\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\n\n\t\tavg += triangleBounds[ i * 6 + axis * 2 ];\n\n\t}\n\n\treturn avg / count;\n\n}\n\n// precomputes the bounding box for each triangle; required for quickly calculating tree splits.\n// result is an array of size tris.length * 6 where triangle i maps to a\n// [x_center, x_delta, y_center, y_delta, z_center, z_delta] tuple starting at index i * 6,\n// representing the center and half-extent in each dimension of triangle i\nfunction computeTriangleBounds( geo, fullBounds ) {\n\n\tconst posAttr = geo.attributes.position;\n\tconst index = geo.index.array;\n\tconst triCount = index.length / 3;\n\tconst triangleBounds = new Float32Array( triCount * 6 );\n\tconst normalized = posAttr.normalized;\n\n\t// used for non-normalized positions\n\tconst posArr = posAttr.array;\n\n\t// support for an interleaved position buffer\n\tconst bufferOffset = posAttr.offset || 0;\n\tlet stride = 3;\n\tif ( posAttr.isInterleavedBufferAttribute ) {\n\n\t\tstride = posAttr.data.stride;\n\n\t}\n\n\t// used for normalized positions\n\tconst getters = [ 'getX', 'getY', 'getZ' ];\n\n\tfor ( let tri = 0; tri < triCount; tri ++ ) {\n\n\t\tconst tri3 = tri * 3;\n\t\tconst tri6 = tri * 6;\n\n\t\tlet ai, bi, ci;\n\n\t\tif ( normalized ) {\n\n\t\t\tai = index[ tri3 + 0 ];\n\t\t\tbi = index[ tri3 + 1 ];\n\t\t\tci = index[ tri3 + 2 ];\n\n\t\t} else {\n\n\t\t\tai = index[ tri3 + 0 ] * stride + bufferOffset;\n\t\t\tbi = index[ tri3 + 1 ] * stride + bufferOffset;\n\t\t\tci = index[ tri3 + 2 ] * stride + bufferOffset;\n\n\t\t}\n\n\t\tfor ( let el = 0; el < 3; el ++ ) {\n\n\t\t\tlet a, b, c;\n\n\t\t\tif ( normalized ) {\n\n\t\t\t\ta = posAttr[ getters[ el ] ]( ai );\n\t\t\t\tb = posAttr[ getters[ el ] ]( bi );\n\t\t\t\tc = posAttr[ getters[ el ] ]( ci );\n\n\t\t\t} else {\n\n\t\t\t\ta = posArr[ ai + el ];\n\t\t\t\tb = posArr[ bi + el ];\n\t\t\t\tc = posArr[ ci + el ];\n\n\t\t\t}\n\n\t\t\tlet min = a;\n\t\t\tif ( b < min ) min = b;\n\t\t\tif ( c < min ) min = c;\n\n\t\t\tlet max = a;\n\t\t\tif ( b > max ) max = b;\n\t\t\tif ( c > max ) max = c;\n\n\t\t\t// Increase the bounds size by float32 epsilon to avoid precision errors when\n\t\t\t// converting to 32 bit float. Scale the epsilon by the size of the numbers being\n\t\t\t// worked with.\n\t\t\tconst halfExtents = ( max - min ) / 2;\n\t\t\tconst el2 = el * 2;\n\t\t\ttriangleBounds[ tri6 + el2 + 0 ] = min + halfExtents;\n\t\t\ttriangleBounds[ tri6 + el2 + 1 ] = halfExtents + ( Math.abs( min ) + halfExtents ) * FLOAT32_EPSILON;\n\n\t\t\tif ( min < fullBounds[ el ] ) fullBounds[ el ] = min;\n\t\t\tif ( max > fullBounds[ el + 3 ] ) fullBounds[ el + 3 ] = max;\n\n\t\t}\n\n\t}\n\n\treturn triangleBounds;\n\n}\n\nexport function buildTree( geo, options ) {\n\n\tfunction triggerProgress( trianglesProcessed ) {\n\n\t\tif ( onProgress ) {\n\n\t\t\tonProgress( trianglesProcessed / totalTriangles );\n\n\t\t}\n\n\t}\n\n\t// either recursively splits the given node, creating left and right subtrees for it, or makes it a leaf node,\n\t// recording the offset and count of its triangles and writing them into the reordered geometry index.\n\tfunction splitNode( node, offset, count, centroidBoundingData = null, depth = 0 ) {\n\n\t\tif ( ! reachedMaxDepth && depth >= maxDepth ) {\n\n\t\t\treachedMaxDepth = true;\n\t\t\tif ( verbose ) {\n\n\t\t\t\tconsole.warn( `MeshBVH: Max depth of ${ maxDepth } reached when generating BVH. Consider increasing maxDepth.` );\n\t\t\t\tconsole.warn( geo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// early out if we've met our capacity\n\t\tif ( count <= maxLeafTris || depth >= maxDepth ) {\n\n\t\t\ttriggerProgress( offset + count );\n\t\t\tnode.offset = offset;\n\t\t\tnode.count = count;\n\t\t\treturn node;\n\n\t\t}\n\n\t\t// Find where to split the volume\n\t\tconst split = getOptimalSplit( node.boundingData, centroidBoundingData, triangleBounds, offset, count, strategy );\n\t\tif ( split.axis === - 1 ) {\n\n\t\t\ttriggerProgress( offset + count );\n\t\t\tnode.offset = offset;\n\t\t\tnode.count = count;\n\t\t\treturn node;\n\n\t\t}\n\n\t\tconst splitOffset = partition( indexArray, triangleBounds, offset, count, split );\n\n\t\t// create the two new child nodes\n\t\tif ( splitOffset === offset || splitOffset === offset + count ) {\n\n\t\t\ttriggerProgress( offset + count );\n\t\t\tnode.offset = offset;\n\t\t\tnode.count = count;\n\n\t\t} else {\n\n\t\t\tnode.splitAxis = split.axis;\n\n\t\t\t// create the left child and compute its bounding box\n\t\t\tconst left = new MeshBVHNode();\n\t\t\tconst lstart = offset;\n\t\t\tconst lcount = splitOffset - offset;\n\t\t\tnode.left = left;\n\t\t\tleft.boundingData = new Float32Array( 6 );\n\n\t\t\tgetBounds( triangleBounds, lstart, lcount, left.boundingData, cacheCentroidBoundingData );\n\t\t\tsplitNode( left, lstart, lcount, cacheCentroidBoundingData, depth + 1 );\n\n\t\t\t// repeat for right\n\t\t\tconst right = new MeshBVHNode();\n\t\t\tconst rstart = splitOffset;\n\t\t\tconst rcount = count - lcount;\n\t\t\tnode.right = right;\n\t\t\tright.boundingData = new Float32Array( 6 );\n\n\t\t\tgetBounds( triangleBounds, rstart, rcount, right.boundingData, cacheCentroidBoundingData );\n\t\t\tsplitNode( right, rstart, rcount, cacheCentroidBoundingData, depth + 1 );\n\n\t\t}\n\n\t\treturn node;\n\n\t}\n\n\tensureIndex( geo, options );\n\n\t// Compute the full bounds of the geometry at the same time as triangle bounds because\n\t// we'll need it for the root bounds in the case with no groups and it should be fast here.\n\t// We can't use the geometrying bounding box if it's available because it may be out of date.\n\tconst fullBounds = new Float32Array( 6 );\n\tconst cacheCentroidBoundingData = new Float32Array( 6 );\n\tconst triangleBounds = computeTriangleBounds( geo, fullBounds );\n\tconst indexArray = geo.index.array;\n\tconst maxDepth = options.maxDepth;\n\tconst verbose = options.verbose;\n\tconst maxLeafTris = options.maxLeafTris;\n\tconst strategy = options.strategy;\n\tconst onProgress = options.onProgress;\n\tconst totalTriangles = geo.index.count / 3;\n\tlet reachedMaxDepth = false;\n\n\tconst roots = [];\n\tconst ranges = getRootIndexRanges( geo );\n\n\tif ( ranges.length === 1 ) {\n\n\t\tconst range = ranges[ 0 ];\n\t\tconst root = new MeshBVHNode();\n\t\troot.boundingData = fullBounds;\n\t\tgetCentroidBounds( triangleBounds, range.offset, range.count, cacheCentroidBoundingData );\n\n\t\tsplitNode( root, range.offset, range.count, cacheCentroidBoundingData );\n\t\troots.push( root );\n\n\t} else {\n\n\t\tfor ( let range of ranges ) {\n\n\t\t\tconst root = new MeshBVHNode();\n\t\t\troot.boundingData = new Float32Array( 6 );\n\t\t\tgetBounds( triangleBounds, range.offset, range.count, root.boundingData, cacheCentroidBoundingData );\n\n\t\t\tsplitNode( root, range.offset, range.count, cacheCentroidBoundingData );\n\t\t\troots.push( root );\n\n\t\t}\n\n\t}\n\n\treturn roots;\n\n}\n\nexport function buildPackedTree( geo, options ) {\n\n\t// boundingData  \t\t\t\t: 6 float32\n\t// right / offset \t\t\t\t: 1 uint32\n\t// splitAxis / isLeaf + count \t: 1 uint32 / 2 uint16\n\tconst roots = buildTree( geo, options );\n\n\tlet float32Array;\n\tlet uint32Array;\n\tlet uint16Array;\n\tconst packedRoots = [];\n\tconst BufferConstructor = options.useSharedArrayBuffer ? SharedArrayBuffer : ArrayBuffer;\n\tfor ( let i = 0; i < roots.length; i ++ ) {\n\n\t\tconst root = roots[ i ];\n\t\tlet nodeCount = countNodes( root );\n\n\t\tconst buffer = new BufferConstructor( BYTES_PER_NODE * nodeCount );\n\t\tfloat32Array = new Float32Array( buffer );\n\t\tuint32Array = new Uint32Array( buffer );\n\t\tuint16Array = new Uint16Array( buffer );\n\t\tpopulateBuffer( 0, root );\n\t\tpackedRoots.push( buffer );\n\n\t}\n\n\treturn packedRoots;\n\n\tfunction countNodes( node ) {\n\n\t\tif ( node.count ) {\n\n\t\t\treturn 1;\n\n\t\t} else {\n\n\t\t\treturn 1 + countNodes( node.left ) + countNodes( node.right );\n\n\t\t}\n\n\t}\n\n\tfunction populateBuffer( byteOffset, node ) {\n\n\t\tconst stride4Offset = byteOffset / 4;\n\t\tconst stride2Offset = byteOffset / 2;\n\t\tconst isLeaf = ! ! node.count;\n\t\tconst boundingData = node.boundingData;\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tfloat32Array[ stride4Offset + i ] = boundingData[ i ];\n\n\t\t}\n\n\t\tif ( isLeaf ) {\n\n\t\t\tconst offset = node.offset;\n\t\t\tconst count = node.count;\n\t\t\tuint32Array[ stride4Offset + 6 ] = offset;\n\t\t\tuint16Array[ stride2Offset + 14 ] = count;\n\t\t\tuint16Array[ stride2Offset + 15 ] = IS_LEAFNODE_FLAG;\n\t\t\treturn byteOffset + BYTES_PER_NODE;\n\n\t\t} else {\n\n\t\t\tconst left = node.left;\n\t\t\tconst right = node.right;\n\t\t\tconst splitAxis = node.splitAxis;\n\n\t\t\tlet nextUnusedPointer;\n\t\t\tnextUnusedPointer = populateBuffer( byteOffset + BYTES_PER_NODE, left );\n\n\t\t\tif ( ( nextUnusedPointer / 4 ) > Math.pow( 2, 32 ) ) {\n\n\t\t\t\tthrow new Error( 'MeshBVH: Cannot store child pointer greater than 32 bits.' );\n\n\t\t\t}\n\n\t\t\tuint32Array[ stride4Offset + 6 ] = nextUnusedPointer / 4;\n\t\t\tnextUnusedPointer = populateBuffer( nextUnusedPointer, right );\n\n\t\t\tuint32Array[ stride4Offset + 7 ] = splitAxis;\n\t\t\treturn nextUnusedPointer;\n\n\t\t}\n\n\t}\n\n}\n","import { Vector3 } from 'three';\n\nexport class SeparatingAxisBounds {\n\n\tconstructor() {\n\n\t\tthis.min = Infinity;\n\t\tthis.max = - Infinity;\n\n\t}\n\n\tsetFromPointsField( points, field ) {\n\n\t\tlet min = Infinity;\n\t\tlet max = - Infinity;\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst p = points[ i ];\n\t\t\tconst val = p[ field ];\n\t\t\tmin = val < min ? val : min;\n\t\t\tmax = val > max ? val : max;\n\n\t\t}\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tsetFromPoints( axis, points ) {\n\n\t\tlet min = Infinity;\n\t\tlet max = - Infinity;\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst p = points[ i ];\n\t\t\tconst val = axis.dot( p );\n\t\t\tmin = val < min ? val : min;\n\t\t\tmax = val > max ? val : max;\n\n\t\t}\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tisSeparated( other ) {\n\n\t\treturn this.min > other.max || other.min > this.max;\n\n\t}\n\n}\n\nSeparatingAxisBounds.prototype.setFromBox = ( function () {\n\n\tconst p = new Vector3();\n\treturn function setFromBox( axis, box ) {\n\n\t\tconst boxMin = box.min;\n\t\tconst boxMax = box.max;\n\t\tlet min = Infinity;\n\t\tlet max = - Infinity;\n\t\tfor ( let x = 0; x <= 1; x ++ ) {\n\n\t\t\tfor ( let y = 0; y <= 1; y ++ ) {\n\n\t\t\t\tfor ( let z = 0; z <= 1; z ++ ) {\n\n\t\t\t\t\tp.x = boxMin.x * x + boxMax.x * ( 1 - x );\n\t\t\t\t\tp.y = boxMin.y * y + boxMax.y * ( 1 - y );\n\t\t\t\t\tp.z = boxMin.z * z + boxMax.z * ( 1 - z );\n\n\t\t\t\t\tconst val = axis.dot( p );\n\t\t\t\t\tmin = Math.min( val, min );\n\t\t\t\t\tmax = Math.max( val, max );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t};\n\n} )();\n\nexport const areIntersecting = ( function () {\n\n\tconst cacheSatBounds = new SeparatingAxisBounds();\n\treturn function areIntersecting( shape1, shape2 ) {\n\n\t\tconst points1 = shape1.points;\n\t\tconst satAxes1 = shape1.satAxes;\n\t\tconst satBounds1 = shape1.satBounds;\n\n\t\tconst points2 = shape2.points;\n\t\tconst satAxes2 = shape2.satAxes;\n\t\tconst satBounds2 = shape2.satBounds;\n\n\t\t// check axes of the first shape\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst sb = satBounds1[ i ];\n\t\t\tconst sa = satAxes1[ i ];\n\t\t\tcacheSatBounds.setFromPoints( sa, points2 );\n\t\t\tif ( sb.isSeparated( cacheSatBounds ) ) return false;\n\n\t\t}\n\n\t\t// check axes of the second shape\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst sb = satBounds2[ i ];\n\t\t\tconst sa = satAxes2[ i ];\n\t\t\tcacheSatBounds.setFromPoints( sa, points1 );\n\t\t\tif ( sb.isSeparated( cacheSatBounds ) ) return false;\n\n\t\t}\n\n\t};\n\n} )();\n","import { Vector3, Vector2, Plane, Line3 } from 'three';\n\nexport const closestPointLineToLine = ( function () {\n\n\t// https://github.com/juj/MathGeoLib/blob/master/src/Geometry/Line.cpp#L56\n\tconst dir1 = new Vector3();\n\tconst dir2 = new Vector3();\n\tconst v02 = new Vector3();\n\treturn function closestPointLineToLine( l1, l2, result ) {\n\n\t\tconst v0 = l1.start;\n\t\tconst v10 = dir1;\n\t\tconst v2 = l2.start;\n\t\tconst v32 = dir2;\n\n\t\tv02.subVectors( v0, v2 );\n\t\tdir1.subVectors( l1.end, l1.start );\n\t\tdir2.subVectors( l2.end, l2.start );\n\n\t\t// float d0232 = v02.Dot(v32);\n\t\tconst d0232 = v02.dot( v32 );\n\n\t\t// float d3210 = v32.Dot(v10);\n\t\tconst d3210 = v32.dot( v10 );\n\n\t\t// float d3232 = v32.Dot(v32);\n\t\tconst d3232 = v32.dot( v32 );\n\n\t\t// float d0210 = v02.Dot(v10);\n\t\tconst d0210 = v02.dot( v10 );\n\n\t\t// float d1010 = v10.Dot(v10);\n\t\tconst d1010 = v10.dot( v10 );\n\n\t\t// float denom = d1010*d3232 - d3210*d3210;\n\t\tconst denom = d1010 * d3232 - d3210 * d3210;\n\n\t\tlet d, d2;\n\t\tif ( denom !== 0 ) {\n\n\t\t\td = ( d0232 * d3210 - d0210 * d3232 ) / denom;\n\n\t\t} else {\n\n\t\t\td = 0;\n\n\t\t}\n\n\t\td2 = ( d0232 + d * d3210 ) / d3232;\n\n\t\tresult.x = d;\n\t\tresult.y = d2;\n\n\t};\n\n} )();\n\nexport const closestPointsSegmentToSegment = ( function () {\n\n\t// https://github.com/juj/MathGeoLib/blob/master/src/Geometry/LineSegment.cpp#L187\n\tconst paramResult = new Vector2();\n\tconst temp1 = new Vector3();\n\tconst temp2 = new Vector3();\n\treturn function closestPointsSegmentToSegment( l1, l2, target1, target2 ) {\n\n\t\tclosestPointLineToLine( l1, l2, paramResult );\n\n\t\tlet d = paramResult.x;\n\t\tlet d2 = paramResult.y;\n\t\tif ( d >= 0 && d <= 1 && d2 >= 0 && d2 <= 1 ) {\n\n\t\t\tl1.at( d, target1 );\n\t\t\tl2.at( d2, target2 );\n\n\t\t\treturn;\n\n\t\t} else if ( d >= 0 && d <= 1 ) {\n\n\t\t\t// Only d2 is out of bounds.\n\t\t\tif ( d2 < 0 ) {\n\n\t\t\t\tl2.at( 0, target2 );\n\n\t\t\t} else {\n\n\t\t\t\tl2.at( 1, target2 );\n\n\t\t\t}\n\n\t\t\tl1.closestPointToPoint( target2, true, target1 );\n\t\t\treturn;\n\n\t\t} else if ( d2 >= 0 && d2 <= 1 ) {\n\n\t\t\t// Only d is out of bounds.\n\t\t\tif ( d < 0 ) {\n\n\t\t\t\tl1.at( 0, target1 );\n\n\t\t\t} else {\n\n\t\t\t\tl1.at( 1, target1 );\n\n\t\t\t}\n\n\t\t\tl2.closestPointToPoint( target1, true, target2 );\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// Both u and u2 are out of bounds.\n\t\t\tlet p;\n\t\t\tif ( d < 0 ) {\n\n\t\t\t\tp = l1.start;\n\n\t\t\t} else {\n\n\t\t\t\tp = l1.end;\n\n\t\t\t}\n\n\t\t\tlet p2;\n\t\t\tif ( d2 < 0 ) {\n\n\t\t\t\tp2 = l2.start;\n\n\t\t\t} else {\n\n\t\t\t\tp2 = l2.end;\n\n\t\t\t}\n\n\t\t\tconst closestPoint = temp1;\n\t\t\tconst closestPoint2 = temp2;\n\t\t\tl1.closestPointToPoint( p2, true, temp1 );\n\t\t\tl2.closestPointToPoint( p, true, temp2 );\n\n\t\t\tif ( closestPoint.distanceToSquared( p2 ) <= closestPoint2.distanceToSquared( p ) ) {\n\n\t\t\t\ttarget1.copy( closestPoint );\n\t\t\t\ttarget2.copy( p2 );\n\t\t\t\treturn;\n\n\t\t\t} else {\n\n\t\t\t\ttarget1.copy( p );\n\t\t\t\ttarget2.copy( closestPoint2 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n} )();\n\n\nexport const sphereIntersectTriangle = ( function () {\n\n\t// https://stackoverflow.com/questions/34043955/detect-collision-between-sphere-and-triangle-in-three-js\n\tconst closestPointTemp = new Vector3();\n\tconst projectedPointTemp = new Vector3();\n\tconst planeTemp = new Plane();\n\tconst lineTemp = new Line3();\n\treturn function sphereIntersectTriangle( sphere, triangle ) {\n\n\t\tconst { radius, center } = sphere;\n\t\tconst { a, b, c } = triangle;\n\n\t\t// phase 1\n\t\tlineTemp.start = a;\n\t\tlineTemp.end = b;\n\t\tconst closestPoint1 = lineTemp.closestPointToPoint( center, true, closestPointTemp );\n\t\tif ( closestPoint1.distanceTo( center ) <= radius ) return true;\n\n\t\tlineTemp.start = a;\n\t\tlineTemp.end = c;\n\t\tconst closestPoint2 = lineTemp.closestPointToPoint( center, true, closestPointTemp );\n\t\tif ( closestPoint2.distanceTo( center ) <= radius ) return true;\n\n\t\tlineTemp.start = b;\n\t\tlineTemp.end = c;\n\t\tconst closestPoint3 = lineTemp.closestPointToPoint( center, true, closestPointTemp );\n\t\tif ( closestPoint3.distanceTo( center ) <= radius ) return true;\n\n\t\t// phase 2\n\t\tconst plane = triangle.getPlane( planeTemp );\n\t\tconst dp = Math.abs( plane.distanceToPoint( center ) );\n\t\tif ( dp <= radius ) {\n\n\t\t\tconst pp = plane.projectPoint( center, projectedPointTemp );\n\t\t\tconst cp = triangle.containsPoint( pp );\n\t\t\tif ( cp ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t};\n\n} )();\n","import { Triangle, Vector3, Line3, Sphere, Plane } from 'three';\nimport { SeparatingAxisBounds } from './SeparatingAxisBounds.js';\nimport { closestPointsSegmentToSegment, sphereIntersectTriangle } from './MathUtilities.js';\n\nconst DIST_EPSILON = 1e-15;\nfunction isNearZero( value ) {\n\n\treturn Math.abs( value ) < DIST_EPSILON;\n\n}\n\nexport class ExtendedTriangle extends Triangle {\n\n\tconstructor( ...args ) {\n\n\t\tsuper( ...args );\n\n\t\tthis.isExtendedTriangle = true;\n\t\tthis.satAxes = new Array( 4 ).fill().map( () => new Vector3() );\n\t\tthis.satBounds = new Array( 4 ).fill().map( () => new SeparatingAxisBounds() );\n\t\tthis.points = [ this.a, this.b, this.c ];\n\t\tthis.sphere = new Sphere();\n\t\tthis.plane = new Plane();\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphereIntersectTriangle( sphere, this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst a = this.a;\n\t\tconst b = this.b;\n\t\tconst c = this.c;\n\t\tconst points = this.points;\n\n\t\tconst satAxes = this.satAxes;\n\t\tconst satBounds = this.satBounds;\n\n\t\tconst axis0 = satAxes[ 0 ];\n\t\tconst sab0 = satBounds[ 0 ];\n\t\tthis.getNormal( axis0 );\n\t\tsab0.setFromPoints( axis0, points );\n\n\t\tconst axis1 = satAxes[ 1 ];\n\t\tconst sab1 = satBounds[ 1 ];\n\t\taxis1.subVectors( a, b );\n\t\tsab1.setFromPoints( axis1, points );\n\n\t\tconst axis2 = satAxes[ 2 ];\n\t\tconst sab2 = satBounds[ 2 ];\n\t\taxis2.subVectors( b, c );\n\t\tsab2.setFromPoints( axis2, points );\n\n\t\tconst axis3 = satAxes[ 3 ];\n\t\tconst sab3 = satBounds[ 3 ];\n\t\taxis3.subVectors( c, a );\n\t\tsab3.setFromPoints( axis3, points );\n\n\t\tthis.sphere.setFromPoints( this.points );\n\t\tthis.plane.setFromNormalAndCoplanarPoint( axis0, a );\n\t\tthis.needsUpdate = false;\n\n\t}\n\n}\n\nExtendedTriangle.prototype.closestPointToSegment = ( function () {\n\n\tconst point1 = new Vector3();\n\tconst point2 = new Vector3();\n\tconst edge = new Line3();\n\n\treturn function distanceToSegment( segment, target1 = null, target2 = null ) {\n\n\t\tconst { start, end } = segment;\n\t\tconst points = this.points;\n\t\tlet distSq;\n\t\tlet closestDistanceSq = Infinity;\n\n\t\t// check the triangle edges\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst nexti = ( i + 1 ) % 3;\n\t\t\tedge.start.copy( points[ i ] );\n\t\t\tedge.end.copy( points[ nexti ] );\n\n\t\t\tclosestPointsSegmentToSegment( edge, segment, point1, point2 );\n\n\t\t\tdistSq = point1.distanceToSquared( point2 );\n\t\t\tif ( distSq < closestDistanceSq ) {\n\n\t\t\t\tclosestDistanceSq = distSq;\n\t\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// check end points\n\t\tthis.closestPointToPoint( start, point1 );\n\t\tdistSq = start.distanceToSquared( point1 );\n\t\tif ( distSq < closestDistanceSq ) {\n\n\t\t\tclosestDistanceSq = distSq;\n\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\tif ( target2 ) target2.copy( start );\n\n\t\t}\n\n\t\tthis.closestPointToPoint( end, point1 );\n\t\tdistSq = end.distanceToSquared( point1 );\n\t\tif ( distSq < closestDistanceSq ) {\n\n\t\t\tclosestDistanceSq = distSq;\n\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\tif ( target2 ) target2.copy( end );\n\n\t\t}\n\n\t\treturn Math.sqrt( closestDistanceSq );\n\n\t};\n\n} )();\n\nExtendedTriangle.prototype.intersectsTriangle = ( function () {\n\n\tconst saTri2 = new ExtendedTriangle();\n\tconst arr1 = new Array( 3 );\n\tconst arr2 = new Array( 3 );\n\tconst cachedSatBounds = new SeparatingAxisBounds();\n\tconst cachedSatBounds2 = new SeparatingAxisBounds();\n\tconst cachedAxis = new Vector3();\n\tconst dir1 = new Vector3();\n\tconst dir2 = new Vector3();\n\tconst tempDir = new Vector3();\n\tconst edge = new Line3();\n\tconst edge1 = new Line3();\n\tconst edge2 = new Line3();\n\n\t// TODO: If the triangles are coplanar and intersecting the target is nonsensical. It should at least\n\t// be a line contained by both triangles if not a different special case somehow represented in the return result.\n\treturn function intersectsTriangle( other, target = null ) {\n\n\t\tif ( this.needsUpdate ) {\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\tif ( ! other.isExtendedTriangle ) {\n\n\t\t\tsaTri2.copy( other );\n\t\t\tsaTri2.update();\n\t\t\tother = saTri2;\n\n\t\t} else if ( other.needsUpdate ) {\n\n\t\t\tother.update();\n\n\t\t}\n\n\t\tconst plane1 = this.plane;\n\t\tconst plane2 = other.plane;\n\n\t\tif ( Math.abs( plane1.normal.dot( plane2.normal ) ) > 1.0 - 1e-10 ) {\n\n\t\t\t// perform separating axis intersection test only for coplanar triangles\n\t\t\tconst satBounds1 = this.satBounds;\n\t\t\tconst satAxes1 = this.satAxes;\n\t\t\tarr2[ 0 ] = other.a;\n\t\t\tarr2[ 1 ] = other.b;\n\t\t\tarr2[ 2 ] = other.c;\n\t\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\t\tconst sb = satBounds1[ i ];\n\t\t\t\tconst sa = satAxes1[ i ];\n\t\t\t\tcachedSatBounds.setFromPoints( sa, arr2 );\n\t\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\n\n\t\t\t}\n\n\t\t\tconst satBounds2 = other.satBounds;\n\t\t\tconst satAxes2 = other.satAxes;\n\t\t\tarr1[ 0 ] = this.a;\n\t\t\tarr1[ 1 ] = this.b;\n\t\t\tarr1[ 2 ] = this.c;\n\t\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\t\tconst sb = satBounds2[ i ];\n\t\t\t\tconst sa = satAxes2[ i ];\n\t\t\t\tcachedSatBounds.setFromPoints( sa, arr1 );\n\t\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\n\n\t\t\t}\n\n\t\t\t// check crossed axes\n\t\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\t\tconst sa1 = satAxes1[ i ];\n\t\t\t\tfor ( let i2 = 0; i2 < 4; i2 ++ ) {\n\n\t\t\t\t\tconst sa2 = satAxes2[ i2 ];\n\t\t\t\t\tcachedAxis.crossVectors( sa1, sa2 );\n\t\t\t\t\tcachedSatBounds.setFromPoints( cachedAxis, arr1 );\n\t\t\t\t\tcachedSatBounds2.setFromPoints( cachedAxis, arr2 );\n\t\t\t\t\tif ( cachedSatBounds.isSeparated( cachedSatBounds2 ) ) return false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( target ) {\n\n\t\t\t\t// TODO find two points that intersect on the edges and make that the result\n\t\t\t\tconsole.warn( 'ExtendedTriangle.intersectsTriangle: Triangles are coplanar which does not support an output edge. Setting edge to 0, 0, 0.' );\n\n\t\t\t\ttarget.start.set( 0, 0, 0 );\n\t\t\t\ttarget.end.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// find the edge that intersects the other triangle plane\n\t\t\tconst points1 = this.points;\n\t\t\tlet found1 = false;\n\t\t\tlet count1 = 0;\n\t\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\t\tconst p = points1[ i ];\n\t\t\t\tconst pNext = points1[ ( i + 1 ) % 3 ];\n\n\t\t\t\tedge.start.copy( p );\n\t\t\t\tedge.end.copy( pNext );\n\t\t\t\tedge.delta( dir1 );\n\n\t\t\t\tconst targetPoint = found1 ? edge1.start : edge1.end;\n\t\t\t\tconst startIntersects = isNearZero( plane2.distanceToPoint( p ) );\n\t\t\t\tif ( isNearZero( plane2.normal.dot( dir1 ) ) && startIntersects ) {\n\n\t\t\t\t\t// if the edge lies on the plane then take the line\n\t\t\t\t\tedge1.copy( edge );\n\t\t\t\t\tcount1 = 2;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// check if the start point is near the plane because \"intersectLine\" is not robust to that case\n\t\t\t\tconst doesIntersect = plane2.intersectLine( edge, targetPoint ) || startIntersects;\n\t\t\t\tif ( doesIntersect && ! isNearZero( targetPoint.distanceTo( pNext ) ) ) {\n\n\t\t\t\t\tcount1 ++;\n\t\t\t\t\tif ( found1 ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfound1 = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( count1 === 1 && other.containsPoint( edge1.end ) ) {\n\n\t\t\t\tif ( target ) {\n\n\t\t\t\t\ttarget.start.copy( edge1.end );\n\t\t\t\t\ttarget.end.copy( edge1.end );\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t} else if ( count1 !== 2 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// find the other triangles edge that intersects this plane\n\t\t\tconst points2 = other.points;\n\t\t\tlet found2 = false;\n\t\t\tlet count2 = 0;\n\t\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\t\tconst p = points2[ i ];\n\t\t\t\tconst pNext = points2[ ( i + 1 ) % 3 ];\n\n\t\t\t\tedge.start.copy( p );\n\t\t\t\tedge.end.copy( pNext );\n\t\t\t\tedge.delta( dir2 );\n\n\t\t\t\tconst targetPoint = found2 ? edge2.start : edge2.end;\n\t\t\t\tconst startIntersects = isNearZero( plane1.distanceToPoint( p ) );\n\t\t\t\tif ( isNearZero( plane1.normal.dot( dir2 ) ) && startIntersects ) {\n\n\t\t\t\t\t// if the edge lies on the plane then take the line\n\t\t\t\t\tedge2.copy( edge );\n\t\t\t\t\tcount2 = 2;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// check if the start point is near the plane because \"intersectLine\" is not robust to that case\n\t\t\t\tconst doesIntersect = plane1.intersectLine( edge, targetPoint ) || startIntersects;\n\t\t\t\tif ( doesIntersect && ! isNearZero( targetPoint.distanceTo( pNext ) ) ) {\n\n\t\t\t\t\tcount2 ++;\n\t\t\t\t\tif ( found2 ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfound2 = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( count2 === 1 && this.containsPoint( edge2.end ) ) {\n\n\t\t\t\tif ( target ) {\n\n\t\t\t\t\ttarget.start.copy( edge2.end );\n\t\t\t\t\ttarget.end.copy( edge2.end );\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t} else if ( count2 !== 2 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// find swap the second edge so both lines are running the same direction\n\t\t\tedge1.delta( dir1 );\n\t\t\tedge2.delta( dir2 );\n\n\t\t\tif ( dir1.dot( dir2 ) < 0 ) {\n\n\t\t\t\tlet tmp = edge2.start;\n\t\t\t\tedge2.start = edge2.end;\n\t\t\t\tedge2.end = tmp;\n\n\t\t\t}\n\n\t\t\t// check if the edges are overlapping\n\t\t\tconst s1 = edge1.start.dot( dir1 );\n\t\t\tconst e1 = edge1.end.dot( dir1 );\n\t\t\tconst s2 = edge2.start.dot( dir1 );\n\t\t\tconst e2 = edge2.end.dot( dir1 );\n\t\t\tconst separated1 = e1 < s2;\n\t\t\tconst separated2 = s1 < e2;\n\n\t\t\tif ( s1 !== e2 && s2 !== e1 && separated1 === separated2 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// assign the target output\n\t\t\tif ( target ) {\n\n\t\t\t\ttempDir.subVectors( edge1.start, edge2.start );\n\t\t\t\tif ( tempDir.dot( dir1 ) > 0 ) {\n\n\t\t\t\t\ttarget.start.copy( edge1.start );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttarget.start.copy( edge2.start );\n\n\t\t\t\t}\n\n\t\t\t\ttempDir.subVectors( edge1.end, edge2.end );\n\t\t\t\tif ( tempDir.dot( dir1 ) < 0 ) {\n\n\t\t\t\t\ttarget.end.copy( edge1.end );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttarget.end.copy( edge2.end );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t};\n\n} )();\n\n\nExtendedTriangle.prototype.distanceToPoint = ( function () {\n\n\tconst target = new Vector3();\n\treturn function distanceToPoint( point ) {\n\n\t\tthis.closestPointToPoint( point, target );\n\t\treturn point.distanceTo( target );\n\n\t};\n\n} )();\n\n\nExtendedTriangle.prototype.distanceToTriangle = ( function () {\n\n\tconst point = new Vector3();\n\tconst point2 = new Vector3();\n\tconst cornerFields = [ 'a', 'b', 'c' ];\n\tconst line1 = new Line3();\n\tconst line2 = new Line3();\n\n\treturn function distanceToTriangle( other, target1 = null, target2 = null ) {\n\n\t\tconst lineTarget = target1 || target2 ? line1 : null;\n\t\tif ( this.intersectsTriangle( other, lineTarget ) ) {\n\n\t\t\tif ( target1 || target2 ) {\n\n\t\t\t\tif ( target1 ) lineTarget.getCenter( target1 );\n\t\t\t\tif ( target2 ) lineTarget.getCenter( target2 );\n\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tlet closestDistanceSq = Infinity;\n\n\t\t// check all point distances\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tlet dist;\n\t\t\tconst field = cornerFields[ i ];\n\t\t\tconst otherVec = other[ field ];\n\t\t\tthis.closestPointToPoint( otherVec, point );\n\n\t\t\tdist = otherVec.distanceToSquared( point );\n\n\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\tif ( target1 ) target1.copy( point );\n\t\t\t\tif ( target2 ) target2.copy( otherVec );\n\n\t\t\t}\n\n\n\t\t\tconst thisVec = this[ field ];\n\t\t\tother.closestPointToPoint( thisVec, point );\n\n\t\t\tdist = thisVec.distanceToSquared( point );\n\n\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\tif ( target1 ) target1.copy( thisVec );\n\t\t\t\tif ( target2 ) target2.copy( point );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst f11 = cornerFields[ i ];\n\t\t\tconst f12 = cornerFields[ ( i + 1 ) % 3 ];\n\t\t\tline1.set( this[ f11 ], this[ f12 ] );\n\t\t\tfor ( let i2 = 0; i2 < 3; i2 ++ ) {\n\n\t\t\t\tconst f21 = cornerFields[ i2 ];\n\t\t\t\tconst f22 = cornerFields[ ( i2 + 1 ) % 3 ];\n\t\t\t\tline2.set( other[ f21 ], other[ f22 ] );\n\n\t\t\t\tclosestPointsSegmentToSegment( line1, line2, point, point2 );\n\n\t\t\t\tconst dist = point.distanceToSquared( point2 );\n\t\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\t\tif ( target1 ) target1.copy( point );\n\t\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.sqrt( closestDistanceSq );\n\n\t};\n\n} )();\n","import { Vector3, Matrix4, Line3 } from 'three';\nimport { SeparatingAxisBounds } from './SeparatingAxisBounds.js';\nimport { ExtendedTriangle } from './ExtendedTriangle.js';\nimport { closestPointsSegmentToSegment } from './MathUtilities.js';\n\nexport class OrientedBox {\n\n\tconstructor( min, max, matrix ) {\n\n\t\tthis.isOrientedBox = true;\n\t\tthis.min = new Vector3();\n\t\tthis.max = new Vector3();\n\t\tthis.matrix = new Matrix4();\n\t\tthis.invMatrix = new Matrix4();\n\t\tthis.points = new Array( 8 ).fill().map( () => new Vector3() );\n\t\tthis.satAxes = new Array( 3 ).fill().map( () => new Vector3() );\n\t\tthis.satBounds = new Array( 3 ).fill().map( () => new SeparatingAxisBounds() );\n\t\tthis.alignedSatBounds = new Array( 3 ).fill().map( () => new SeparatingAxisBounds() );\n\t\tthis.needsUpdate = false;\n\n\t\tif ( min ) this.min.copy( min );\n\t\tif ( max ) this.max.copy( max );\n\t\tif ( matrix ) this.matrix.copy( matrix );\n\n\t}\n\n\tset( min, max, matrix ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\t\tthis.matrix.copy( matrix );\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.min.copy( other.min );\n\t\tthis.max.copy( other.max );\n\t\tthis.matrix.copy( other.matrix );\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nOrientedBox.prototype.update = ( function () {\n\n\treturn function update() {\n\n\t\tconst matrix = this.matrix;\n\t\tconst min = this.min;\n\t\tconst max = this.max;\n\n\t\tconst points = this.points;\n\t\tfor ( let x = 0; x <= 1; x ++ ) {\n\n\t\t\tfor ( let y = 0; y <= 1; y ++ ) {\n\n\t\t\t\tfor ( let z = 0; z <= 1; z ++ ) {\n\n\t\t\t\t\tconst i = ( ( 1 << 0 ) * x ) | ( ( 1 << 1 ) * y ) | ( ( 1 << 2 ) * z );\n\t\t\t\t\tconst v = points[ i ];\n\t\t\t\t\tv.x = x ? max.x : min.x;\n\t\t\t\t\tv.y = y ? max.y : min.y;\n\t\t\t\t\tv.z = z ? max.z : min.z;\n\n\t\t\t\t\tv.applyMatrix4( matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst satBounds = this.satBounds;\n\t\tconst satAxes = this.satAxes;\n\t\tconst minVec = points[ 0 ];\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst axis = satAxes[ i ];\n\t\t\tconst sb = satBounds[ i ];\n\t\t\tconst index = 1 << i;\n\t\t\tconst pi = points[ index ];\n\n\t\t\taxis.subVectors( minVec, pi );\n\t\t\tsb.setFromPoints( axis, points );\n\n\t\t}\n\n\t\tconst alignedSatBounds = this.alignedSatBounds;\n\t\talignedSatBounds[ 0 ].setFromPointsField( points, 'x' );\n\t\talignedSatBounds[ 1 ].setFromPointsField( points, 'y' );\n\t\talignedSatBounds[ 2 ].setFromPointsField( points, 'z' );\n\n\t\tthis.invMatrix.copy( this.matrix ).invert();\n\t\tthis.needsUpdate = false;\n\n\t};\n\n} )();\n\nOrientedBox.prototype.intersectsBox = ( function () {\n\n\tconst aabbBounds = new SeparatingAxisBounds();\n\treturn function intersectsBox( box ) {\n\n\t\t// TODO: should this be doing SAT against the AABB?\n\t\tif ( this.needsUpdate ) {\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\tconst min = box.min;\n\t\tconst max = box.max;\n\t\tconst satBounds = this.satBounds;\n\t\tconst satAxes = this.satAxes;\n\t\tconst alignedSatBounds = this.alignedSatBounds;\n\n\t\taabbBounds.min = min.x;\n\t\taabbBounds.max = max.x;\n\t\tif ( alignedSatBounds[ 0 ].isSeparated( aabbBounds ) ) return false;\n\n\t\taabbBounds.min = min.y;\n\t\taabbBounds.max = max.y;\n\t\tif ( alignedSatBounds[ 1 ].isSeparated( aabbBounds ) ) return false;\n\n\t\taabbBounds.min = min.z;\n\t\taabbBounds.max = max.z;\n\t\tif ( alignedSatBounds[ 2 ].isSeparated( aabbBounds ) ) return false;\n\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst axis = satAxes[ i ];\n\t\t\tconst sb = satBounds[ i ];\n\t\t\taabbBounds.setFromBox( axis, box );\n\t\t\tif ( sb.isSeparated( aabbBounds ) ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t};\n\n} )();\n\nOrientedBox.prototype.intersectsTriangle = ( function () {\n\n\tconst saTri = new ExtendedTriangle();\n\tconst pointsArr = new Array( 3 );\n\tconst cachedSatBounds = new SeparatingAxisBounds();\n\tconst cachedSatBounds2 = new SeparatingAxisBounds();\n\tconst cachedAxis = new Vector3();\n\treturn function intersectsTriangle( triangle ) {\n\n\t\tif ( this.needsUpdate ) {\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\tif ( ! triangle.isExtendedTriangle ) {\n\n\t\t\tsaTri.copy( triangle );\n\t\t\tsaTri.update();\n\t\t\ttriangle = saTri;\n\n\t\t} else if ( triangle.needsUpdate ) {\n\n\t\t\ttriangle.update();\n\n\t\t}\n\n\t\tconst satBounds = this.satBounds;\n\t\tconst satAxes = this.satAxes;\n\n\t\tpointsArr[ 0 ] = triangle.a;\n\t\tpointsArr[ 1 ] = triangle.b;\n\t\tpointsArr[ 2 ] = triangle.c;\n\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst sb = satBounds[ i ];\n\t\t\tconst sa = satAxes[ i ];\n\t\t\tcachedSatBounds.setFromPoints( sa, pointsArr );\n\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\n\n\t\t}\n\n\t\tconst triSatBounds = triangle.satBounds;\n\t\tconst triSatAxes = triangle.satAxes;\n\t\tconst points = this.points;\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst sb = triSatBounds[ i ];\n\t\t\tconst sa = triSatAxes[ i ];\n\t\t\tcachedSatBounds.setFromPoints( sa, points );\n\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\n\n\t\t}\n\n\t\t// check crossed axes\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst sa1 = satAxes[ i ];\n\t\t\tfor ( let i2 = 0; i2 < 4; i2 ++ ) {\n\n\t\t\t\tconst sa2 = triSatAxes[ i2 ];\n\t\t\t\tcachedAxis.crossVectors( sa1, sa2 );\n\t\t\t\tcachedSatBounds.setFromPoints( cachedAxis, pointsArr );\n\t\t\t\tcachedSatBounds2.setFromPoints( cachedAxis, points );\n\t\t\t\tif ( cachedSatBounds.isSeparated( cachedSatBounds2 ) ) return false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t};\n\n} )();\n\nOrientedBox.prototype.closestPointToPoint = ( function () {\n\n\treturn function closestPointToPoint( point, target1 ) {\n\n\t\tif ( this.needsUpdate ) {\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\ttarget1\n\t\t\t.copy( point )\n\t\t\t.applyMatrix4( this.invMatrix )\n\t\t\t.clamp( this.min, this.max )\n\t\t\t.applyMatrix4( this.matrix );\n\n\t\treturn target1;\n\n\t};\n\n} )();\n\nOrientedBox.prototype.distanceToPoint = ( function () {\n\n\tconst target = new Vector3();\n\treturn function distanceToPoint( point ) {\n\n\t\tthis.closestPointToPoint( point, target );\n\t\treturn point.distanceTo( target );\n\n\t};\n\n} )();\n\nOrientedBox.prototype.distanceToBox = ( function () {\n\n\tconst xyzFields = [ 'x', 'y', 'z' ];\n\tconst segments1 = new Array( 12 ).fill().map( () => new Line3() );\n\tconst segments2 = new Array( 12 ).fill().map( () => new Line3() );\n\n\tconst point1 = new Vector3();\n\tconst point2 = new Vector3();\n\n\t// early out if we find a value below threshold\n\treturn function distanceToBox( box, threshold = 0, target1 = null, target2 = null ) {\n\n\t\tif ( this.needsUpdate ) {\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\tif ( this.intersectsBox( box ) ) {\n\n\t\t\tif ( target1 || target2 ) {\n\n\t\t\t\tbox.getCenter( point2 );\n\t\t\t\tthis.closestPointToPoint( point2, point1 );\n\t\t\t\tbox.closestPointToPoint( point1, point2 );\n\n\t\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tconst threshold2 = threshold * threshold;\n\t\tconst min = box.min;\n\t\tconst max = box.max;\n\t\tconst points = this.points;\n\n\n\t\t// iterate over every edge and compare distances\n\t\tlet closestDistanceSq = Infinity;\n\n\t\t// check over all these points\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tconst p = points[ i ];\n\t\t\tpoint2.copy( p ).clamp( min, max );\n\n\t\t\tconst dist = p.distanceToSquared( point2 );\n\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\tif ( target1 ) target1.copy( p );\n\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t\tif ( dist < threshold2 ) return Math.sqrt( dist );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate and check all line segment distances\n\t\tlet count = 0;\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tfor ( let i1 = 0; i1 <= 1; i1 ++ ) {\n\n\t\t\t\tfor ( let i2 = 0; i2 <= 1; i2 ++ ) {\n\n\t\t\t\t\tconst nextIndex = ( i + 1 ) % 3;\n\t\t\t\t\tconst nextIndex2 = ( i + 2 ) % 3;\n\n\t\t\t\t\t// get obb line segments\n\t\t\t\t\tconst index = i1 << nextIndex | i2 << nextIndex2;\n\t\t\t\t\tconst index2 = 1 << i | i1 << nextIndex | i2 << nextIndex2;\n\t\t\t\t\tconst p1 = points[ index ];\n\t\t\t\t\tconst p2 = points[ index2 ];\n\t\t\t\t\tconst line1 = segments1[ count ];\n\t\t\t\t\tline1.set( p1, p2 );\n\n\n\t\t\t\t\t// get aabb line segments\n\t\t\t\t\tconst f1 = xyzFields[ i ];\n\t\t\t\t\tconst f2 = xyzFields[ nextIndex ];\n\t\t\t\t\tconst f3 = xyzFields[ nextIndex2 ];\n\t\t\t\t\tconst line2 = segments2[ count ];\n\t\t\t\t\tconst start = line2.start;\n\t\t\t\t\tconst end = line2.end;\n\n\t\t\t\t\tstart[ f1 ] = min[ f1 ];\n\t\t\t\t\tstart[ f2 ] = i1 ? min[ f2 ] : max[ f2 ];\n\t\t\t\t\tstart[ f3 ] = i2 ? min[ f3 ] : max[ f2 ];\n\n\t\t\t\t\tend[ f1 ] = max[ f1 ];\n\t\t\t\t\tend[ f2 ] = i1 ? min[ f2 ] : max[ f2 ];\n\t\t\t\t\tend[ f3 ] = i2 ? min[ f3 ] : max[ f2 ];\n\n\t\t\t\t\tcount ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// check all the other boxes point\n\t\tfor ( let x = 0; x <= 1; x ++ ) {\n\n\t\t\tfor ( let y = 0; y <= 1; y ++ ) {\n\n\t\t\t\tfor ( let z = 0; z <= 1; z ++ ) {\n\n\t\t\t\t\tpoint2.x = x ? max.x : min.x;\n\t\t\t\t\tpoint2.y = y ? max.y : min.y;\n\t\t\t\t\tpoint2.z = z ? max.z : min.z;\n\n\t\t\t\t\tthis.closestPointToPoint( point2, point1 );\n\t\t\t\t\tconst dist = point2.distanceToSquared( point1 );\n\t\t\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t\t\t\tif ( dist < threshold2 ) return Math.sqrt( dist );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 12; i ++ ) {\n\n\t\t\tconst l1 = segments1[ i ];\n\t\t\tfor ( let i2 = 0; i2 < 12; i2 ++ ) {\n\n\t\t\t\tconst l2 = segments2[ i2 ];\n\t\t\t\tclosestPointsSegmentToSegment( l1, l2, point1, point2 );\n\t\t\t\tconst dist = point1.distanceToSquared( point2 );\n\t\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t\t\tif ( dist < threshold2 ) return Math.sqrt( dist );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.sqrt( closestDistanceSq );\n\n\t};\n\n} )();\n","import { Vector3, Vector2, Triangle, DoubleSide, BackSide } from 'three';\n\n// Ripped and modified From THREE.js Mesh raycast\n// https://github.com/mrdoob/three.js/blob/0aa87c999fe61e216c1133fba7a95772b503eddf/src/objects/Mesh.js#L115\nconst vA = /* @__PURE__ */ new Vector3();\nconst vB = /* @__PURE__ */ new Vector3();\nconst vC = /* @__PURE__ */ new Vector3();\n\nconst uvA = /* @__PURE__ */ new Vector2();\nconst uvB = /* @__PURE__ */ new Vector2();\nconst uvC = /* @__PURE__ */ new Vector2();\n\nconst intersectionPoint = /* @__PURE__ */ new Vector3();\nfunction checkIntersection( ray, pA, pB, pC, point, side ) {\n\n\tlet intersect;\n\tif ( side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\tconst distance = ray.origin.distanceTo( point );\n\n\treturn {\n\n\t\tdistance: distance,\n\t\tpoint: point.clone(),\n\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( ray, position, uv, a, b, c, side ) {\n\n\tvA.fromBufferAttribute( position, a );\n\tvB.fromBufferAttribute( position, b );\n\tvC.fromBufferAttribute( position, c );\n\n\tconst intersection = checkIntersection( ray, vA, vB, vC, intersectionPoint, side );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2( ) );\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( vA, vB, vC, face.normal );\n\n\t\tintersection.face = face;\n\t\tintersection.faceIndex = a;\n\n\t}\n\n\treturn intersection;\n\n}\n\n// https://github.com/mrdoob/three.js/blob/0aa87c999fe61e216c1133fba7a95772b503eddf/src/objects/Mesh.js#L258\nfunction intersectTri( geo, side, ray, tri, intersections ) {\n\n\tconst triOffset = tri * 3;\n\tconst a = geo.index.getX( triOffset );\n\tconst b = geo.index.getX( triOffset + 1 );\n\tconst c = geo.index.getX( triOffset + 2 );\n\n\tconst intersection = checkBufferGeometryIntersection( ray, geo.attributes.position, geo.attributes.uv, a, b, c, side );\n\n\tif ( intersection ) {\n\n\t\tintersection.faceIndex = tri;\n\t\tif ( intersections ) intersections.push( intersection );\n\t\treturn intersection;\n\n\t}\n\n\treturn null;\n\n}\n\nexport { intersectTri };\n","import { intersectTri } from './ThreeRayIntersectUtilities.js';\n\nexport function intersectTris( geo, side, ray, offset, count, intersections ) {\n\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\n\n\t\tintersectTri( geo, side, ray, i, intersections );\n\n\t}\n\n}\n\nexport function intersectClosestTri( geo, side, ray, offset, count ) {\n\n\tlet dist = Infinity;\n\tlet res = null;\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\n\n\t\tconst intersection = intersectTri( geo, side, ray, i );\n\t\tif ( intersection && intersection.distance < dist ) {\n\n\t\t\tres = intersection;\n\t\t\tdist = intersection.distance;\n\n\t\t}\n\n\t}\n\n\treturn res;\n\n}\n\n// converts the given BVH raycast intersection to align with the three.js raycast\n// structure (include object, world space distance and point).\nexport function convertRaycastIntersect( hit, object, raycaster ) {\n\n\tif ( hit === null ) {\n\n\t\treturn null;\n\n\t}\n\n\thit.point.applyMatrix4( object.matrixWorld );\n\thit.distance = hit.point.distanceTo( raycaster.ray.origin );\n\thit.object = object;\n\n\tif ( hit.distance < raycaster.near || hit.distance > raycaster.far ) {\n\n\t\treturn null;\n\n\t} else {\n\n\t\treturn hit;\n\n\t}\n\n}\n","\nimport { Vector2, Vector3, Triangle } from 'three';\n\n// sets the vertices of triangle `tri` with the 3 vertices after i\nexport function setTriangle( tri, i, index, pos ) {\n\n\tconst ta = tri.a;\n\tconst tb = tri.b;\n\tconst tc = tri.c;\n\n\tlet i0 = i;\n\tlet i1 = i + 1;\n\tlet i2 = i + 2;\n\tif ( index ) {\n\n\t\ti0 = index.getX( i );\n\t\ti1 = index.getX( i + 1 );\n\t\ti2 = index.getX( i + 2 );\n\n\t}\n\n\tta.x = pos.getX( i0 );\n\tta.y = pos.getY( i0 );\n\tta.z = pos.getZ( i0 );\n\n\ttb.x = pos.getX( i1 );\n\ttb.y = pos.getY( i1 );\n\ttb.z = pos.getZ( i1 );\n\n\ttc.x = pos.getX( i2 );\n\ttc.y = pos.getY( i2 );\n\ttc.z = pos.getZ( i2 );\n\n}\n\nexport function iterateOverTriangles(\n\toffset,\n\tcount,\n\tgeometry,\n\tintersectsTriangleFunc,\n\tcontained,\n\tdepth,\n\ttriangle\n) {\n\n\tconst index = geometry.index;\n\tconst pos = geometry.attributes.position;\n\tfor ( let i = offset, l = count + offset; i < l; i ++ ) {\n\n\t\tsetTriangle( triangle, i * 3, index, pos );\n\t\ttriangle.needsUpdate = true;\n\n\t\tif ( intersectsTriangleFunc( triangle, i, contained, depth ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t}\n\n\treturn false;\n\n}\n\nconst tempV1 = /* @__PURE__ */ new Vector3();\nconst tempV2 = /* @__PURE__ */ new Vector3();\nconst tempV3 = /* @__PURE__ */ new Vector3();\nconst tempUV1 = /* @__PURE__ */ new Vector2();\nconst tempUV2 = /* @__PURE__ */ new Vector2();\nconst tempUV3 = /* @__PURE__ */ new Vector2();\n\nexport function getTriangleHitPointInfo( point, geometry, triangleIndex, target ) {\n\n\tconst indices = geometry.getIndex().array;\n\tconst positions = geometry.getAttribute( 'position' );\n\tconst uvs = geometry.getAttribute( 'uv' );\n\n\tconst a = indices[ triangleIndex * 3 ];\n\tconst b = indices[ triangleIndex * 3 + 1 ];\n\tconst c = indices[ triangleIndex * 3 + 2 ];\n\n\ttempV1.fromBufferAttribute( positions, a );\n\ttempV2.fromBufferAttribute( positions, b );\n\ttempV3.fromBufferAttribute( positions, c );\n\n\t// find the associated material index\n\tlet materialIndex = 0;\n\tconst groups = geometry.groups;\n\tconst firstVertexIndex = triangleIndex * 3;\n\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\t\tconst { start, count } = group;\n\t\tif ( firstVertexIndex >= start && firstVertexIndex < start + count ) {\n\n\t\t\tmaterialIndex = group.materialIndex;\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\t// extract uvs\n\tlet uv = null;\n\tif ( uvs ) {\n\n\t\ttempUV1.fromBufferAttribute( uvs, a );\n\t\ttempUV2.fromBufferAttribute( uvs, b );\n\t\ttempUV3.fromBufferAttribute( uvs, c );\n\n\t\tif ( target && target.uv ) uv = target.uv;\n\t\telse uv = new Vector2();\n\n\t\tTriangle.getUV( point, tempV1, tempV2, tempV3, tempUV1, tempUV2, tempUV3, uv );\n\n\t}\n\n\t// adjust the provided target or create a new one\n\tif ( target ) {\n\n\t\tif ( ! target.face ) target.face = { };\n\t\ttarget.face.a = a;\n\t\ttarget.face.b = b;\n\t\ttarget.face.c = c;\n\t\ttarget.face.materialIndex = materialIndex;\n\t\tif ( ! target.face.normal ) target.face.normal = new Vector3();\n\t\tTriangle.getNormal( tempV1, tempV2, tempV3, target.face.normal );\n\n\t\tif ( ! target.uv ) target.uv = new Vector2();\n\t\ttarget.uv.copy( uv );\n\n\t\treturn target;\n\n\t} else {\n\n\t\treturn {\n\t\t\tface: {\n\t\t\t\ta: a,\n\t\t\t\tb: b,\n\t\t\t\tc: c,\n\t\t\t\tmaterialIndex: materialIndex,\n\t\t\t\tnormal: Triangle.getNormal( tempV1, tempV2, tempV3, new Vector3() )\n\t\t\t},\n\t\t\tuv: uv\n\t\t};\n\n\t}\n\n}\n","export class PrimitivePool {\n\n\tconstructor( getNewPrimitive ) {\n\n\t\tthis._getNewPrimitive = getNewPrimitive;\n\t\tthis._primitives = [];\n\n\t}\n\n\tgetPrimitive() {\n\n\t\tconst primitives = this._primitives;\n\t\tif ( primitives.length === 0 ) {\n\n\t\t\treturn this._getNewPrimitive();\n\n\t\t} else {\n\n\t\t\treturn primitives.pop();\n\n\t\t}\n\n\t}\n\n\treleasePrimitive( primitive ) {\n\n\t\tthis._primitives.push( primitive );\n\n\t}\n\n}\n","export function IS_LEAF( n16, uint16Array ) {\n\n\treturn uint16Array[ n16 + 15 ] === 0xFFFF;\n\n}\n\nexport function OFFSET( n32, uint32Array ) {\n\n\treturn uint32Array[ n32 + 6 ];\n\n}\n\nexport function COUNT( n16, uint16Array ) {\n\n\treturn uint16Array[ n16 + 14 ];\n\n}\n\nexport function LEFT_NODE( n32 ) {\n\n\treturn n32 + 8;\n\n}\n\nexport function RIGHT_NODE( n32, uint32Array ) {\n\n\treturn uint32Array[ n32 + 6 ];\n\n}\n\nexport function SPLIT_AXIS( n32, uint32Array ) {\n\n\treturn uint32Array[ n32 + 7 ];\n\n}\n\nexport function BOUNDING_DATA_INDEX( n32 ) {\n\n\treturn n32;\n\n}\n","import { Box3, Vector3, Matrix4 } from 'three';\nimport { CONTAINED } from './Constants.js';\n\nimport { OrientedBox } from '../math/OrientedBox.js';\nimport { ExtendedTriangle } from '../math/ExtendedTriangle.js';\nimport { intersectTris, intersectClosestTri } from '../utils/GeometryRayIntersectUtilities.js';\nimport { setTriangle } from '../utils/TriangleUtilities.js';\nimport { arrayToBox } from '../utils/ArrayBoxUtilities.js';\nimport { PrimitivePool } from '../utils/PrimitivePool.js';\nimport { COUNT, OFFSET, LEFT_NODE, RIGHT_NODE, IS_LEAF, BOUNDING_DATA_INDEX, SPLIT_AXIS } from './nodeBufferFunctions.js';\n\nconst boundingBox = new Box3();\nconst boxIntersection = new Vector3();\nconst xyzFields = [ 'x', 'y', 'z' ];\n\nexport function raycast( nodeIndex32, geometry, side, ray, intersects ) {\n\n\tlet nodeIndex16 = nodeIndex32 * 2, float32Array = _float32Array, uint16Array = _uint16Array, uint32Array = _uint32Array;\n\n\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\n\tif ( isLeaf ) {\n\n\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\n\t\tintersectTris( geometry, side, ray, offset, count, intersects );\n\n\t} else {\n\n\t\tconst leftIndex = LEFT_NODE( nodeIndex32 );\n\t\tif ( intersectRay( leftIndex, float32Array, ray, boxIntersection ) ) {\n\n\t\t\traycast( leftIndex, geometry, side, ray, intersects );\n\n\t\t}\n\n\t\tconst rightIndex = RIGHT_NODE( nodeIndex32, uint32Array );\n\t\tif ( intersectRay( rightIndex, float32Array, ray, boxIntersection ) ) {\n\n\t\t\traycast( rightIndex, geometry, side, ray, intersects );\n\n\t\t}\n\n\t}\n\n}\n\nexport function raycastFirst( nodeIndex32, geometry, side, ray ) {\n\n\tlet nodeIndex16 = nodeIndex32 * 2, float32Array = _float32Array, uint16Array = _uint16Array, uint32Array = _uint32Array;\n\n\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\n\tif ( isLeaf ) {\n\n\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\t\treturn intersectClosestTri( geometry, side, ray, offset, count );\n\n\t} else {\n\n\t\t// consider the position of the split plane with respect to the oncoming ray; whichever direction\n\t\t// the ray is coming from, look for an intersection among that side of the tree first\n\t\tconst splitAxis = SPLIT_AXIS( nodeIndex32, uint32Array );\n\t\tconst xyzAxis = xyzFields[ splitAxis ];\n\t\tconst rayDir = ray.direction[ xyzAxis ];\n\t\tconst leftToRight = rayDir >= 0;\n\n\t\t// c1 is the child to check first\n\t\tlet c1, c2;\n\t\tif ( leftToRight ) {\n\n\t\t\tc1 = LEFT_NODE( nodeIndex32 );\n\t\t\tc2 = RIGHT_NODE( nodeIndex32, uint32Array );\n\n\t\t} else {\n\n\t\t\tc1 = RIGHT_NODE( nodeIndex32, uint32Array );\n\t\t\tc2 = LEFT_NODE( nodeIndex32 );\n\n\t\t}\n\n\t\tconst c1Intersection = intersectRay( c1, float32Array, ray, boxIntersection );\n\t\tconst c1Result = c1Intersection ? raycastFirst( c1, geometry, side, ray ) : null;\n\n\t\t// if we got an intersection in the first node and it's closer than the second node's bounding\n\t\t// box, we don't need to consider the second node because it couldn't possibly be a better result\n\t\tif ( c1Result ) {\n\n\t\t\t// check if the point is within the second bounds\n\t\t\t// \"point\" is in the local frame of the bvh\n\t\t\tconst point = c1Result.point[ xyzAxis ];\n\t\t\tconst isOutside = leftToRight ?\n\t\t\t\tpoint <= float32Array[ c2 + splitAxis ] : // min bounding data\n\t\t\t\tpoint >= float32Array[ c2 + splitAxis + 3 ]; // max bounding data\n\n\t\t\tif ( isOutside ) {\n\n\t\t\t\treturn c1Result;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// either there was no intersection in the first node, or there could still be a closer\n\t\t// intersection in the second, so check the second node and then take the better of the two\n\t\tconst c2Intersection = intersectRay( c2, float32Array, ray, boxIntersection );\n\t\tconst c2Result = c2Intersection ? raycastFirst( c2, geometry, side, ray ) : null;\n\n\t\tif ( c1Result && c2Result ) {\n\n\t\t\treturn c1Result.distance <= c2Result.distance ? c1Result : c2Result;\n\n\t\t} else {\n\n\t\t\treturn c1Result || c2Result || null;\n\n\t\t}\n\n\t}\n\n}\n\nexport const shapecast = ( function () {\n\n\tlet _box1, _box2;\n\tconst boxStack = [];\n\tconst boxPool = new PrimitivePool( () => new Box3() );\n\n\treturn function shapecast( ...args ) {\n\n\t\t_box1 = boxPool.getPrimitive();\n\t\t_box2 = boxPool.getPrimitive();\n\t\tboxStack.push( _box1, _box2 );\n\n\t\tconst result = shapecastTraverse( ...args );\n\n\t\tboxPool.releasePrimitive( _box1 );\n\t\tboxPool.releasePrimitive( _box2 );\n\t\tboxStack.pop();\n\t\tboxStack.pop();\n\n\t\tconst length = boxStack.length;\n\t\tif ( length > 0 ) {\n\n\t\t\t_box2 = boxStack[ length - 1 ];\n\t\t\t_box1 = boxStack[ length - 2 ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tfunction shapecastTraverse(\n\t\tnodeIndex32,\n\t\tgeometry,\n\t\tintersectsBoundsFunc,\n\t\tintersectsRangeFunc,\n\t\tnodeScoreFunc = null,\n\t\tnodeIndexByteOffset = 0, // offset for unique node identifier\n\t\tdepth = 0\n\t) {\n\n\t\t// Define these inside the function so it has access to the local variables needed\n\t\t// when converting to the buffer equivalents\n\t\tfunction getLeftOffset( nodeIndex32 ) {\n\n\t\t\tlet nodeIndex16 = nodeIndex32 * 2, uint16Array = _uint16Array, uint32Array = _uint32Array;\n\n\t\t\t// traverse until we find a leaf\n\t\t\twhile ( ! IS_LEAF( nodeIndex16, uint16Array ) ) {\n\n\t\t\t\tnodeIndex32 = LEFT_NODE( nodeIndex32 );\n\t\t\t\tnodeIndex16 = nodeIndex32 * 2;\n\n\t\t\t}\n\n\t\t\treturn OFFSET( nodeIndex32, uint32Array );\n\n\t\t}\n\n\t\tfunction getRightEndOffset( nodeIndex32 ) {\n\n\t\t\tlet nodeIndex16 = nodeIndex32 * 2, uint16Array = _uint16Array, uint32Array = _uint32Array;\n\n\t\t\t// traverse until we find a leaf\n\t\t\twhile ( ! IS_LEAF( nodeIndex16, uint16Array ) ) {\n\n\t\t\t\t// adjust offset to point to the right node\n\t\t\t\tnodeIndex32 = RIGHT_NODE( nodeIndex32, uint32Array );\n\t\t\t\tnodeIndex16 = nodeIndex32 * 2;\n\n\t\t\t}\n\n\t\t\t// return the end offset of the triangle range\n\t\t\treturn OFFSET( nodeIndex32, uint32Array ) + COUNT( nodeIndex16, uint16Array );\n\n\t\t}\n\n\t\tlet nodeIndex16 = nodeIndex32 * 2, float32Array = _float32Array, uint16Array = _uint16Array, uint32Array = _uint32Array;\n\n\t\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\n\t\tif ( isLeaf ) {\n\n\t\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\t\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\t\t\tarrayToBox( BOUNDING_DATA_INDEX( nodeIndex32 ), float32Array, _box1 );\n\t\t\treturn intersectsRangeFunc( offset, count, false, depth, nodeIndexByteOffset + nodeIndex32, _box1 );\n\n\t\t} else {\n\n\t\t\tconst left = LEFT_NODE( nodeIndex32 );\n\t\t\tconst right = RIGHT_NODE( nodeIndex32, uint32Array );\n\t\t\tlet c1 = left;\n\t\t\tlet c2 = right;\n\n\t\t\tlet score1, score2;\n\t\t\tlet box1, box2;\n\t\t\tif ( nodeScoreFunc ) {\n\n\t\t\t\tbox1 = _box1;\n\t\t\t\tbox2 = _box2;\n\n\t\t\t\t// bounding data is not offset\n\t\t\t\tarrayToBox( BOUNDING_DATA_INDEX( c1 ), float32Array, box1 );\n\t\t\t\tarrayToBox( BOUNDING_DATA_INDEX( c2 ), float32Array, box2 );\n\n\t\t\t\tscore1 = nodeScoreFunc( box1 );\n\t\t\t\tscore2 = nodeScoreFunc( box2 );\n\n\t\t\t\tif ( score2 < score1 ) {\n\n\t\t\t\t\tc1 = right;\n\t\t\t\t\tc2 = left;\n\n\t\t\t\t\tconst temp = score1;\n\t\t\t\t\tscore1 = score2;\n\t\t\t\t\tscore2 = temp;\n\n\t\t\t\t\tbox1 = box2;\n\t\t\t\t\t// box2 is always set before use below\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Check box 1 intersection\n\t\t\tif ( ! box1 ) {\n\n\t\t\t\tbox1 = _box1;\n\t\t\t\tarrayToBox( BOUNDING_DATA_INDEX( c1 ), float32Array, box1 );\n\n\t\t\t}\n\n\t\t\tconst isC1Leaf = IS_LEAF( c1 * 2, uint16Array );\n\t\t\tconst c1Intersection = intersectsBoundsFunc( box1, isC1Leaf, score1, depth + 1, nodeIndexByteOffset + c1 );\n\n\t\t\tlet c1StopTraversal;\n\t\t\tif ( c1Intersection === CONTAINED ) {\n\n\t\t\t\tconst offset = getLeftOffset( c1 );\n\t\t\t\tconst end = getRightEndOffset( c1 );\n\t\t\t\tconst count = end - offset;\n\n\t\t\t\tc1StopTraversal = intersectsRangeFunc( offset, count, true, depth + 1, nodeIndexByteOffset + c1, box1 );\n\n\t\t\t} else {\n\n\t\t\t\tc1StopTraversal =\n\t\t\t\t\tc1Intersection &&\n\t\t\t\t\tshapecastTraverse(\n\t\t\t\t\t\tc1,\n\t\t\t\t\t\tgeometry,\n\t\t\t\t\t\tintersectsBoundsFunc,\n\t\t\t\t\t\tintersectsRangeFunc,\n\t\t\t\t\t\tnodeScoreFunc,\n\t\t\t\t\t\tnodeIndexByteOffset,\n\t\t\t\t\t\tdepth + 1\n\t\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( c1StopTraversal ) return true;\n\n\t\t\t// Check box 2 intersection\n\t\t\t// cached box2 will have been overwritten by previous traversal\n\t\t\tbox2 = _box2;\n\t\t\tarrayToBox( BOUNDING_DATA_INDEX( c2 ), float32Array, box2 );\n\n\t\t\tconst isC2Leaf = IS_LEAF( c2 * 2, uint16Array );\n\t\t\tconst c2Intersection = intersectsBoundsFunc( box2, isC2Leaf, score2, depth + 1, nodeIndexByteOffset + c2 );\n\n\t\t\tlet c2StopTraversal;\n\t\t\tif ( c2Intersection === CONTAINED ) {\n\n\t\t\t\tconst offset = getLeftOffset( c2 );\n\t\t\t\tconst end = getRightEndOffset( c2 );\n\t\t\t\tconst count = end - offset;\n\n\t\t\t\tc2StopTraversal = intersectsRangeFunc( offset, count, true, depth + 1, nodeIndexByteOffset + c2, box2 );\n\n\t\t\t} else {\n\n\t\t\t\tc2StopTraversal =\n\t\t\t\t\tc2Intersection &&\n\t\t\t\t\tshapecastTraverse(\n\t\t\t\t\t\tc2,\n\t\t\t\t\t\tgeometry,\n\t\t\t\t\t\tintersectsBoundsFunc,\n\t\t\t\t\t\tintersectsRangeFunc,\n\t\t\t\t\t\tnodeScoreFunc,\n\t\t\t\t\t\tnodeIndexByteOffset,\n\t\t\t\t\t\tdepth + 1\n\t\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( c2StopTraversal ) return true;\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n} )();\n\nexport const intersectsGeometry = ( function () {\n\n\tconst triangle = new ExtendedTriangle();\n\tconst triangle2 = new ExtendedTriangle();\n\tconst invertedMat = new Matrix4();\n\n\tconst obb = new OrientedBox();\n\tconst obb2 = new OrientedBox();\n\n\treturn function intersectsGeometry( nodeIndex32, geometry, otherGeometry, geometryToBvh, cachedObb = null ) {\n\n\t\tlet nodeIndex16 = nodeIndex32 * 2, float32Array = _float32Array, uint16Array = _uint16Array, uint32Array = _uint32Array;\n\n\t\tif ( cachedObb === null ) {\n\n\t\t\tif ( ! otherGeometry.boundingBox ) {\n\n\t\t\t\totherGeometry.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tobb.set( otherGeometry.boundingBox.min, otherGeometry.boundingBox.max, geometryToBvh );\n\t\t\tcachedObb = obb;\n\n\t\t}\n\n\t\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\n\t\tif ( isLeaf ) {\n\n\t\t\tconst thisGeometry = geometry;\n\t\t\tconst thisIndex = thisGeometry.index;\n\t\t\tconst thisPos = thisGeometry.attributes.position;\n\n\t\t\tconst index = otherGeometry.index;\n\t\t\tconst pos = otherGeometry.attributes.position;\n\n\t\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\t\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\n\t\t\t// get the inverse of the geometry matrix so we can transform our triangles into the\n\t\t\t// geometry space we're trying to test. We assume there are fewer triangles being checked\n\t\t\t// here.\n\t\t\tinvertedMat.copy( geometryToBvh ).invert();\n\n\t\t\tif ( otherGeometry.boundsTree ) {\n\n\t\t\t\tarrayToBox( BOUNDING_DATA_INDEX( nodeIndex32 ), float32Array, obb2 );\n\t\t\t\tobb2.matrix.copy( invertedMat );\n\t\t\t\tobb2.needsUpdate = true;\n\n\t\t\t\tconst res = otherGeometry.boundsTree.shapecast( {\n\n\t\t\t\t\tintersectsBounds: box => obb2.intersectsBox( box ),\n\n\t\t\t\t\tintersectsTriangle: tri => {\n\n\t\t\t\t\t\ttri.a.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\ttri.b.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\ttri.c.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\ttri.needsUpdate = true;\n\n\t\t\t\t\t\tfor ( let i = offset * 3, l = ( count + offset ) * 3; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t// this triangle needs to be transformed into the current BVH coordinate frame\n\t\t\t\t\t\t\tsetTriangle( triangle2, i, thisIndex, thisPos );\n\t\t\t\t\t\t\ttriangle2.needsUpdate = true;\n\t\t\t\t\t\t\tif ( tri.intersectsTriangle( triangle2 ) ) {\n\n\t\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\treturn res;\n\n\t\t\t} else {\n\n\t\t\t\tfor ( let i = offset * 3, l = ( count + offset * 3 ); i < l; i += 3 ) {\n\n\t\t\t\t\t// this triangle needs to be transformed into the current BVH coordinate frame\n\t\t\t\t\tsetTriangle( triangle, i, thisIndex, thisPos );\n\t\t\t\t\ttriangle.a.applyMatrix4( invertedMat );\n\t\t\t\t\ttriangle.b.applyMatrix4( invertedMat );\n\t\t\t\t\ttriangle.c.applyMatrix4( invertedMat );\n\t\t\t\t\ttriangle.needsUpdate = true;\n\n\t\t\t\t\tfor ( let i2 = 0, l2 = index.count; i2 < l2; i2 += 3 ) {\n\n\t\t\t\t\t\tsetTriangle( triangle2, i2, index, pos );\n\t\t\t\t\t\ttriangle2.needsUpdate = true;\n\n\t\t\t\t\t\tif ( triangle.intersectsTriangle( triangle2 ) ) {\n\n\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst left = nodeIndex32 + 8;\n\t\t\tconst right = uint32Array[ nodeIndex32 + 6 ];\n\n\t\t\tarrayToBox( BOUNDING_DATA_INDEX( left ), float32Array, boundingBox );\n\t\t\tconst leftIntersection =\n\t\t\t\tcachedObb.intersectsBox( boundingBox ) &&\n\t\t\t\tintersectsGeometry( left, geometry, otherGeometry, geometryToBvh, cachedObb );\n\n\t\t\tif ( leftIntersection ) return true;\n\n\t\t\tarrayToBox( BOUNDING_DATA_INDEX( right ), float32Array, boundingBox );\n\t\t\tconst rightIntersection =\n\t\t\t\tcachedObb.intersectsBox( boundingBox ) &&\n\t\t\t\tintersectsGeometry( right, geometry, otherGeometry, geometryToBvh, cachedObb );\n\n\t\t\tif ( rightIntersection ) return true;\n\n\t\t\treturn false;\n\n\t\t}\n\n\t};\n\n} )();\n\nfunction intersectRay( nodeIndex32, array, ray, target ) {\n\n\tarrayToBox( nodeIndex32, array, boundingBox );\n\treturn ray.intersectBox( boundingBox, target );\n\n}\n\nconst bufferStack = [];\nlet _prevBuffer;\nlet _float32Array;\nlet _uint16Array;\nlet _uint32Array;\nexport function setBuffer( buffer ) {\n\n\tif ( _prevBuffer ) {\n\n\t\tbufferStack.push( _prevBuffer );\n\n\t}\n\n\t_prevBuffer = buffer;\n\t_float32Array = new Float32Array( buffer );\n\t_uint16Array = new Uint16Array( buffer );\n\t_uint32Array = new Uint32Array( buffer );\n\n}\n\nexport function clearBuffer() {\n\n\t_prevBuffer = null;\n\t_float32Array = null;\n\t_uint16Array = null;\n\t_uint32Array = null;\n\n\tif ( bufferStack.length ) {\n\n\t\tsetBuffer( bufferStack.pop() );\n\n\t}\n\n}\n","import { Vector3, BufferAttribute, Box3, FrontSide, Matrix4 } from 'three';\nimport { CENTER, BYTES_PER_NODE, IS_LEAFNODE_FLAG } from './Constants.js';\nimport { buildPackedTree } from './buildFunctions.js';\nimport {\n\traycast,\n\traycastFirst,\n\tshapecast,\n\tintersectsGeometry,\n\tsetBuffer,\n\tclearBuffer,\n} from './castFunctions.js';\nimport { OrientedBox } from '../math/OrientedBox.js';\nimport { ExtendedTriangle } from '../math/ExtendedTriangle.js';\nimport { PrimitivePool } from '../utils/PrimitivePool.js';\nimport { arrayToBox } from '../utils/ArrayBoxUtilities.js';\nimport { iterateOverTriangles, setTriangle } from '../utils/TriangleUtilities.js';\n\nconst SKIP_GENERATION = Symbol( 'skip tree generation' );\n\nconst aabb = /* @__PURE__ */ new Box3();\nconst aabb2 = /* @__PURE__ */ new Box3();\nconst tempMatrix = /* @__PURE__ */ new Matrix4();\nconst obb = /* @__PURE__ */ new OrientedBox();\nconst obb2 = /* @__PURE__ */ new OrientedBox();\nconst temp = /* @__PURE__ */ new Vector3();\nconst temp1 = /* @__PURE__ */ new Vector3();\nconst temp2 = /* @__PURE__ */ new Vector3();\nconst temp3 = /* @__PURE__ */ new Vector3();\nconst temp4 = /* @__PURE__ */ new Vector3();\nconst tempBox = /* @__PURE__ */ new Box3();\nconst trianglePool = /* @__PURE__ */ new PrimitivePool( () => new ExtendedTriangle() );\n\nexport class MeshBVH {\n\n\tstatic serialize( bvh, options = {} ) {\n\n\t\tif ( options.isBufferGeometry ) {\n\n\t\t\tconsole.warn( 'MeshBVH.serialize: The arguments for the function have changed. See documentation for new signature.' );\n\n\t\t\treturn MeshBVH.serialize(\n\t\t\t\targuments[ 0 ],\n\t\t\t\t{\n\t\t\t\t\tcloneBuffers: arguments[ 2 ] === undefined ? true : arguments[ 2 ],\n\t\t\t\t}\n\t\t\t);\n\n\t\t}\n\n\t\toptions = {\n\t\t\tcloneBuffers: true,\n\t\t\t...options,\n\t\t};\n\n\t\tconst geometry = bvh.geometry;\n\t\tconst rootData = bvh._roots;\n\t\tconst indexAttribute = geometry.getIndex();\n\t\tlet result;\n\t\tif ( options.cloneBuffers ) {\n\n\t\t\tresult = {\n\t\t\t\troots: rootData.map( root => root.slice() ),\n\t\t\t\tindex: indexAttribute.array.slice(),\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tresult = {\n\t\t\t\troots: rootData,\n\t\t\t\tindex: indexAttribute.array,\n\t\t\t};\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tstatic deserialize( data, geometry, options = {} ) {\n\n\t\tif ( typeof options === 'boolean' ) {\n\n\t\t\tconsole.warn( 'MeshBVH.deserialize: The arguments for the function have changed. See documentation for new signature.' );\n\n\t\t\treturn MeshBVH.deserialize(\n\t\t\t\targuments[ 0 ],\n\t\t\t\targuments[ 1 ],\n\t\t\t\t{\n\t\t\t\t\tsetIndex: arguments[ 2 ] === undefined ? true : arguments[ 2 ],\n\t\t\t\t}\n\t\t\t);\n\n\t\t}\n\n\t\toptions = {\n\t\t\tsetIndex: true,\n\t\t\t...options,\n\t\t};\n\n\t\tconst { index, roots } = data;\n\t\tconst bvh = new MeshBVH( geometry, { ...options, [ SKIP_GENERATION ]: true } );\n\t\tbvh._roots = roots;\n\n\t\tif ( options.setIndex ) {\n\n\t\t\tconst indexAttribute = geometry.getIndex();\n\t\t\tif ( indexAttribute === null ) {\n\n\t\t\t\tconst newIndex = new BufferAttribute( data.index, 1, false );\n\t\t\t\tgeometry.setIndex( newIndex );\n\n\t\t\t} else if ( indexAttribute.array !== index ) {\n\n\t\t\t\tindexAttribute.array.set( index );\n\t\t\t\tindexAttribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn bvh;\n\n\t}\n\n\tconstructor( geometry, options = {} ) {\n\n\t\tif ( ! geometry.isBufferGeometry ) {\n\n\t\t\tthrow new Error( 'MeshBVH: Only BufferGeometries are supported.' );\n\n\t\t} else if ( geometry.index && geometry.index.isInterleavedBufferAttribute ) {\n\n\t\t\tthrow new Error( 'MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.' );\n\n\t\t}\n\n\t\t// default options\n\t\toptions = Object.assign( {\n\n\t\t\tstrategy: CENTER,\n\t\t\tmaxDepth: 40,\n\t\t\tmaxLeafTris: 10,\n\t\t\tverbose: true,\n\t\t\tuseSharedArrayBuffer: false,\n\t\t\tsetBoundingBox: true,\n\t\t\tonProgress: null,\n\n\t\t\t// undocumented options\n\n\t\t\t// Whether to skip generating the tree. Used for deserialization.\n\t\t\t[ SKIP_GENERATION ]: false,\n\n\t\t}, options );\n\n\t\tif ( options.useSharedArrayBuffer && typeof SharedArrayBuffer === 'undefined' ) {\n\n\t\t\tthrow new Error( 'MeshBVH: SharedArrayBuffer is not available.' );\n\n\t\t}\n\n\t\tthis._roots = null;\n\t\tif ( ! options[ SKIP_GENERATION ] ) {\n\n\t\t\tthis._roots = buildPackedTree( geometry, options );\n\n\t\t\tif ( ! geometry.boundingBox && options.setBoundingBox ) {\n\n\t\t\t\tgeometry.boundingBox = this.getBoundingBox( new Box3() );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// retain references to the geometry so we can use them it without having to\n\t\t// take a geometry reference in every function.\n\t\tthis.geometry = geometry;\n\n\t}\n\n\trefit( nodeIndices = null ) {\n\n\t\tif ( nodeIndices && Array.isArray( nodeIndices ) ) {\n\n\t\t\tnodeIndices = new Set( nodeIndices );\n\n\t\t}\n\n\t\tconst geometry = this.geometry;\n\t\tconst indexArr = geometry.index.array;\n\t\tconst posAttr = geometry.attributes.position;\n\n\t\tlet buffer, uint32Array, uint16Array, float32Array;\n\t\tlet byteOffset = 0;\n\t\tconst roots = this._roots;\n\t\tfor ( let i = 0, l = roots.length; i < l; i ++ ) {\n\n\t\t\tbuffer = roots[ i ];\n\t\t\tuint32Array = new Uint32Array( buffer );\n\t\t\tuint16Array = new Uint16Array( buffer );\n\t\t\tfloat32Array = new Float32Array( buffer );\n\n\t\t\t_traverse( 0, byteOffset );\n\t\t\tbyteOffset += buffer.byteLength;\n\n\t\t}\n\n\t\tfunction _traverse( node32Index, byteOffset, force = false ) {\n\n\t\t\tconst node16Index = node32Index * 2;\n\t\t\tconst isLeaf = uint16Array[ node16Index + 15 ] === IS_LEAFNODE_FLAG;\n\t\t\tif ( isLeaf ) {\n\n\t\t\t\tconst offset = uint32Array[ node32Index + 6 ];\n\t\t\t\tconst count = uint16Array[ node16Index + 14 ];\n\n\t\t\t\tlet minx = Infinity;\n\t\t\t\tlet miny = Infinity;\n\t\t\t\tlet minz = Infinity;\n\t\t\t\tlet maxx = - Infinity;\n\t\t\t\tlet maxy = - Infinity;\n\t\t\t\tlet maxz = - Infinity;\n\n\t\t\t\tfor ( let i = 3 * offset, l = 3 * ( offset + count ); i < l; i ++ ) {\n\n\t\t\t\t\tconst index = indexArr[ i ];\n\t\t\t\t\tconst x = posAttr.getX( index );\n\t\t\t\t\tconst y = posAttr.getY( index );\n\t\t\t\t\tconst z = posAttr.getZ( index );\n\n\t\t\t\t\tif ( x < minx ) minx = x;\n\t\t\t\t\tif ( x > maxx ) maxx = x;\n\n\t\t\t\t\tif ( y < miny ) miny = y;\n\t\t\t\t\tif ( y > maxy ) maxy = y;\n\n\t\t\t\t\tif ( z < minz ) minz = z;\n\t\t\t\t\tif ( z > maxz ) maxz = z;\n\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tfloat32Array[ node32Index + 0 ] !== minx ||\n\t\t\t\t\tfloat32Array[ node32Index + 1 ] !== miny ||\n\t\t\t\t\tfloat32Array[ node32Index + 2 ] !== minz ||\n\n\t\t\t\t\tfloat32Array[ node32Index + 3 ] !== maxx ||\n\t\t\t\t\tfloat32Array[ node32Index + 4 ] !== maxy ||\n\t\t\t\t\tfloat32Array[ node32Index + 5 ] !== maxz\n\t\t\t\t) {\n\n\t\t\t\t\tfloat32Array[ node32Index + 0 ] = minx;\n\t\t\t\t\tfloat32Array[ node32Index + 1 ] = miny;\n\t\t\t\t\tfloat32Array[ node32Index + 2 ] = minz;\n\n\t\t\t\t\tfloat32Array[ node32Index + 3 ] = maxx;\n\t\t\t\t\tfloat32Array[ node32Index + 4 ] = maxy;\n\t\t\t\t\tfloat32Array[ node32Index + 5 ] = maxz;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst left = node32Index + 8;\n\t\t\t\tconst right = uint32Array[ node32Index + 6 ];\n\n\t\t\t\t// the identifying node indices provided by the shapecast function include offsets of all\n\t\t\t\t// root buffers to guarantee they're unique between roots so offset left and right indices here.\n\t\t\t\tconst offsetLeft = left + byteOffset;\n\t\t\t\tconst offsetRight = right + byteOffset;\n\t\t\t\tlet forceChildren = force;\n\t\t\t\tlet includesLeft = false;\n\t\t\t\tlet includesRight = false;\n\n\t\t\t\tif ( nodeIndices ) {\n\n\t\t\t\t\t// if we see that neither the left or right child are included in the set that need to be updated\n\t\t\t\t\t// then we assume that all children need to be updated.\n\t\t\t\t\tif ( ! forceChildren ) {\n\n\t\t\t\t\t\tincludesLeft = nodeIndices.has( offsetLeft );\n\t\t\t\t\t\tincludesRight = nodeIndices.has( offsetRight );\n\t\t\t\t\t\tforceChildren = ! includesLeft && ! includesRight;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tincludesLeft = true;\n\t\t\t\t\tincludesRight = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst traverseLeft = forceChildren || includesLeft;\n\t\t\t\tconst traverseRight = forceChildren || includesRight;\n\n\t\t\t\tlet leftChange = false;\n\t\t\t\tif ( traverseLeft ) {\n\n\t\t\t\t\tleftChange = _traverse( left, byteOffset, forceChildren );\n\n\t\t\t\t}\n\n\t\t\t\tlet rightChange = false;\n\t\t\t\tif ( traverseRight ) {\n\n\t\t\t\t\trightChange = _traverse( right, byteOffset, forceChildren );\n\n\t\t\t\t}\n\n\t\t\t\tconst didChange = leftChange || rightChange;\n\t\t\t\tif ( didChange ) {\n\n\t\t\t\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\tconst lefti = left + i;\n\t\t\t\t\t\tconst righti = right + i;\n\t\t\t\t\t\tconst minLeftValue = float32Array[ lefti ];\n\t\t\t\t\t\tconst maxLeftValue = float32Array[ lefti + 3 ];\n\t\t\t\t\t\tconst minRightValue = float32Array[ righti ];\n\t\t\t\t\t\tconst maxRightValue = float32Array[ righti + 3 ];\n\n\t\t\t\t\t\tfloat32Array[ node32Index + i ] = minLeftValue < minRightValue ? minLeftValue : minRightValue;\n\t\t\t\t\t\tfloat32Array[ node32Index + i + 3 ] = maxLeftValue > maxRightValue ? maxLeftValue : maxRightValue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn didChange;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttraverse( callback, rootIndex = 0 ) {\n\n\t\tconst buffer = this._roots[ rootIndex ];\n\t\tconst uint32Array = new Uint32Array( buffer );\n\t\tconst uint16Array = new Uint16Array( buffer );\n\t\t_traverse( 0 );\n\n\t\tfunction _traverse( node32Index, depth = 0 ) {\n\n\t\t\tconst node16Index = node32Index * 2;\n\t\t\tconst isLeaf = uint16Array[ node16Index + 15 ] === IS_LEAFNODE_FLAG;\n\t\t\tif ( isLeaf ) {\n\n\t\t\t\tconst offset = uint32Array[ node32Index + 6 ];\n\t\t\t\tconst count = uint16Array[ node16Index + 14 ];\n\t\t\t\tcallback( depth, isLeaf, new Float32Array( buffer, node32Index * 4, 6 ), offset, count );\n\n\t\t\t} else {\n\n\t\t\t\t// TODO: use node functions here\n\t\t\t\tconst left = node32Index + BYTES_PER_NODE / 4;\n\t\t\t\tconst right = uint32Array[ node32Index + 6 ];\n\t\t\t\tconst splitAxis = uint32Array[ node32Index + 7 ];\n\t\t\t\tconst stopTraversal = callback( depth, isLeaf, new Float32Array( buffer, node32Index * 4, 6 ), splitAxis );\n\n\t\t\t\tif ( ! stopTraversal ) {\n\n\t\t\t\t\t_traverse( left, depth + 1 );\n\t\t\t\t\t_traverse( right, depth + 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/* Core Cast Functions */\n\traycast( ray, materialOrSide = FrontSide ) {\n\n\t\tconst roots = this._roots;\n\t\tconst geometry = this.geometry;\n\t\tconst intersects = [];\n\t\tconst isMaterial = materialOrSide.isMaterial;\n\t\tconst isArrayMaterial = Array.isArray( materialOrSide );\n\n\t\tconst groups = geometry.groups;\n\t\tconst side = isMaterial ? materialOrSide.side : materialOrSide;\n\t\tfor ( let i = 0, l = roots.length; i < l; i ++ ) {\n\n\t\t\tconst materialSide = isArrayMaterial ? materialOrSide[ groups[ i ].materialIndex ].side : side;\n\t\t\tconst startCount = intersects.length;\n\n\t\t\tsetBuffer( roots[ i ] );\n\t\t\traycast( 0, geometry, materialSide, ray, intersects );\n\t\t\tclearBuffer();\n\n\t\t\tif ( isArrayMaterial ) {\n\n\t\t\t\tconst materialIndex = groups[ i ].materialIndex;\n\t\t\t\tfor ( let j = startCount, jl = intersects.length; j < jl; j ++ ) {\n\n\t\t\t\t\tintersects[ j ].face.materialIndex = materialIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn intersects;\n\n\t}\n\n\traycastFirst( ray, materialOrSide = FrontSide ) {\n\n\t\tconst roots = this._roots;\n\t\tconst geometry = this.geometry;\n\t\tconst isMaterial = materialOrSide.isMaterial;\n\t\tconst isArrayMaterial = Array.isArray( materialOrSide );\n\n\t\tlet closestResult = null;\n\n\t\tconst groups = geometry.groups;\n\t\tconst side = isMaterial ? materialOrSide.side : materialOrSide;\n\t\tfor ( let i = 0, l = roots.length; i < l; i ++ ) {\n\n\t\t\tconst materialSide = isArrayMaterial ? materialOrSide[ groups[ i ].materialIndex ].side : side;\n\n\t\t\tsetBuffer( roots[ i ] );\n\t\t\tconst result = raycastFirst( 0, geometry, materialSide, ray );\n\t\t\tclearBuffer();\n\n\t\t\tif ( result != null && ( closestResult == null || result.distance < closestResult.distance ) ) {\n\n\t\t\t\tclosestResult = result;\n\t\t\t\tif ( isArrayMaterial ) {\n\n\t\t\t\t\tresult.face.materialIndex = groups[ i ].materialIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn closestResult;\n\n\t}\n\n\tintersectsGeometry( otherGeometry, geomToMesh ) {\n\n\t\tconst geometry = this.geometry;\n\t\tlet result = false;\n\t\tfor ( const root of this._roots ) {\n\n\t\t\tsetBuffer( root );\n\t\t\tresult = intersectsGeometry( 0, geometry, otherGeometry, geomToMesh );\n\t\t\tclearBuffer();\n\n\t\t\tif ( result ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tshapecast( callbacks, _intersectsTriangleFunc, _orderNodesFunc ) {\n\n\t\tconst geometry = this.geometry;\n\t\tif ( callbacks instanceof Function ) {\n\n\t\t\tif ( _intersectsTriangleFunc ) {\n\n\t\t\t\t// Support the previous function signature that provided three sequential index buffer\n\t\t\t\t// indices here.\n\t\t\t\tconst originalTriangleFunc = _intersectsTriangleFunc;\n\t\t\t\t_intersectsTriangleFunc = ( tri, index, contained, depth ) => {\n\n\t\t\t\t\tconst i3 = index * 3;\n\t\t\t\t\treturn originalTriangleFunc( tri, i3, i3 + 1, i3 + 2, contained, depth );\n\n\t\t\t\t};\n\n\n\t\t\t}\n\n\t\t\tcallbacks = {\n\n\t\t\t\tboundsTraverseOrder: _orderNodesFunc,\n\t\t\t\tintersectsBounds: callbacks,\n\t\t\t\tintersectsTriangle: _intersectsTriangleFunc,\n\t\t\t\tintersectsRange: null,\n\n\t\t\t};\n\n\t\t\tconsole.warn( 'MeshBVH: Shapecast function signature has changed and now takes an object of callbacks as a second argument. See docs for new signature.' );\n\n\t\t}\n\n\t\tconst triangle = trianglePool.getPrimitive();\n\t\tlet {\n\t\t\tboundsTraverseOrder,\n\t\t\tintersectsBounds,\n\t\t\tintersectsRange,\n\t\t\tintersectsTriangle,\n\t\t} = callbacks;\n\n\t\tif ( intersectsRange && intersectsTriangle ) {\n\n\t\t\tconst originalIntersectsRange = intersectsRange;\n\t\t\tintersectsRange = ( offset, count, contained, depth, nodeIndex ) => {\n\n\t\t\t\tif ( ! originalIntersectsRange( offset, count, contained, depth, nodeIndex ) ) {\n\n\t\t\t\t\treturn iterateOverTriangles( offset, count, geometry, intersectsTriangle, contained, depth, triangle );\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t};\n\n\t\t} else if ( ! intersectsRange ) {\n\n\t\t\tif ( intersectsTriangle ) {\n\n\t\t\t\tintersectsRange = ( offset, count, contained, depth ) => {\n\n\t\t\t\t\treturn iterateOverTriangles( offset, count, geometry, intersectsTriangle, contained, depth, triangle );\n\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tintersectsRange = ( offset, count, contained ) => {\n\n\t\t\t\t\treturn contained;\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet result = false;\n\t\tlet byteOffset = 0;\n\t\tfor ( const root of this._roots ) {\n\n\t\t\tsetBuffer( root );\n\t\t\tresult = shapecast( 0, geometry, intersectsBounds, intersectsRange, boundsTraverseOrder, byteOffset );\n\t\t\tclearBuffer();\n\n\t\t\tif ( result ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tbyteOffset += root.byteLength;\n\n\t\t}\n\n\t\ttrianglePool.releasePrimitive( triangle );\n\n\t\treturn result;\n\n\t}\n\n\tbvhcast( otherBvh, matrixToLocal, callbacks ) {\n\n\t\t// BVHCast function for intersecting two BVHs against each other. Ultimately just uses two recursive shapecast calls rather\n\t\t// than an approach that walks down the tree (see bvhcast.js file for more info).\n\n\t\tlet {\n\t\t\tintersectsRanges,\n\t\t\tintersectsTriangles,\n\t\t} = callbacks;\n\n\t\tconst indexAttr = this.geometry.index;\n\t\tconst positionAttr = this.geometry.attributes.position;\n\n\t\tconst otherIndexAttr = otherBvh.geometry.index;\n\t\tconst otherPositionAttr = otherBvh.geometry.attributes.position;\n\n\t\ttempMatrix.copy( matrixToLocal ).invert();\n\n\t\tconst triangle = trianglePool.getPrimitive();\n\t\tconst triangle2 = trianglePool.getPrimitive();\n\n\t\tif ( intersectsTriangles ) {\n\n\t\t\tfunction iterateOverDoubleTriangles( offset1, count1, offset2, count2, depth1, index1, depth2, index2 ) {\n\n\t\t\t\tfor ( let i2 = offset2, l2 = offset2 + count2; i2 < l2; i2 ++ ) {\n\n\t\t\t\t\tsetTriangle( triangle2, i2 * 3, otherIndexAttr, otherPositionAttr );\n\t\t\t\t\ttriangle2.a.applyMatrix4( matrixToLocal );\n\t\t\t\t\ttriangle2.b.applyMatrix4( matrixToLocal );\n\t\t\t\t\ttriangle2.c.applyMatrix4( matrixToLocal );\n\t\t\t\t\ttriangle2.needsUpdate = true;\n\n\t\t\t\t\tfor ( let i1 = offset1, l1 = offset1 + count1; i1 < l1; i1 ++ ) {\n\n\t\t\t\t\t\tsetTriangle( triangle, i1 * 3, indexAttr, positionAttr );\n\t\t\t\t\t\ttriangle.needsUpdate = true;\n\n\t\t\t\t\t\tif ( intersectsTriangles( triangle, triangle2, i1, i2, depth1, index1, depth2, index2 ) ) {\n\n\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\tif ( intersectsRanges ) {\n\n\t\t\t\tconst originalIntersectsRanges = intersectsRanges;\n\t\t\t\tintersectsRanges = function ( offset1, count1, offset2, count2, depth1, index1, depth2, index2 ) {\n\n\t\t\t\t\tif ( ! originalIntersectsRanges( offset1, count1, offset2, count2, depth1, index1, depth2, index2 ) ) {\n\n\t\t\t\t\t\treturn iterateOverDoubleTriangles( offset1, count1, offset2, count2, depth1, index1, depth2, index2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tintersectsRanges = iterateOverDoubleTriangles;\n\n\t\t\t}\n\n\t\t}\n\n\t\totherBvh.getBoundingBox( aabb2 );\n\t\taabb2.applyMatrix4( matrixToLocal );\n\t\tconst result = this.shapecast( {\n\n\t\t\tintersectsBounds: box => aabb2.intersectsBox( box ),\n\n\t\t\tintersectsRange: ( offset1, count1, contained, depth1, nodeIndex1, box ) => {\n\n\t\t\t\taabb.copy( box );\n\t\t\t\taabb.applyMatrix4( tempMatrix );\n\t\t\t\treturn otherBvh.shapecast( {\n\n\t\t\t\t\tintersectsBounds: box => aabb.intersectsBox( box ),\n\n\t\t\t\t\tintersectsRange: ( offset2, count2, contained, depth2, nodeIndex2 ) => {\n\n\t\t\t\t\t\treturn intersectsRanges( offset1, count1, offset2, count2, depth1, nodeIndex1, depth2, nodeIndex2 );\n\n\t\t\t\t\t},\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} );\n\n\t\ttrianglePool.releasePrimitive( triangle );\n\t\ttrianglePool.releasePrimitive( triangle2 );\n\t\treturn result;\n\n\t}\n\n\t/* Derived Cast Functions */\n\tintersectsBox( box, boxToMesh ) {\n\n\t\tobb.set( box.min, box.max, boxToMesh );\n\t\tobb.needsUpdate = true;\n\n\t\treturn this.shapecast(\n\t\t\t{\n\t\t\t\tintersectsBounds: box => obb.intersectsBox( box ),\n\t\t\t\tintersectsTriangle: tri => obb.intersectsTriangle( tri )\n\t\t\t}\n\t\t);\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.shapecast(\n\t\t\t{\n\t\t\t\tintersectsBounds: box => sphere.intersectsBox( box ),\n\t\t\t\tintersectsTriangle: tri => tri.intersectsSphere( sphere )\n\t\t\t}\n\t\t);\n\n\t}\n\n\tclosestPointToGeometry( otherGeometry, geometryToBvh, target1 = { }, target2 = { }, minThreshold = 0, maxThreshold = Infinity ) {\n\n\t\tif ( ! otherGeometry.boundingBox ) {\n\n\t\t\totherGeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tobb.set( otherGeometry.boundingBox.min, otherGeometry.boundingBox.max, geometryToBvh );\n\t\tobb.needsUpdate = true;\n\n\t\tconst geometry = this.geometry;\n\t\tconst pos = geometry.attributes.position;\n\t\tconst index = geometry.index;\n\t\tconst otherPos = otherGeometry.attributes.position;\n\t\tconst otherIndex = otherGeometry.index;\n\t\tconst triangle = trianglePool.getPrimitive();\n\t\tconst triangle2 = trianglePool.getPrimitive();\n\n\t\tlet tempTarget1 = temp1;\n\t\tlet tempTargetDest1 = temp2;\n\t\tlet tempTarget2 = null;\n\t\tlet tempTargetDest2 = null;\n\n\t\tif ( target2 ) {\n\n\t\t\ttempTarget2 = temp3;\n\t\t\ttempTargetDest2 = temp4;\n\n\t\t}\n\n\t\tlet closestDistance = Infinity;\n\t\tlet closestDistanceTriIndex = null;\n\t\tlet closestDistanceOtherTriIndex = null;\n\t\ttempMatrix.copy( geometryToBvh ).invert();\n\t\tobb2.matrix.copy( tempMatrix );\n\t\tthis.shapecast(\n\t\t\t{\n\n\t\t\t\tboundsTraverseOrder: box => {\n\n\t\t\t\t\treturn obb.distanceToBox( box );\n\n\t\t\t\t},\n\n\t\t\t\tintersectsBounds: ( box, isLeaf, score ) => {\n\n\t\t\t\t\tif ( score < closestDistance && score < maxThreshold ) {\n\n\t\t\t\t\t\t// if we know the triangles of this bounds will be intersected next then\n\t\t\t\t\t\t// save the bounds to use during triangle checks.\n\t\t\t\t\t\tif ( isLeaf ) {\n\n\t\t\t\t\t\t\tobb2.min.copy( box.min );\n\t\t\t\t\t\t\tobb2.max.copy( box.max );\n\t\t\t\t\t\t\tobb2.needsUpdate = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t},\n\n\t\t\t\tintersectsRange: ( offset, count ) => {\n\n\t\t\t\t\tif ( otherGeometry.boundsTree ) {\n\n\t\t\t\t\t\t// if the other geometry has a bvh then use the accelerated path where we use shapecast to find\n\t\t\t\t\t\t// the closest bounds in the other geometry to check.\n\t\t\t\t\t\treturn otherGeometry.boundsTree.shapecast( {\n\t\t\t\t\t\t\tboundsTraverseOrder: box => {\n\n\t\t\t\t\t\t\t\treturn obb2.distanceToBox( box );\n\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tintersectsBounds: ( box, isLeaf, score ) => {\n\n\t\t\t\t\t\t\t\treturn score < closestDistance && score < maxThreshold;\n\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tintersectsRange: ( otherOffset, otherCount ) => {\n\n\t\t\t\t\t\t\t\tfor ( let i2 = otherOffset * 3, l2 = ( otherOffset + otherCount ) * 3; i2 < l2; i2 += 3 ) {\n\n\t\t\t\t\t\t\t\t\tsetTriangle( triangle2, i2, otherIndex, otherPos );\n\t\t\t\t\t\t\t\t\ttriangle2.a.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\t\t\ttriangle2.b.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\t\t\ttriangle2.c.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\t\t\ttriangle2.needsUpdate = true;\n\n\t\t\t\t\t\t\t\t\tfor ( let i = offset * 3, l = ( offset + count ) * 3; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\t\t\tsetTriangle( triangle, i, index, pos );\n\t\t\t\t\t\t\t\t\t\ttriangle.needsUpdate = true;\n\n\t\t\t\t\t\t\t\t\t\tconst dist = triangle.distanceToTriangle( triangle2, tempTarget1, tempTarget2 );\n\t\t\t\t\t\t\t\t\t\tif ( dist < closestDistance ) {\n\n\t\t\t\t\t\t\t\t\t\t\ttempTargetDest1.copy( tempTarget1 );\n\n\t\t\t\t\t\t\t\t\t\t\tif ( tempTargetDest2 ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\ttempTargetDest2.copy( tempTarget2 );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tclosestDistance = dist;\n\t\t\t\t\t\t\t\t\t\t\tclosestDistanceTriIndex = i / 3;\n\t\t\t\t\t\t\t\t\t\t\tclosestDistanceOtherTriIndex = i2 / 3;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// stop traversal if we find a point that's under the given threshold\n\t\t\t\t\t\t\t\t\t\tif ( dist < minThreshold ) {\n\n\t\t\t\t\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// If no bounds tree then we'll just check every triangle.\n\t\t\t\t\t\tconst triCount = otherIndex ? otherIndex.count : otherPos.count;\n\t\t\t\t\t\tfor ( let i2 = 0, l2 = triCount; i2 < l2; i2 += 3 ) {\n\n\t\t\t\t\t\t\tsetTriangle( triangle2, i2, otherIndex, otherPos );\n\t\t\t\t\t\t\ttriangle2.a.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\ttriangle2.b.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\ttriangle2.c.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\ttriangle2.needsUpdate = true;\n\n\t\t\t\t\t\t\tfor ( let i = offset * 3, l = ( offset + count ) * 3; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\tsetTriangle( triangle, i, index, pos );\n\t\t\t\t\t\t\t\ttriangle.needsUpdate = true;\n\n\t\t\t\t\t\t\t\tconst dist = triangle.distanceToTriangle( triangle2, tempTarget1, tempTarget2 );\n\t\t\t\t\t\t\t\tif ( dist < closestDistance ) {\n\n\t\t\t\t\t\t\t\t\ttempTargetDest1.copy( tempTarget1 );\n\n\t\t\t\t\t\t\t\t\tif ( tempTargetDest2 ) {\n\n\t\t\t\t\t\t\t\t\t\ttempTargetDest2.copy( tempTarget2 );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tclosestDistance = dist;\n\t\t\t\t\t\t\t\t\tclosestDistanceTriIndex = i / 3;\n\t\t\t\t\t\t\t\t\tclosestDistanceOtherTriIndex = i2 / 3;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// stop traversal if we find a point that's under the given threshold\n\t\t\t\t\t\t\t\tif ( dist < minThreshold ) {\n\n\t\t\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t}\n\n\t\t);\n\n\t\ttrianglePool.releasePrimitive( triangle );\n\t\ttrianglePool.releasePrimitive( triangle2 );\n\n\t\tif ( closestDistance === Infinity ) return null;\n\n\t\tif ( ! target1.point ) target1.point = tempTargetDest1.clone();\n\t\telse target1.point.copy( tempTargetDest1 );\n\t\ttarget1.distance = closestDistance,\n\t\ttarget1.faceIndex = closestDistanceTriIndex;\n\n\t\tif ( target2 ) {\n\n\t\t\tif ( ! target2.point ) target2.point = tempTargetDest2.clone();\n\t\t\telse target2.point.copy( tempTargetDest2 );\n\t\t\ttarget2.point.applyMatrix4( tempMatrix );\n\t\t\ttempTargetDest1.applyMatrix4( tempMatrix );\n\t\t\ttarget2.distance = tempTargetDest1.sub( target2.point ).length();\n\t\t\ttarget2.faceIndex = closestDistanceOtherTriIndex;\n\n\t\t}\n\n\t\treturn target1;\n\n\t}\n\n\tclosestPointToPoint( point, target = { }, minThreshold = 0, maxThreshold = Infinity ) {\n\n\t\t// early out if under minThreshold\n\t\t// skip checking if over maxThreshold\n\t\t// set minThreshold = maxThreshold to quickly check if a point is within a threshold\n\t\t// returns Infinity if no value found\n\t\tconst minThresholdSq = minThreshold * minThreshold;\n\t\tconst maxThresholdSq = maxThreshold * maxThreshold;\n\t\tlet closestDistanceSq = Infinity;\n\t\tlet closestDistanceTriIndex = null;\n\t\tthis.shapecast(\n\n\t\t\t{\n\n\t\t\t\tboundsTraverseOrder: box => {\n\n\t\t\t\t\ttemp.copy( point ).clamp( box.min, box.max );\n\t\t\t\t\treturn temp.distanceToSquared( point );\n\n\t\t\t\t},\n\n\t\t\t\tintersectsBounds: ( box, isLeaf, score ) => {\n\n\t\t\t\t\treturn score < closestDistanceSq && score < maxThresholdSq;\n\n\t\t\t\t},\n\n\t\t\t\tintersectsTriangle: ( tri, triIndex ) => {\n\n\t\t\t\t\ttri.closestPointToPoint( point, temp );\n\t\t\t\t\tconst distSq = point.distanceToSquared( temp );\n\t\t\t\t\tif ( distSq < closestDistanceSq ) {\n\n\t\t\t\t\t\ttemp1.copy( temp );\n\t\t\t\t\t\tclosestDistanceSq = distSq;\n\t\t\t\t\t\tclosestDistanceTriIndex = triIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( distSq < minThresholdSq ) {\n\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t}\n\n\t\t);\n\n\t\tif ( closestDistanceSq === Infinity ) return null;\n\n\t\tconst closestDistance = Math.sqrt( closestDistanceSq );\n\n\t\tif ( ! target.point ) target.point = temp1.clone();\n\t\telse target.point.copy( temp1 );\n\t\ttarget.distance = closestDistance,\n\t\ttarget.faceIndex = closestDistanceTriIndex;\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\ttarget.makeEmpty();\n\n\t\tconst roots = this._roots;\n\t\troots.forEach( buffer => {\n\n\t\t\tarrayToBox( 0, new Float32Array( buffer ), tempBox );\n\t\t\ttarget.union( tempBox );\n\n\t\t} );\n\n\t\treturn target;\n\n\t}\n\n}\n","import { LineBasicMaterial, BufferAttribute, Box3, Group, MeshBasicMaterial, Object3D, BufferGeometry } from 'three';\nimport { arrayToBox } from '../utils/ArrayBoxUtilities.js';\n\nconst boundingBox = /* @__PURE__ */ new Box3();\nclass MeshBVHRootVisualizer extends Object3D {\n\n\tget isMesh() {\n\n\t\treturn ! this.displayEdges;\n\n\t}\n\n\tget isLineSegments() {\n\n\t\treturn this.displayEdges;\n\n\t}\n\n\tget isLine() {\n\n\t\treturn this.displayEdges;\n\n\t}\n\n\tconstructor( mesh, material, depth = 10, group = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.material = material;\n\t\tthis.geometry = new BufferGeometry();\n\t\tthis.name = 'MeshBVHRootVisualizer';\n\t\tthis.depth = depth;\n\t\tthis.displayParents = false;\n\t\tthis.mesh = mesh;\n\t\tthis.displayEdges = true;\n\t\tthis._group = group;\n\n\t}\n\n\traycast() {}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst boundsTree = this.mesh.geometry.boundsTree;\n\t\tconst group = this._group;\n\t\tgeometry.dispose();\n\t\tthis.visible = false;\n\t\tif ( boundsTree ) {\n\n\t\t\t// count the number of bounds required\n\t\t\tconst targetDepth = this.depth - 1;\n\t\t\tconst displayParents = this.displayParents;\n\t\t\tlet boundsCount = 0;\n\t\t\tboundsTree.traverse( ( depth, isLeaf ) => {\n\n\t\t\t\tif ( depth === targetDepth || isLeaf ) {\n\n\t\t\t\t\tboundsCount ++;\n\t\t\t\t\treturn true;\n\n\t\t\t\t} else if ( displayParents ) {\n\n\t\t\t\t\tboundsCount ++;\n\n\t\t\t\t}\n\n\t\t\t}, group );\n\n\t\t\t// fill in the position buffer with the bounds corners\n\t\t\tlet posIndex = 0;\n\t\t\tconst positionArray = new Float32Array( 8 * 3 * boundsCount );\n\t\t\tboundsTree.traverse( ( depth, isLeaf, boundingData ) => {\n\n\t\t\t\tconst terminate = depth === targetDepth || isLeaf;\n\t\t\t\tif ( terminate || displayParents ) {\n\n\t\t\t\t\tarrayToBox( 0, boundingData, boundingBox );\n\n\t\t\t\t\tconst { min, max } = boundingBox;\n\t\t\t\t\tfor ( let x = - 1; x <= 1; x += 2 ) {\n\n\t\t\t\t\t\tconst xVal = x < 0 ? min.x : max.x;\n\t\t\t\t\t\tfor ( let y = - 1; y <= 1; y += 2 ) {\n\n\t\t\t\t\t\t\tconst yVal = y < 0 ? min.y : max.y;\n\t\t\t\t\t\t\tfor ( let z = - 1; z <= 1; z += 2 ) {\n\n\t\t\t\t\t\t\t\tconst zVal = z < 0 ? min.z : max.z;\n\t\t\t\t\t\t\t\tpositionArray[ posIndex + 0 ] = xVal;\n\t\t\t\t\t\t\t\tpositionArray[ posIndex + 1 ] = yVal;\n\t\t\t\t\t\t\t\tpositionArray[ posIndex + 2 ] = zVal;\n\n\t\t\t\t\t\t\t\tposIndex += 3;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn terminate;\n\n\t\t\t\t}\n\n\t\t\t}, group );\n\n\t\t\tlet indexArray;\n\t\t\tlet indices;\n\t\t\tif ( this.displayEdges ) {\n\n\t\t\t\t// fill in the index buffer to point to the corner points\n\t\t\t\tindices = new Uint8Array( [\n\t\t\t\t\t// x axis\n\t\t\t\t\t0, 4,\n\t\t\t\t\t1, 5,\n\t\t\t\t\t2, 6,\n\t\t\t\t\t3, 7,\n\n\t\t\t\t\t// y axis\n\t\t\t\t\t0, 2,\n\t\t\t\t\t1, 3,\n\t\t\t\t\t4, 6,\n\t\t\t\t\t5, 7,\n\n\t\t\t\t\t// z axis\n\t\t\t\t\t0, 1,\n\t\t\t\t\t2, 3,\n\t\t\t\t\t4, 5,\n\t\t\t\t\t6, 7,\n\t\t\t\t] );\n\n\t\t\t} else {\n\n\t\t\t\tindices = new Uint8Array( [\n\n\t\t\t\t\t// X-, X+\n\t\t\t\t\t0, 1, 2,\n\t\t\t\t\t2, 1, 3,\n\n\t\t\t\t\t4, 6, 5,\n\t\t\t\t\t6, 7, 5,\n\n\t\t\t\t\t// Y-, Y+\n\t\t\t\t\t1, 4, 5,\n\t\t\t\t\t0, 4, 1,\n\n\t\t\t\t\t2, 3, 6,\n\t\t\t\t\t3, 7, 6,\n\n\t\t\t\t\t// Z-, Z+\n\t\t\t\t\t0, 2, 4,\n\t\t\t\t\t2, 6, 4,\n\n\t\t\t\t\t1, 5, 3,\n\t\t\t\t\t3, 5, 7,\n\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t\tif ( positionArray.length > 65535 ) {\n\n\t\t\t\tindexArray = new Uint32Array( indices.length * boundsCount );\n\n\t\t\t} else {\n\n\t\t\t\tindexArray = new Uint16Array( indices.length * boundsCount );\n\n\t\t\t}\n\n\t\t\tconst indexLength = indices.length;\n\t\t\tfor ( let i = 0; i < boundsCount; i ++ ) {\n\n\t\t\t\tconst posOffset = i * 8;\n\t\t\t\tconst indexOffset = i * indexLength;\n\t\t\t\tfor ( let j = 0; j < indexLength; j ++ ) {\n\n\t\t\t\t\tindexArray[ indexOffset + j ] = posOffset + indices[ j ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// update the geometry\n\t\t\tgeometry.setIndex(\n\t\t\t\tnew BufferAttribute( indexArray, 1, false ),\n\t\t\t);\n\t\t\tgeometry.setAttribute(\n\t\t\t\t'position',\n\t\t\t\tnew BufferAttribute( positionArray, 3, false ),\n\t\t\t);\n\t\t\tthis.visible = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass MeshBVHVisualizer extends Group {\n\n\tget color() {\n\n\t\treturn this.edgeMaterial.color;\n\n\t}\n\n\tget opacity() {\n\n\t\treturn this.edgeMaterial.opacity;\n\n\t}\n\n\tset opacity( v ) {\n\n\t\tthis.edgeMaterial.opacity = v;\n\t\tthis.meshMaterial.opacity = v;\n\n\t}\n\n\tconstructor( mesh, depth = 10 ) {\n\n\t\tsuper();\n\n\t\tthis.name = 'MeshBVHVisualizer';\n\t\tthis.depth = depth;\n\t\tthis.mesh = mesh;\n\t\tthis.displayParents = false;\n\t\tthis.displayEdges = true;\n\t\tthis._roots = [];\n\n\t\tconst edgeMaterial = new LineBasicMaterial( {\n\t\t\tcolor: 0x00FF88,\n\t\t\ttransparent: true,\n\t\t\topacity: 0.3,\n\t\t\tdepthWrite: false,\n\t\t} );\n\n\t\tconst meshMaterial = new MeshBasicMaterial( {\n\t\t\tcolor: 0x00FF88,\n\t\t\ttransparent: true,\n\t\t\topacity: 0.3,\n\t\t\tdepthWrite: false,\n\t\t} );\n\n\t\tmeshMaterial.color = edgeMaterial.color;\n\n\t\tthis.edgeMaterial = edgeMaterial;\n\t\tthis.meshMaterial = meshMaterial;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tconst bvh = this.mesh.geometry.boundsTree;\n\t\tconst totalRoots = bvh ? bvh._roots.length : 0;\n\t\twhile ( this._roots.length > totalRoots ) {\n\n\t\t\tconst root = this._roots.pop();\n\t\t\troot.geometry.dispose();\n\t\t\tthis.remove( root );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < totalRoots; i ++ ) {\n\n\t\t\tif ( i >= this._roots.length ) {\n\n\t\t\t\tconst root = new MeshBVHRootVisualizer( this.mesh, this.edgeMaterial, this.depth, i );\n\t\t\t\tthis.add( root );\n\t\t\t\tthis._roots.push( root );\n\n\t\t\t}\n\n\t\t\tconst root = this._roots[ i ];\n\t\t\troot.depth = this.depth;\n\t\t\troot.mesh = this.mesh;\n\t\t\troot.displayParents = this.displayParents;\n\t\t\troot.displayEdges = this.displayEdges;\n\t\t\troot.material = this.displayEdges ? this.edgeMaterial : this.meshMaterial;\n\t\t\troot.update();\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( ...args ) {\n\n\t\tthis.position.copy( this.mesh.position );\n\t\tthis.rotation.copy( this.mesh.rotation );\n\t\tthis.scale.copy( this.mesh.scale );\n\n\t\tsuper.updateMatrixWorld( ...args );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.depth = source.depth;\n\t\tthis.mesh = source.mesh;\n\n\t}\n\n\tclone() {\n\n\t\treturn new MeshBVHVisualizer( this.mesh, this.depth );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.edgeMaterial.dispose();\n\t\tthis.meshMaterial.dispose();\n\n\t\tconst children = this.children;\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].geometry.dispose();\n\n\t\t}\n\n\t}\n\n}\n\n\nexport { MeshBVHVisualizer };\n","import { Box3, Vector3 } from 'three';\nimport { TRAVERSAL_COST, TRIANGLE_INTERSECT_COST } from '../core/Constants.js';\nimport { arrayToBox } from '../utils/ArrayBoxUtilities.js';\n\nconst _box1 = /* @__PURE__ */ new Box3();\nconst _box2 = /* @__PURE__ */ new Box3();\nconst _vec = /* @__PURE__ */ new Vector3();\n\n// https://stackoverflow.com/questions/1248302/how-to-get-the-size-of-a-javascript-object\nfunction getPrimitiveSize( el ) {\n\n\tswitch ( typeof el ) {\n\n\t\tcase 'number':\n\t\t\treturn 8;\n\t\tcase 'string':\n\t\t\treturn el.length * 2;\n\t\tcase 'boolean':\n\t\t\treturn 4;\n\t\tdefault:\n\t\t\treturn 0;\n\n\t}\n\n}\n\nfunction isTypedArray( arr ) {\n\n\tconst regex = /(Uint|Int|Float)(8|16|32)Array/;\n\treturn regex.test( arr.constructor.name );\n\n}\n\nfunction getRootExtremes( bvh, group ) {\n\n\tconst result = {\n\t\tnodeCount: 0,\n\t\tleafNodeCount: 0,\n\n\t\tdepth: {\n\t\t\tmin: Infinity, max: - Infinity\n\t\t},\n\t\ttris: {\n\t\t\tmin: Infinity, max: - Infinity\n\t\t},\n\t\tsplits: [ 0, 0, 0 ],\n\t\tsurfaceAreaScore: 0,\n\t};\n\n\tbvh.traverse( ( depth, isLeaf, boundingData, offsetOrSplit, count ) => {\n\n\t\tconst l0 = boundingData[ 0 + 3 ] - boundingData[ 0 ];\n\t\tconst l1 = boundingData[ 1 + 3 ] - boundingData[ 1 ];\n\t\tconst l2 = boundingData[ 2 + 3 ] - boundingData[ 2 ];\n\n\t\tconst surfaceArea = 2 * ( l0 * l1 + l1 * l2 + l2 * l0 );\n\n\t\tresult.nodeCount ++;\n\t\tif ( isLeaf ) {\n\n\t\t\tresult.leafNodeCount ++;\n\n\t\t\tresult.depth.min = Math.min( depth, result.depth.min );\n\t\t\tresult.depth.max = Math.max( depth, result.depth.max );\n\n\t\t\tresult.tris.min = Math.min( count, result.tris.min );\n\t\t\tresult.tris.max = Math.max( count, result.tris.max );\n\n\t\t\tresult.surfaceAreaScore += surfaceArea * TRIANGLE_INTERSECT_COST * count;\n\n\t\t} else {\n\n\t\t\tresult.splits[ offsetOrSplit ] ++;\n\n\t\t\tresult.surfaceAreaScore += surfaceArea * TRAVERSAL_COST;\n\n\t\t}\n\n\t}, group );\n\n\t// If there are no leaf nodes because the tree hasn't finished generating yet.\n\tif ( result.tris.min === Infinity ) {\n\n\t\tresult.tris.min = 0;\n\t\tresult.tris.max = 0;\n\n\t}\n\n\tif ( result.depth.min === Infinity ) {\n\n\t\tresult.depth.min = 0;\n\t\tresult.depth.max = 0;\n\n\t}\n\n\treturn result;\n\n}\n\nfunction getBVHExtremes( bvh ) {\n\n\treturn bvh._roots.map( ( root, i ) => getRootExtremes( bvh, i ) );\n\n}\n\nfunction estimateMemoryInBytes( obj ) {\n\n\tconst traversed = new Set();\n\tconst stack = [ obj ];\n\tlet bytes = 0;\n\n\twhile ( stack.length ) {\n\n\t\tconst curr = stack.pop();\n\t\tif ( traversed.has( curr ) ) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\ttraversed.add( curr );\n\n\t\tfor ( let key in curr ) {\n\n\t\t\tif ( ! curr.hasOwnProperty( key ) ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tbytes += getPrimitiveSize( key );\n\n\t\t\tconst value = curr[ key ];\n\t\t\tif ( value && ( typeof value === 'object' || typeof value === 'function' ) ) {\n\n\t\t\t\tif ( isTypedArray( value ) ) {\n\n\t\t\t\t\tbytes += value.byteLength;\n\n\t\t\t\t} else if ( value instanceof ArrayBuffer ) {\n\n\t\t\t\t\tbytes += value.byteLength;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstack.push( value );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tbytes += getPrimitiveSize( value );\n\n\t\t\t}\n\n\n\t\t}\n\n\t}\n\n\treturn bytes;\n\n}\n\nfunction validateBounds( bvh ) {\n\n\tconst geometry = bvh.geometry;\n\tconst depthStack = [];\n\tconst index = geometry.index;\n\tconst position = geometry.getAttribute( 'position' );\n\tlet passes = true;\n\n\tbvh.traverse( ( depth, isLeaf, boundingData, offset, count ) => {\n\n\t\tconst info = {\n\t\t\tdepth,\n\t\t\tisLeaf,\n\t\t\tboundingData,\n\t\t\toffset,\n\t\t\tcount,\n\t\t};\n\t\tdepthStack[ depth ] = info;\n\n\t\tarrayToBox( 0, boundingData, _box1 );\n\t\tconst parent = depthStack[ depth - 1 ];\n\n\t\tif ( isLeaf ) {\n\n\t\t\t// check triangles\n\t\t\tfor ( let i = offset * 3, l = ( offset + count ) * 3; i < l; i += 3 ) {\n\n\t\t\t\tconst i0 = index.getX( i );\n\t\t\t\tconst i1 = index.getX( i + 1 );\n\t\t\t\tconst i2 = index.getX( i + 2 );\n\n\t\t\t\tlet isContained;\n\n\t\t\t\t_vec.fromBufferAttribute( position, i0 );\n\t\t\t\tisContained = _box1.containsPoint( _vec );\n\n\t\t\t\t_vec.fromBufferAttribute( position, i1 );\n\t\t\t\tisContained = isContained && _box1.containsPoint( _vec );\n\n\t\t\t\t_vec.fromBufferAttribute( position, i2 );\n\t\t\t\tisContained = isContained && _box1.containsPoint( _vec );\n\n\t\t\t\tconsole.assert( isContained, 'Leaf bounds does not fully contain triangle.' );\n\t\t\t\tpasses = passes && isContained;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parent ) {\n\n\t\t\t// check if my bounds fit in my parents\n\t\t\tarrayToBox( 0, boundingData, _box2 );\n\n\t\t\tconst isContained = _box2.containsBox( _box1 );\n\t\t\tconsole.assert( isContained, 'Parent bounds does not fully contain child.' );\n\t\t\tpasses = passes && isContained;\n\n\t\t}\n\n\t} );\n\n\treturn passes;\n\n}\n\n// Returns a simple, human readable object that represents the BVH.\nfunction getJSONStructure( bvh ) {\n\n\tconst depthStack = [];\n\n\tbvh.traverse( ( depth, isLeaf, boundingData, offset, count ) => {\n\n\t\tconst info = {\n\t\t\tbounds: arrayToBox( 0, boundingData, new Box3() ),\n\t\t};\n\n\t\tif ( isLeaf ) {\n\n\t\t\tinfo.count = count;\n\t\t\tinfo.offset = offset;\n\n\t\t} else {\n\n\t\t\tinfo.left = null;\n\t\t\tinfo.right = null;\n\n\t\t}\n\n\t\tdepthStack[ depth ] = info;\n\n\t\t// traversal hits the left then right node\n\t\tconst parent = depthStack[ depth - 1 ];\n\t\tif ( parent ) {\n\n\t\t\tif ( parent.left === null ) {\n\n\t\t\t\tparent.left = info;\n\n\t\t\t} else {\n\n\t\t\t\tparent.right = info;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\treturn depthStack[ 0 ];\n\n}\n\nexport { estimateMemoryInBytes, getBVHExtremes, validateBounds, getJSONStructure };\n","import { Ray, Matrix4, Mesh } from 'three';\nimport { convertRaycastIntersect } from './GeometryRayIntersectUtilities.js';\nimport { MeshBVH } from '../core/MeshBVH.js';\n\nconst ray = /* @__PURE__ */ new Ray();\nconst tmpInverseMatrix = /* @__PURE__ */ new Matrix4();\nconst origMeshRaycastFunc = Mesh.prototype.raycast;\n\nexport function acceleratedRaycast( raycaster, intersects ) {\n\n\tif ( this.geometry.boundsTree ) {\n\n\t\tif ( this.material === undefined ) return;\n\n\t\ttmpInverseMatrix.copy( this.matrixWorld ).invert();\n\t\tray.copy( raycaster.ray ).applyMatrix4( tmpInverseMatrix );\n\n\t\tconst bvh = this.geometry.boundsTree;\n\t\tif ( raycaster.firstHitOnly === true ) {\n\n\t\t\tconst hit = convertRaycastIntersect( bvh.raycastFirst( ray, this.material ), this, raycaster );\n\t\t\tif ( hit ) {\n\n\t\t\t\tintersects.push( hit );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst hits = bvh.raycast( ray, this.material );\n\t\t\tfor ( let i = 0, l = hits.length; i < l; i ++ ) {\n\n\t\t\t\tconst hit = convertRaycastIntersect( hits[ i ], this, raycaster );\n\t\t\t\tif ( hit ) {\n\n\t\t\t\t\tintersects.push( hit );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\torigMeshRaycastFunc.call( this, raycaster, intersects );\n\n\t}\n\n}\n\nexport function computeBoundsTree( options ) {\n\n\tthis.boundsTree = new MeshBVH( this, options );\n\treturn this.boundsTree;\n\n}\n\nexport function disposeBoundsTree() {\n\n\tthis.boundsTree = null;\n\n}\n","import {\n\tDataTexture,\n\tFloatType,\n\tIntType,\n\tUnsignedIntType,\n\tByteType,\n\tUnsignedByteType,\n\tShortType,\n\tUnsignedShortType,\n\n\tRedFormat,\n\tRGFormat,\n\tRGBAFormat,\n\n\tRedIntegerFormat,\n\tRGIntegerFormat,\n\tRGBAIntegerFormat,\n\n\tNearestFilter,\n} from 'three';\n\nfunction countToStringFormat( count ) {\n\n\tswitch ( count ) {\n\n\t\tcase 1: return 'R';\n\t\tcase 2: return 'RG';\n\t\tcase 3: return 'RGBA';\n\t\tcase 4: return 'RGBA';\n\n\t}\n\n\tthrow new Error();\n\n}\n\nfunction countToFormat( count ) {\n\n\tswitch ( count ) {\n\n\t\tcase 1: return RedFormat;\n\t\tcase 2: return RGFormat;\n\t\tcase 3: return RGBAFormat;\n\t\tcase 4: return RGBAFormat;\n\n\t}\n\n}\n\nfunction countToIntFormat( count ) {\n\n\tswitch ( count ) {\n\n\t\tcase 1: return RedIntegerFormat;\n\t\tcase 2: return RGIntegerFormat;\n\t\tcase 3: return RGBAIntegerFormat;\n\t\tcase 4: return RGBAIntegerFormat;\n\n\t}\n\n}\n\nexport class VertexAttributeTexture extends DataTexture {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis.minFilter = NearestFilter;\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.generateMipmaps = false;\n\t\tthis.overrideItemSize = null;\n\t\tthis._forcedType = null;\n\n\t}\n\n\tupdateFrom( attr ) {\n\n\t\tconst overrideItemSize = this.overrideItemSize;\n\t\tconst originalItemSize = attr.itemSize;\n\t\tconst originalCount = attr.count;\n\t\tif ( overrideItemSize !== null ) {\n\n\t\t\tif ( ( originalItemSize * originalCount ) % overrideItemSize !== 0.0 ) {\n\n\t\t\t\tthrow new Error( 'VertexAttributeTexture: overrideItemSize must divide evenly into buffer length.' );\n\n\t\t\t}\n\n\t\t\tattr.itemSize = overrideItemSize;\n\t\t\tattr.count = originalCount * originalItemSize / overrideItemSize;\n\n\t\t}\n\n\t\tconst itemSize = attr.itemSize;\n\t\tconst count = attr.count;\n\t\tconst normalized = attr.normalized;\n\t\tconst originalBufferCons = attr.array.constructor;\n\t\tconst byteCount = originalBufferCons.BYTES_PER_ELEMENT;\n\t\tlet targetType = this._forcedType;\n\t\tlet finalStride = itemSize;\n\n\t\t// derive the type of texture this should be in the shader\n\t\tif ( targetType === null ) {\n\n\t\t\tswitch ( originalBufferCons ) {\n\n\t\t\t\tcase Float32Array:\n\t\t\t\t\ttargetType = FloatType;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Uint8Array:\n\t\t\t\tcase Uint16Array:\n\t\t\t\tcase Uint32Array:\n\t\t\t\t\ttargetType = UnsignedIntType;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Int8Array:\n\t\t\t\tcase Int16Array:\n\t\t\t\tcase Int32Array:\n\t\t\t\t\ttargetType = IntType;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// get the target format to store the texture as\n\t\tlet type, format, normalizeValue, targetBufferCons;\n\t\tlet internalFormat = countToStringFormat( itemSize );\n\t\tswitch ( targetType ) {\n\n\t\t\tcase FloatType:\n\t\t\t\tnormalizeValue = 1.0;\n\t\t\t\tformat = countToFormat( itemSize );\n\n\t\t\t\tif ( normalized && byteCount === 1 ) {\n\n\t\t\t\t\ttargetBufferCons = originalBufferCons;\n\t\t\t\t\tinternalFormat += '8';\n\n\t\t\t\t\tif ( originalBufferCons === Uint8Array ) {\n\n\t\t\t\t\t\ttype = UnsignedByteType;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttype = ByteType;\n\t\t\t\t\t\tinternalFormat += '_SNORM';\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetBufferCons = Float32Array;\n\t\t\t\t\tinternalFormat += '32F';\n\t\t\t\t\ttype = FloatType;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase IntType:\n\t\t\t\tinternalFormat += byteCount * 8 + 'I';\n\t\t\t\tnormalizeValue = normalized ? Math.pow( 2, originalBufferCons.BYTES_PER_ELEMENT * 8 - 1 ) : 1.0;\n\t\t\t\tformat = countToIntFormat( itemSize );\n\n\t\t\t\tif ( byteCount === 1 ) {\n\n\t\t\t\t\ttargetBufferCons = Int8Array;\n\t\t\t\t\ttype = ByteType;\n\n\t\t\t\t} else if ( byteCount === 2 ) {\n\n\t\t\t\t\ttargetBufferCons = Int16Array;\n\t\t\t\t\ttype = ShortType;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetBufferCons = Int32Array;\n\t\t\t\t\ttype = IntType;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase UnsignedIntType:\n\t\t\t\tinternalFormat += byteCount * 8 + 'UI';\n\t\t\t\tnormalizeValue = normalized ? Math.pow( 2, originalBufferCons.BYTES_PER_ELEMENT * 8 - 1 ) : 1.0;\n\t\t\t\tformat = countToIntFormat( itemSize );\n\n\t\t\t\tif ( byteCount === 1 ) {\n\n\t\t\t\t\ttargetBufferCons = Uint8Array;\n\t\t\t\t\ttype = UnsignedByteType;\n\n\t\t\t\t} else if ( byteCount === 2 ) {\n\n\t\t\t\t\ttargetBufferCons = Uint16Array;\n\t\t\t\t\ttype = UnsignedShortType;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetBufferCons = Uint32Array;\n\t\t\t\t\ttype = UnsignedIntType;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// there will be a mismatch between format length and final length because\n\t\t// RGBFormat and RGBIntegerFormat was removed\n\t\tif ( finalStride === 3 && ( format === RGBAFormat || format === RGBAIntegerFormat ) ) {\n\n\t\t\tfinalStride = 4;\n\n\t\t}\n\n\t\t// copy the data over to the new texture array\n\t\tconst dimension = Math.ceil( Math.sqrt( count ) );\n\t\tconst length = finalStride * dimension * dimension;\n\t\tconst dataArray = new targetBufferCons( length );\n\n\t\t// temporarily set the normalized state to false since we have custom normalization logic\n\t\tconst originalNormalized = attr.normalized;\n\t\tattr.normalized = false;\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tconst ii = finalStride * i;\n\t\t\tdataArray[ ii ] = attr.getX( i ) / normalizeValue;\n\n\t\t\tif ( itemSize >= 2 ) {\n\n\t\t\t\tdataArray[ ii + 1 ] = attr.getY( i ) / normalizeValue;\n\n\t\t\t}\n\n\t\t\tif ( itemSize >= 3 ) {\n\n\t\t\t\tdataArray[ ii + 2 ] = attr.getZ( i ) / normalizeValue;\n\n\t\t\t\tif ( finalStride === 4 ) {\n\n\t\t\t\t\tdataArray[ ii + 3 ] = 1.0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( itemSize >= 4 ) {\n\n\t\t\t\tdataArray[ ii + 3 ] = attr.getW( i ) / normalizeValue;\n\n\t\t\t}\n\n\t\t}\n\n\t\tattr.normalized = originalNormalized;\n\n\t\tthis.internalFormat = internalFormat;\n\t\tthis.format = format;\n\t\tthis.type = type;\n\t\tthis.image.width = dimension;\n\t\tthis.image.height = dimension;\n\t\tthis.image.data = dataArray;\n\t\tthis.needsUpdate = true;\n\t\tthis.dispose();\n\n\t\tattr.itemSize = originalItemSize;\n\t\tattr.count = originalCount;\n\n\t}\n\n}\n\nexport class UIntVertexAttributeTexture extends VertexAttributeTexture {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis._forcedType = UnsignedIntType;\n\n\t}\n\n}\n\nexport class IntVertexAttributeTexture extends VertexAttributeTexture {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis._forcedType = IntType;\n\n\t}\n\n\n}\n\nexport class FloatVertexAttributeTexture extends VertexAttributeTexture {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis._forcedType = FloatType;\n\n\t}\n\n}\n","import {\n\tDataTexture,\n\tFloatType,\n\tUnsignedIntType,\n\tRGBAFormat,\n\tRGIntegerFormat,\n\tNearestFilter,\n} from 'three';\nimport {\n\tFloatVertexAttributeTexture,\n\tUIntVertexAttributeTexture,\n} from './VertexAttributeTexture.js';\nimport { BYTES_PER_NODE } from '../core/Constants.js';\nimport {\n\tBOUNDING_DATA_INDEX,\n\tCOUNT,\n\tIS_LEAF,\n\tRIGHT_NODE,\n\tOFFSET,\n\tSPLIT_AXIS,\n} from '../core/nodeBufferFunctions.js';\n\nfunction bvhToTextures( bvh, boundsTexture, contentsTexture ) {\n\n\tconst roots = bvh._roots;\n\n\tif ( roots.length !== 1 ) {\n\n\t\tthrow new Error( 'MeshBVHUniformStruct: Multi-root BVHs not supported.' );\n\n\t}\n\n\tconst root = roots[ 0 ];\n\tconst uint16Array = new Uint16Array( root );\n\tconst uint32Array = new Uint32Array( root );\n\tconst float32Array = new Float32Array( root );\n\n\t// Both bounds need two elements per node so compute the height so it's twice as long as\n\t// the width so we can expand the row by two and still have a square texture\n\tconst nodeCount = root.byteLength / BYTES_PER_NODE;\n\tconst boundsDimension = 2 * Math.ceil( Math.sqrt( nodeCount / 2 ) );\n\tconst boundsArray = new Float32Array( 4 * boundsDimension * boundsDimension );\n\n\tconst contentsDimension = Math.ceil( Math.sqrt( nodeCount ) );\n\tconst contentsArray = new Uint32Array( 2 * contentsDimension * contentsDimension );\n\n\tfor ( let i = 0; i < nodeCount; i ++ ) {\n\n\t\tconst nodeIndex32 = i * BYTES_PER_NODE / 4;\n\t\tconst nodeIndex16 = nodeIndex32 * 2;\n\t\tconst boundsIndex = BOUNDING_DATA_INDEX( nodeIndex32 );\n\t\tfor ( let b = 0; b < 3; b ++ ) {\n\n\t\t\tboundsArray[ 8 * i + 0 + b ] = float32Array[ boundsIndex + 0 + b ];\n\t\t\tboundsArray[ 8 * i + 4 + b ] = float32Array[ boundsIndex + 3 + b ];\n\n\t\t}\n\n\t\tif ( IS_LEAF( nodeIndex16, uint16Array ) ) {\n\n\t\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\t\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\n\t\t\tconst mergedLeafCount = 0xffff0000 | count;\n\t\t\tcontentsArray[ i * 2 + 0 ] = mergedLeafCount;\n\t\t\tcontentsArray[ i * 2 + 1 ] = offset;\n\n\t\t} else {\n\n\t\t\tconst rightIndex = 4 * RIGHT_NODE( nodeIndex32, uint32Array ) / BYTES_PER_NODE;\n\t\t\tconst splitAxis = SPLIT_AXIS( nodeIndex32, uint32Array );\n\n\t\t\tcontentsArray[ i * 2 + 0 ] = splitAxis;\n\t\t\tcontentsArray[ i * 2 + 1 ] = rightIndex;\n\n\t\t}\n\n\t}\n\n\tboundsTexture.image.data = boundsArray;\n\tboundsTexture.image.width = boundsDimension;\n\tboundsTexture.image.height = boundsDimension;\n\tboundsTexture.format = RGBAFormat;\n\tboundsTexture.type = FloatType;\n\tboundsTexture.internalFormat = 'RGBA32F';\n\tboundsTexture.minFilter = NearestFilter;\n\tboundsTexture.magFilter = NearestFilter;\n\tboundsTexture.generateMipmaps = false;\n\tboundsTexture.needsUpdate = true;\n\tboundsTexture.dispose();\n\n\tcontentsTexture.image.data = contentsArray;\n\tcontentsTexture.image.width = contentsDimension;\n\tcontentsTexture.image.height = contentsDimension;\n\tcontentsTexture.format = RGIntegerFormat;\n\tcontentsTexture.type = UnsignedIntType;\n\tcontentsTexture.internalFormat = 'RG32UI';\n\tcontentsTexture.minFilter = NearestFilter;\n\tcontentsTexture.magFilter = NearestFilter;\n\tcontentsTexture.generateMipmaps = false;\n\tcontentsTexture.needsUpdate = true;\n\tcontentsTexture.dispose();\n\n}\n\nexport class MeshBVHUniformStruct {\n\n\tconstructor() {\n\n\t\tthis.autoDispose = true;\n\t\tthis.index = new UIntVertexAttributeTexture();\n\t\tthis.position = new FloatVertexAttributeTexture();\n\t\tthis.bvhBounds = new DataTexture();\n\t\tthis.bvhContents = new DataTexture();\n\n\t\tthis.index.overrideItemSize = 3;\n\n\t}\n\n\tupdateFrom( bvh ) {\n\n\t\tconst { geometry } = bvh;\n\n\t\tbvhToTextures( bvh, this.bvhBounds, this.bvhContents );\n\n\t\tthis.index.updateFrom( geometry.index );\n\t\tthis.position.updateFrom( geometry.attributes.position );\n\n\t}\n\n\tdispose() {\n\n\t\tconst { index, position, bvhBounds, bvhContents } = this;\n\n\t\tif ( index ) index.dispose();\n\t\tif ( position ) position.dispose();\n\t\tif ( bvhBounds ) bvhBounds.dispose();\n\t\tif ( bvhContents ) bvhContents.dispose();\n\n\t}\n\n}\n","// Note that a struct cannot be used for the hit record including faceIndices, faceNormal, barycoord,\n// side, and dist because on some mobile GPUS (such as Adreno) numbers are afforded less precision specifically\n// when in a struct leading to inaccurate hit results. See KhronosGroup/WebGL#3351 for more details.\nexport const shaderStructs = /* glsl */`\n#ifndef TRI_INTERSECT_EPSILON\n#define TRI_INTERSECT_EPSILON 1e-5\n#endif\n\n#ifndef INFINITY\n#define INFINITY 1e20\n#endif\n\nstruct BVH {\n\n\tusampler2D index;\n\tsampler2D position;\n\n\tsampler2D bvhBounds;\n\tusampler2D bvhContents;\n\n};\n`;\n\nexport const shaderIntersectFunction = /* glsl */`\n\n// Utilities\nuvec4 uTexelFetch1D( usampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nivec4 iTexelFetch1D( isampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nvec4 texelFetch1D( sampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nvec4 textureSampleBarycoord( sampler2D tex, vec3 barycoord, uvec3 faceIndices ) {\n\n\treturn\n\t\tbarycoord.x * texelFetch1D( tex, faceIndices.x ) +\n\t\tbarycoord.y * texelFetch1D( tex, faceIndices.y ) +\n\t\tbarycoord.z * texelFetch1D( tex, faceIndices.z );\n\n}\n\nvoid ndcToCameraRay(\n\tvec2 coord, mat4 cameraWorld, mat4 invProjectionMatrix,\n\tout vec3 rayOrigin, out vec3 rayDirection\n) {\n\n\t// get camera look direction and near plane for camera clipping\n\tvec4 lookDirection = cameraWorld * vec4( 0.0, 0.0, - 1.0, 0.0 );\n\tvec4 nearVector = invProjectionMatrix * vec4( 0.0, 0.0, - 1.0, 1.0 );\n\tfloat near = abs( nearVector.z / nearVector.w );\n\n\t// get the camera direction and position from camera matrices\n\tvec4 origin = cameraWorld * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec4 direction = invProjectionMatrix * vec4( coord, 0.5, 1.0 );\n\tdirection /= direction.w;\n\tdirection = cameraWorld * direction - origin;\n\n\t// slide the origin along the ray until it sits at the near clip plane position\n\torigin.xyz += direction.xyz * near / dot( direction, lookDirection );\n\n\trayOrigin = origin.xyz;\n\trayDirection = direction.xyz;\n\n}\n\n// Raycasting\nfloat intersectsBounds( vec3 rayOrigin, vec3 rayDirection, vec3 boundsMin, vec3 boundsMax ) {\n\n\t// https://www.reddit.com/r/opengl/comments/8ntzz5/fast_glsl_ray_box_intersection/\n\t// https://tavianator.com/2011/ray_box.html\n\tvec3 invDir = 1.0 / rayDirection;\n\n\t// find intersection distances for each plane\n\tvec3 tMinPlane = invDir * ( boundsMin - rayOrigin );\n\tvec3 tMaxPlane = invDir * ( boundsMax - rayOrigin );\n\n\t// get the min and max distances from each intersection\n\tvec3 tMinHit = min( tMaxPlane, tMinPlane );\n\tvec3 tMaxHit = max( tMaxPlane, tMinPlane );\n\n\t// get the furthest hit distance\n\tvec2 t = max( tMinHit.xx, tMinHit.yz );\n\tfloat t0 = max( t.x, t.y );\n\n\t// get the minimum hit distance\n\tt = min( tMaxHit.xx, tMaxHit.yz );\n\tfloat t1 = min( t.x, t.y );\n\n\t// set distance to 0.0 if the ray starts inside the box\n\tfloat dist = max( t0, 0.0 );\n\n\treturn t1 >= dist ? dist : INFINITY;\n\n}\n\nbool intersectsTriangle(\n\tvec3 rayOrigin, vec3 rayDirection, vec3 a, vec3 b, vec3 c,\n\tout vec3 barycoord, out vec3 norm, out float dist, out float side\n) {\n\n\t// https://stackoverflow.com/questions/42740765/intersection-between-line-and-triangle-in-3d\n\tvec3 edge1 = b - a;\n\tvec3 edge2 = c - a;\n\tnorm = cross( edge1, edge2 );\n\n\tfloat det = - dot( rayDirection, norm );\n\tfloat invdet = 1.0 / det;\n\n\tvec3 AO = rayOrigin - a;\n\tvec3 DAO = cross( AO, rayDirection );\n\n\tvec4 uvt;\n\tuvt.x = dot( edge2, DAO ) * invdet;\n\tuvt.y = - dot( edge1, DAO ) * invdet;\n\tuvt.z = dot( AO, norm ) * invdet;\n\tuvt.w = 1.0 - uvt.x - uvt.y;\n\n\t// set the hit information\n\tbarycoord = uvt.wxy; // arranged in A, B, C order\n\tdist = uvt.z;\n\tside = sign( det );\n\tnorm = side * normalize( norm );\n\n\t// add an epsilon to avoid misses between triangles\n\tuvt += vec4( TRI_INTERSECT_EPSILON );\n\n\treturn all( greaterThanEqual( uvt, vec4( 0.0 ) ) );\n\n}\n\nbool intersectTriangles(\n\tBVH bvh, vec3 rayOrigin, vec3 rayDirection, uint offset, uint count,\n\tinout float minDistance,\n\n\t// output variables\n\tout uvec4 faceIndices, out vec3 faceNormal, out vec3 barycoord,\n\tout float side, out float dist\n) {\n\n\tbool found = false;\n\tvec3 localBarycoord, localNormal;\n\tfloat localDist, localSide;\n\tfor ( uint i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\tuvec3 indices = uTexelFetch1D( bvh.index, i ).xyz;\n\t\tvec3 a = texelFetch1D( bvh.position, indices.x ).rgb;\n\t\tvec3 b = texelFetch1D( bvh.position, indices.y ).rgb;\n\t\tvec3 c = texelFetch1D( bvh.position, indices.z ).rgb;\n\n\t\tif (\n\t\t\tintersectsTriangle( rayOrigin, rayDirection, a, b, c, localBarycoord, localNormal, localDist, localSide )\n\t\t\t&& localDist < minDistance\n\t\t) {\n\n\t\t\tfound = true;\n\t\t\tminDistance = localDist;\n\n\t\t\tfaceIndices = uvec4( indices.xyz, i );\n\t\t\tfaceNormal = localNormal;\n\n\t\t\tside = localSide;\n\t\t\tbarycoord = localBarycoord;\n\t\t\tdist = localDist;\n\n\t\t}\n\n\t}\n\n\treturn found;\n\n}\n\nfloat intersectsBVHNodeBounds( vec3 rayOrigin, vec3 rayDirection, BVH bvh, uint currNodeIndex ) {\n\n\tvec3 boundsMin = texelFetch1D( bvh.bvhBounds, currNodeIndex * 2u + 0u ).xyz;\n\tvec3 boundsMax = texelFetch1D( bvh.bvhBounds, currNodeIndex * 2u + 1u ).xyz;\n\treturn intersectsBounds( rayOrigin, rayDirection, boundsMin, boundsMax );\n\n}\n\nbool bvhIntersectFirstHit(\n\tBVH bvh, vec3 rayOrigin, vec3 rayDirection,\n\n\t// output variables\n\tout uvec4 faceIndices, out vec3 faceNormal, out vec3 barycoord,\n\tout float side, out float dist\n) {\n\n\t// stack needs to be twice as long as the deepest tree we expect because\n\t// we push both the left and right child onto the stack every traversal\n\tint ptr = 0;\n\tuint stack[ 60 ];\n\tstack[ 0 ] = 0u;\n\n\tfloat triangleDistance = 1e20;\n\tbool found = false;\n\twhile ( ptr > - 1 && ptr < 60 ) {\n\n\t\tuint currNodeIndex = stack[ ptr ];\n\t\tptr --;\n\n\t\t// check if we intersect the current bounds\n\t\tfloat boundsHitDistance = intersectsBVHNodeBounds( rayOrigin, rayDirection, bvh, currNodeIndex );\n\t\tif ( boundsHitDistance == INFINITY || boundsHitDistance > triangleDistance ) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tuvec2 boundsInfo = uTexelFetch1D( bvh.bvhContents, currNodeIndex ).xy;\n\t\tbool isLeaf = bool( boundsInfo.x & 0xffff0000u );\n\n\t\tif ( isLeaf ) {\n\n\t\t\tuint count = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint offset = boundsInfo.y;\n\n\t\t\tfound = intersectTriangles(\n\t\t\t\tbvh, rayOrigin, rayDirection, offset, count, triangleDistance,\n\t\t\t\tfaceIndices, faceNormal, barycoord, side, dist\n\t\t\t) || found;\n\n\t\t} else {\n\n\t\t\tuint leftIndex = currNodeIndex + 1u;\n\t\t\tuint splitAxis = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint rightIndex = boundsInfo.y;\n\n\t\t\tbool leftToRight = rayDirection[ splitAxis ] >= 0.0;\n\t\t\tuint c1 = leftToRight ? leftIndex : rightIndex;\n\t\t\tuint c2 = leftToRight ? rightIndex : leftIndex;\n\n\t\t\t// set c2 in the stack so we traverse it later. We need to keep track of a pointer in\n\t\t\t// the stack while we traverse. The second pointer added is the one that will be\n\t\t\t// traversed first\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c2;\n\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c1;\n\n\t\t}\n\n\t}\n\n\treturn found;\n\n}\n`;\n\n// Distance to Point\nexport const shaderDistanceFunction = /* glsl */`\n\nfloat dot2( in vec3 v ) {\n\n\treturn dot( v, v );\n\n}\n\n\n// https://www.shadertoy.com/view/ttfGWl\nvec3 closestPointToTriangle( vec3 p, vec3 v0, vec3 v1, vec3 v2, out vec3 barycoord ) {\n\n    vec3 v10 = v1 - v0;\n    vec3 v21 = v2 - v1;\n    vec3 v02 = v0 - v2;\n\n\tvec3 p0 = p - v0;\n\tvec3 p1 = p - v1;\n\tvec3 p2 = p - v2;\n\n    vec3 nor = cross( v10, v02 );\n\n    // method 2, in barycentric space\n    vec3  q = cross( nor, p0 );\n    float d = 1.0 / dot2( nor );\n    float u = d * dot( q, v02 );\n    float v = d * dot( q, v10 );\n    float w = 1.0 - u - v;\n\n\tif( u < 0.0 ) {\n\n\t\tw = clamp( dot( p2, v02 ) / dot2( v02 ), 0.0, 1.0 );\n\t\tu = 0.0;\n\t\tv = 1.0 - w;\n\n\t} else if( v < 0.0 ) {\n\n\t\tu = clamp( dot( p0, v10 ) / dot2( v10 ), 0.0, 1.0 );\n\t\tv = 0.0;\n\t\tw = 1.0 - u;\n\n\t} else if( w < 0.0 ) {\n\n\t\tv = clamp( dot( p1, v21 ) / dot2( v21 ), 0.0, 1.0 );\n\t\tw = 0.0;\n\t\tu = 1.0-v;\n\n\t}\n\n\tbarycoord = vec3( u, v, w );\n    return u * v1 + v * v2 + w * v0;\n\n}\n\nfloat distanceToTriangles(\n\tBVH bvh, vec3 point, uint offset, uint count, float closestDistanceSquared,\n\n\tout uvec4 faceIndices, out vec3 faceNormal, out vec3 barycoord, out float side, out vec3 outPoint\n) {\n\n\tbool found = false;\n\tuvec3 localIndices;\n\tvec3 localBarycoord;\n\tvec3 localNormal;\n\tfor ( uint i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\tuvec3 indices = uTexelFetch1D( bvh.index, i ).xyz;\n\t\tvec3 a = texelFetch1D( bvh.position, indices.x ).rgb;\n\t\tvec3 b = texelFetch1D( bvh.position, indices.y ).rgb;\n\t\tvec3 c = texelFetch1D( bvh.position, indices.z ).rgb;\n\n\t\t// get the closest point and barycoord\n\t\tvec3 closestPoint = closestPointToTriangle( point, a, b, c, localBarycoord );\n\t\tvec3 delta = point - closestPoint;\n\t\tfloat sqDist = dot2( delta );\n\t\tif ( sqDist < closestDistanceSquared ) {\n\n\t\t\t// set the output results\n\t\t\tclosestDistanceSquared = sqDist;\n\t\t\tfaceIndices = uvec4( indices.xyz, i );\n\t\t\tfaceNormal = normalize( cross( a - b, b - c ) );\n\t\t\tbarycoord = localBarycoord;\n\t\t\toutPoint = closestPoint;\n\t\t\tside = sign( dot( faceNormal, delta ) );\n\n\t\t}\n\n\t}\n\n\treturn closestDistanceSquared;\n\n}\n\nfloat distanceSqToBounds( vec3 point, vec3 boundsMin, vec3 boundsMax ) {\n\n\tvec3 clampedPoint = clamp( point, boundsMin, boundsMax );\n\tvec3 delta = point - clampedPoint;\n\treturn dot( delta, delta );\n\n}\n\nfloat distanceSqToBVHNodeBoundsPoint( vec3 point, BVH bvh, uint currNodeIndex ) {\n\n\tvec3 boundsMin = texelFetch1D( bvh.bvhBounds, currNodeIndex * 2u + 0u ).xyz;\n\tvec3 boundsMax = texelFetch1D( bvh.bvhBounds, currNodeIndex * 2u + 1u ).xyz;\n\treturn distanceSqToBounds( point, boundsMin, boundsMax );\n\n}\n\nfloat bvhClosestPointToPoint(\n\tBVH bvh, vec3 point,\n\n\t// output variables\n\tout uvec4 faceIndices, out vec3 faceNormal, out vec3 barycoord,\n\tout float side, out vec3 outPoint\n ) {\n\n\t// stack needs to be twice as long as the deepest tree we expect because\n\t// we push both the left and right child onto the stack every traversal\n\tint ptr = 0;\n\tuint stack[ 60 ];\n\tstack[ 0 ] = 0u;\n\tfloat closestDistanceSquared = pow( 100000.0, 2.0 );\n\tbool found = false;\n\twhile ( ptr > - 1 && ptr < 60 ) {\n\n\t\tuint currNodeIndex = stack[ ptr ];\n\t\tptr --;\n\n\t\t// check if we intersect the current bounds\n\t\tfloat boundsHitDistance = distanceSqToBVHNodeBoundsPoint( point, bvh, currNodeIndex );\n\t\tif ( boundsHitDistance > closestDistanceSquared ) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tuvec2 boundsInfo = uTexelFetch1D( bvh.bvhContents, currNodeIndex ).xy;\n\t\tbool isLeaf = bool( boundsInfo.x & 0xffff0000u );\n\t\tif ( isLeaf ) {\n\n\t\t\tuint count = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint offset = boundsInfo.y;\n\t\t\tclosestDistanceSquared = distanceToTriangles(\n\t\t\t\tbvh, point, offset, count, closestDistanceSquared,\n\n\t\t\t\t// outputs\n\t\t\t\tfaceIndices, faceNormal, barycoord, side, outPoint\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tuint leftIndex = currNodeIndex + 1u;\n\t\t\tuint splitAxis = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint rightIndex = boundsInfo.y;\n\t\t\tbool leftToRight = distanceSqToBVHNodeBoundsPoint( point, bvh, leftIndex ) < distanceSqToBVHNodeBoundsPoint( point, bvh, rightIndex );//rayDirection[ splitAxis ] >= 0.0;\n\t\t\tuint c1 = leftToRight ? leftIndex : rightIndex;\n\t\t\tuint c2 = leftToRight ? rightIndex : leftIndex;\n\n\t\t\t// set c2 in the stack so we traverse it later. We need to keep track of a pointer in\n\t\t\t// the stack while we traverse. The second pointer added is the one that will be\n\t\t\t// traversed first\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c2;\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c1;\n\n\t\t}\n\n\t}\n\n\treturn sqrt( closestDistanceSquared );\n\n}\n`;\n","import { BufferAttribute, BufferGeometry, Vector3, Vector4, Matrix4, Matrix3 } from 'three';\n\nconst _positionVector = /*@__PURE__*/ new Vector3();\nconst _normalVector = /*@__PURE__*/ new Vector3();\nconst _tangentVector = /*@__PURE__*/ new Vector3();\nconst _tangentVector4 = /*@__PURE__*/ new Vector4();\n\nconst _morphVector = /*@__PURE__*/ new Vector3();\nconst _temp = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\n\n// Confirms that the two provided attributes are compatible\nfunction validateAttributes( attr1, attr2 ) {\n\n\tif ( ! attr1 && ! attr2 ) {\n\n\t\treturn;\n\n\t}\n\n\tconst sameCount = attr1.count === attr2.count;\n\tconst sameNormalized = attr1.normalized === attr2.normalized;\n\tconst sameType = attr1.array.constructor === attr2.array.constructor;\n\tconst sameItemSize = attr1.itemSize === attr2.itemSize;\n\n\tif ( ! sameCount || ! sameNormalized || ! sameType || ! sameItemSize ) {\n\n\t\tthrow new Error();\n\n\t}\n\n}\n\n// Clones the given attribute with a new compatible buffer attribute but no data\nfunction createAttributeClone( attr, countOverride = null ) {\n\n\tconst cons = attr.array.constructor;\n\tconst normalized = attr.normalized;\n\tconst itemSize = attr.itemSize;\n\tconst count = countOverride === null ? attr.count : countOverride;\n\n\treturn new BufferAttribute( new cons( itemSize * count ), itemSize, normalized );\n\n}\n\n// target offset is the number of elements in the target buffer stride to skip before copying the\n// attributes contents in to.\nfunction copyAttributeContents( attr, target, targetOffset = 0 ) {\n\n\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\tconst itemSize = attr.itemSize;\n\t\tfor ( let i = 0, l = attr.count; i < l; i ++ ) {\n\n\t\t\tconst io = i + targetOffset;\n\t\t\ttarget.setX( io, attr.getX( i ) );\n\t\t\tif ( itemSize >= 2 ) target.setY( io, attr.getY( i ) );\n\t\t\tif ( itemSize >= 3 ) target.setZ( io, attr.getZ( i ) );\n\t\t\tif ( itemSize >= 4 ) target.setW( io, attr.getW( i ) );\n\n\t\t}\n\n\t} else {\n\n\t\tconst array = target.array;\n\t\tconst cons = array.constructor;\n\t\tconst byteOffset = array.BYTES_PER_ELEMENT * attr.itemSize * targetOffset;\n\t\tconst temp = new cons( array.buffer, byteOffset, attr.array.length );\n\t\ttemp.set( attr.array );\n\n\t}\n\n}\n\n// Adds the \"matrix\" multiplied by \"scale\" to \"target\"\nfunction addScaledMatrix( target, matrix, scale ) {\n\n\tconst targetArray = target.elements;\n\tconst matrixArray = matrix.elements;\n\tfor ( let i = 0, l = matrixArray.length; i < l; i ++ ) {\n\n\t\ttargetArray[ i ] += matrixArray[ i ] * scale;\n\n\t}\n\n}\n\n// A version of \"SkinnedMesh.boneTransform\" for normals\nfunction boneNormalTransform( mesh, index, target ) {\n\n\tconst skeleton = mesh.skeleton;\n\tconst geometry = mesh.geometry;\n\tconst bones = skeleton.bones;\n\tconst boneInverses = skeleton.boneInverses;\n\n\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t_matrix.elements.fill( 0 );\n\n\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\tif ( weight !== 0 ) {\n\n\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\t\t\t_boneMatrix.multiplyMatrices( bones[ boneIndex ].matrixWorld, boneInverses[ boneIndex ] );\n\n\t\t\taddScaledMatrix( _matrix, _boneMatrix, weight );\n\n\t\t}\n\n\t}\n\n\t_matrix.multiply( mesh.bindMatrix ).premultiply( mesh.bindMatrixInverse );\n\ttarget.transformDirection( _matrix );\n\n\treturn target;\n\n}\n\n// Applies the morph target data to the target vector\nfunction applyMorphTarget( morphData, morphInfluences, morphTargetsRelative, i, target ) {\n\n\t_morphVector.set( 0, 0, 0 );\n\tfor ( let j = 0, jl = morphData.length; j < jl; j ++ ) {\n\n\t\tconst influence = morphInfluences[ j ];\n\t\tconst morphAttribute = morphData[ j ];\n\n\t\tif ( influence === 0 ) continue;\n\n\t\t_temp.fromBufferAttribute( morphAttribute, i );\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\t_morphVector.addScaledVector( _temp, influence );\n\n\t\t} else {\n\n\t\t\t_morphVector.addScaledVector( _temp.sub( target ), influence );\n\n\t\t}\n\n\t}\n\n\ttarget.add( _morphVector );\n\n}\n\n// Modified version of BufferGeometryUtils.mergeBufferGeometries that ignores morph targets and updates a attributes in plac\nfunction mergeBufferGeometries( geometries, options = { useGroups: false, updateIndex: false }, targetGeometry = new BufferGeometry() ) {\n\n\tconst isIndexed = geometries[ 0 ].index !== null;\n\tconst { useGroups, updateIndex } = options;\n\n\tconst attributesUsed = new Set( Object.keys( geometries[ 0 ].attributes ) );\n\tconst attributes = {};\n\n\tlet offset = 0;\n\n\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\tconst geometry = geometries[ i ];\n\t\tlet attributesCount = 0;\n\n\t\t// ensure that all geometries are indexed, or none\n\t\tif ( isIndexed !== ( geometry.index !== null ) ) {\n\n\t\t\tthrow new Error( 'StaticGeometryGenerator: All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.' );\n\n\t\t}\n\n\t\t// gather attributes, exit early if they're different\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tif ( ! attributesUsed.has( name ) ) {\n\n\t\t\t\tthrow new Error( 'StaticGeometryGenerator: All geometries must have compatible attributes; make sure \"' + name + '\" attribute exists among all geometries, or in none of them.' );\n\n\t\t\t}\n\n\t\t\tif ( attributes[ name ] === undefined ) {\n\n\t\t\t\tattributes[ name ] = [];\n\n\t\t\t}\n\n\t\t\tattributes[ name ].push( geometry.attributes[ name ] );\n\t\t\tattributesCount ++;\n\n\t\t}\n\n\t\t// ensure geometries have the same number of attributes\n\t\tif ( attributesCount !== attributesUsed.size ) {\n\n\t\t\tthrow new Error( 'StaticGeometryGenerator: Make sure all geometries have the same number of attributes.' );\n\n\t\t}\n\n\t\tif ( useGroups ) {\n\n\t\t\tlet count;\n\t\t\tif ( isIndexed ) {\n\n\t\t\t\tcount = geometry.index.count;\n\n\t\t\t} else if ( geometry.attributes.position !== undefined ) {\n\n\t\t\t\tcount = geometry.attributes.position.count;\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'StaticGeometryGenerator: The geometry must have either an index or a position attribute' );\n\n\t\t\t}\n\n\t\t\ttargetGeometry.addGroup( offset, count, i );\n\t\t\toffset += count;\n\n\t\t}\n\n\t}\n\n\t// merge indices\n\tif ( isIndexed ) {\n\n\t\tlet forceUpateIndex = false;\n\t\tif ( ! targetGeometry.index ) {\n\n\t\t\tlet indexCount = 0;\n\t\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\t\t\tindexCount += geometries[ i ].index.count;\n\n\t\t\t}\n\n\t\t\ttargetGeometry.setIndex( new BufferAttribute( new Uint32Array( indexCount ), 1, false ) );\n\t\t\tforceUpateIndex = true;\n\n\t\t}\n\n\t\tif ( updateIndex || forceUpateIndex ) {\n\n\t\t\tconst targetIndex = targetGeometry.index;\n\t\t\tlet targetOffset = 0;\n\t\t\tlet indexOffset = 0;\n\t\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\t\t\tconst geometry = geometries[ i ];\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tfor ( let j = 0; j < index.count; ++ j ) {\n\n\t\t\t\t\ttargetIndex.setX( targetOffset, index.getX( j ) + indexOffset );\n\t\t\t\t\ttargetOffset ++;\n\n\t\t\t\t}\n\n\t\t\t\tindexOffset += geometry.attributes.position.count;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// merge attributes\n\tfor ( const name in attributes ) {\n\n\t\tconst attrList = attributes[ name ];\n\t\tif ( ! ( name in targetGeometry.attributes ) ) {\n\n\t\t\tlet count = 0;\n\t\t\tfor ( const key in attrList ) {\n\n\t\t\t\tcount += attrList[ key ].count;\n\n\t\t\t}\n\n\t\t\ttargetGeometry.setAttribute( name, createAttributeClone( attributes[ name ][ 0 ], count ) );\n\n\t\t}\n\n\t\tconst targetAttribute = targetGeometry.attributes[ name ];\n\t\tlet offset = 0;\n\t\tfor ( const key in attrList ) {\n\n\t\t\tconst attr = attrList[ key ];\n\t\t\tcopyAttributeContents( attr, targetAttribute, offset );\n\t\t\toffset += attr.count;\n\n\t\t}\n\n\t}\n\n\treturn targetGeometry;\n\n}\n\nexport class StaticGeometryGenerator {\n\n\tconstructor( meshes ) {\n\n\t\tif ( ! Array.isArray( meshes ) ) {\n\n\t\t\tmeshes = [ meshes ];\n\n\t\t}\n\n\t\tconst finalMeshes = [];\n\t\tmeshes.forEach( object => {\n\n\t\t\tobject.traverseVisible( c => {\n\n\t\t\t\tif ( c.isMesh ) {\n\n\t\t\t\t\tfinalMeshes.push( c );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t\tthis.meshes = finalMeshes;\n\t\tthis.useGroups = true;\n\t\tthis.applyWorldTransforms = true;\n\t\tthis.attributes = [ 'position', 'normal', 'color', 'tangent', 'uv', 'uv2' ];\n\t\tthis._intermediateGeometry = new Array( finalMeshes.length ).fill().map( () => new BufferGeometry() );\n\n\t}\n\n\tgetMaterials() {\n\n\t\tconst materials = [];\n\t\tthis.meshes.forEach( mesh => {\n\n\t\t\tif ( Array.isArray( mesh.material ) ) {\n\n\t\t\t\tmaterials.push( ...mesh.material );\n\n\t\t\t} else {\n\n\t\t\t\tmaterials.push( mesh.material );\n\n\t\t\t}\n\n\t\t} );\n\t\treturn materials;\n\n\t}\n\n\tgenerate( targetGeometry = new BufferGeometry() ) {\n\n\t\tconst { meshes, useGroups, _intermediateGeometry } = this;\n\t\tfor ( let i = 0, l = meshes.length; i < l; i ++ ) {\n\n\t\t\tconst mesh = meshes[ i ];\n\t\t\tconst geom = _intermediateGeometry[ i ];\n\t\t\tthis._convertToStaticGeometry( mesh, geom );\n\n\t\t}\n\n\t\tmergeBufferGeometries( _intermediateGeometry, { useGroups }, targetGeometry );\n\t\tfor ( const key in targetGeometry.attributes ) {\n\n\t\t\ttargetGeometry.attributes[ key ].needsUpdate = true;\n\n\t\t}\n\n\t\treturn targetGeometry;\n\n\t}\n\n\t_convertToStaticGeometry( mesh, targetGeometry = new BufferGeometry() ) {\n\n\t\tconst geometry = mesh.geometry;\n\t\tconst applyWorldTransforms = this.applyWorldTransforms;\n\t\tconst includeNormal = this.attributes.includes( 'normal' );\n\t\tconst includeTangent = this.attributes.includes( 'tangent' );\n\t\tconst attributes = geometry.attributes;\n\t\tconst targetAttributes = targetGeometry.attributes;\n\n\t\t// initialize the attributes if they don't exist\n\t\tif ( ! targetGeometry.index ) {\n\n\t\t\ttargetGeometry.index = geometry.index;\n\n\t\t}\n\n\t\tif ( ! targetAttributes.position ) {\n\n\t\t\ttargetGeometry.setAttribute( 'position', createAttributeClone( attributes.position ) );\n\n\t\t}\n\n\t\tif ( includeNormal && ! targetAttributes.normal && attributes.normal ) {\n\n\t\t\ttargetGeometry.setAttribute( 'normal', createAttributeClone( attributes.normal ) );\n\n\t\t}\n\n\t\tif ( includeTangent && ! targetAttributes.tangent && attributes.tangent ) {\n\n\t\t\ttargetGeometry.setAttribute( 'tangent', createAttributeClone( attributes.tangent ) );\n\n\t\t}\n\n\t\t// ensure the attributes are consistent\n\t\tvalidateAttributes( geometry.index, targetGeometry.index );\n\t\tvalidateAttributes( attributes.position, targetAttributes.position );\n\n\t\tif ( includeNormal ) {\n\n\t\t\tvalidateAttributes( attributes.normal, targetAttributes.normal );\n\n\t\t}\n\n\t\tif ( includeTangent ) {\n\n\t\t\tvalidateAttributes( attributes.tangent, targetAttributes.tangent );\n\n\t\t}\n\n\t\t// generate transformed vertex attribute data\n\t\tconst position = attributes.position;\n\t\tconst normal = includeNormal ? attributes.normal : null;\n\t\tconst tangent = includeTangent ? attributes.tangent : null;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphNormal = geometry.morphAttributes.normal;\n\t\tconst morphTangent = geometry.morphAttributes.tangent;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\tconst morphInfluences = mesh.morphTargetInfluences;\n\t\tconst normalMatrix = new Matrix3();\n\t\tnormalMatrix.getNormalMatrix( mesh.matrixWorld );\n\n\t\tfor ( let i = 0, l = attributes.position.count; i < l; i ++ ) {\n\n\t\t\t_positionVector.fromBufferAttribute( position, i );\n\t\t\tif ( normal ) {\n\n\t\t\t\t_normalVector.fromBufferAttribute( normal, i );\n\n\t\t\t}\n\n\t\t\tif ( tangent ) {\n\n\t\t\t\t_tangentVector4.fromBufferAttribute( tangent, i );\n\t\t\t\t_tangentVector.fromBufferAttribute( tangent, i );\n\n\t\t\t}\n\n\t\t\t// apply morph target transform\n\t\t\tif ( morphInfluences ) {\n\n\t\t\t\tif ( morphPosition ) {\n\n\t\t\t\t\tapplyMorphTarget( morphPosition, morphInfluences, morphTargetsRelative, i, _positionVector );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormal ) {\n\n\t\t\t\t\tapplyMorphTarget( morphNormal, morphInfluences, morphTargetsRelative, i, _normalVector );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphTangent ) {\n\n\t\t\t\t\tapplyMorphTarget( morphTangent, morphInfluences, morphTargetsRelative, i, _tangentVector );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// apply bone transform\n\t\t\tif ( mesh.isSkinnedMesh ) {\n\n\t\t\t\tmesh.boneTransform( i, _positionVector );\n\t\t\t\tif ( normal ) {\n\n\t\t\t\t\tboneNormalTransform( mesh, i, _normalVector );\n\n\t\t\t\t}\n\n\t\t\t\tif ( tangent ) {\n\n\t\t\t\t\tboneNormalTransform( mesh, i, _tangentVector );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// update the vectors of the attributes\n\t\t\tif ( applyWorldTransforms ) {\n\n\t\t\t\t_positionVector.applyMatrix4( mesh.matrixWorld );\n\n\t\t\t}\n\n\t\t\ttargetAttributes.position.setXYZ( i, _positionVector.x, _positionVector.y, _positionVector.z );\n\n\t\t\tif ( normal ) {\n\n\t\t\t\tif ( applyWorldTransforms ) {\n\n\t\t\t\t\t_normalVector.applyNormalMatrix( normalMatrix );\n\n\t\t\t\t}\n\n\t\t\t\ttargetAttributes.normal.setXYZ( i, _normalVector.x, _normalVector.y, _normalVector.z );\n\n\t\t\t}\n\n\t\t\tif ( tangent ) {\n\n\t\t\t\tif ( applyWorldTransforms ) {\n\n\t\t\t\t\t_tangentVector.transformDirection( mesh.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\ttargetAttributes.tangent.setXYZW( i, _tangentVector.x, _tangentVector.y, _tangentVector.z, _tangentVector4.w );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// copy other attributes over\n\t\tfor ( const i in this.attributes ) {\n\n\t\t\tconst key = this.attributes[ i ];\n\t\t\tif ( key === 'position' || key === 'tangent' || key === 'normal' || ! ( key in attributes ) ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( ! targetAttributes[ key ] ) {\n\n\t\t\t\ttargetGeometry.setAttribute( key, createAttributeClone( attributes[ key ] ) );\n\n\t\t\t}\n\n\t\t\tvalidateAttributes( attributes[ key ], targetAttributes[ key ] );\n\t\t\tcopyAttributeContents( attributes[ key ], targetAttributes[ key ] );\n\n\t\t}\n\n\t\treturn targetGeometry;\n\n\t}\n\n}\n","export { MeshBVH } from './core/MeshBVH.js';\nexport { MeshBVHVisualizer } from './objects/MeshBVHVisualizer.js';\nexport { CENTER, AVERAGE, SAH, NOT_INTERSECTED, INTERSECTED, CONTAINED } from './core/Constants.js';\nexport { getBVHExtremes, estimateMemoryInBytes, getJSONStructure, validateBounds } from './debug/Debug.js';\nexport { acceleratedRaycast, computeBoundsTree, disposeBoundsTree } from './utils/ExtensionUtilities.js';\nexport { getTriangleHitPointInfo } from './utils/TriangleUtilities.js';\nexport * from './math/ExtendedTriangle.js';\nexport * from './math/OrientedBox.js';\nexport * from './gpu/MeshBVHUniformStruct.js';\nexport * from './gpu/shaderFunctions.js';\nexport * from './gpu/VertexAttributeTexture.js';\nexport * from './utils/StaticGeometryGenerator.js';\n","import { Vector3 } from 'three';\r\n\r\nconst _vertices = [ new Vector3(), new Vector3(), new Vector3() ];\r\n\r\nfunction hashNumber( v ) {\r\n\r\n\treturn ~ ~ ( v * 1e4 );\r\n\r\n}\r\n\r\nfunction hashVertex( v ) {\r\n\r\n\treturn `${ hashNumber( v.x ) },${ hashNumber( v.y ) },${ hashNumber( v.z ) }`;\r\n\r\n}\r\n\r\nexport class HalfEdgeMap {\r\n\r\n\tconstructor( geometry = null ) {\r\n\r\n\t\tthis.data = null;\r\n\t\tthis.unmatchedEdges = null;\r\n\t\tthis.matchedEdges = null;\r\n\t\tthis.useDrawRange = true;\r\n\r\n\t\tif ( geometry ) {\r\n\r\n\t\t\tthis.updateFrom( geometry );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetSiblingTriangleIndex( triIndex, edgeIndex ) {\r\n\r\n\t\tconst otherIndex = this.data[ triIndex * 3 + edgeIndex ];\r\n\t\treturn otherIndex === - 1 ? - 1 : ~ ~ ( otherIndex / 3 );\r\n\r\n\t}\r\n\r\n\tgetSiblingEdgeIndex( triIndex, edgeIndex ) {\r\n\r\n\t\tconst otherIndex = this.data[ triIndex * 3 + edgeIndex ];\r\n\t\treturn otherIndex === - 1 ? - 1 : ( otherIndex % 3 );\r\n\r\n\t}\r\n\r\n\tupdateFrom( geometry ) {\r\n\r\n\t\t// runs on the assumption that there is a 1 : 1 match of edges\r\n\t\tconst map = new Map();\r\n\r\n\t\t// attributes\r\n\t\tconst { attributes } = geometry;\r\n\t\tconst indexAttr = geometry.index;\r\n\t\tconst posAttr = attributes.position;\r\n\r\n\t\t// get the potential number of triangles\r\n\t\tlet triCount = indexAttr ? indexAttr.count / 3 : posAttr.count / 3;\r\n\t\tconst maxTriCount = triCount;\r\n\r\n\t\t// get the real number of triangles from the based on the draw range\r\n\t\tlet offset = 0;\r\n\t\tif ( this.useDrawRange ) {\r\n\r\n\t\t\toffset = geometry.drawRange.start;\r\n\t\t\tif ( geometry.drawRange.count !== Infinity ) {\r\n\r\n\t\t\t\ttriCount = ~ ~ ( geometry.drawRange.count / 3 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// initialize the connectivity buffer - 1 means no connectivity\r\n\t\tlet data = this.data;\r\n\t\tif ( ! data || data.length < 3 * maxTriCount ) {\r\n\r\n\t\t\tdata = new Int32Array( 3 * maxTriCount );\r\n\r\n\t\t}\r\n\r\n\t\tdata.fill( - 1 );\r\n\r\n\t\t// iterate over all triangles\r\n\t\tlet unmatchedEdges = 0;\r\n\t\tlet matchedEdges = 0;\r\n\t\tfor ( let i = 0; i < triCount; i ++ ) {\r\n\r\n\t\t\tconst i3 = 3 * i + offset;\r\n\t\t\tfor ( let e = 0; e < 3; e ++ ) {\r\n\r\n\t\t\t\tlet i0 = i3 + e;\r\n\t\t\t\tif ( indexAttr ) {\r\n\r\n\t\t\t\t\ti0 = indexAttr.getX( i0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_vertices[ e ].fromBufferAttribute( posAttr, i0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let e = 0; e < 3; e ++ ) {\r\n\r\n\t\t\t\tconst nextE = ( e + 1 ) % 3;\r\n\t\t\t\tconst _vec0 = _vertices[ e ];\r\n\t\t\t\tconst _vec1 = _vertices[ nextE ];\r\n\r\n\t\t\t\tconst vh0 = hashVertex( _vec0 );\r\n\t\t\t\tconst vh1 = hashVertex( _vec1 );\r\n\r\n\t\t\t\tconst reverseHash = `${ vh1 }_${ vh0 }`;\r\n\t\t\t\tif ( map.has( reverseHash ) ) {\r\n\r\n\t\t\t\t\t// create a reference between the two triangles and clear the hash\r\n\t\t\t\t\tconst otherIndex = map.get( reverseHash );\r\n\t\t\t\t\tdata[ i3 + e ] = otherIndex;\r\n\t\t\t\t\tdata[ otherIndex ] = i3 + e;\r\n\t\t\t\t\tmap.delete( reverseHash );\r\n\t\t\t\t\tunmatchedEdges --;\r\n\t\t\t\t\tmatchedEdges ++;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// save the triangle and triangle edge index captured in one value\r\n\t\t\t\t\t// triIndex = ~ ~ ( i0 / 3 );\r\n\t\t\t\t\t// edgeIndex = i0 % 3;\r\n\t\t\t\t\tconst hash = `${ vh0 }_${ vh1 }`;\r\n\t\t\t\t\tmap.set( hash, i3 + e );\r\n\t\t\t\t\tunmatchedEdges ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.matchedEdges = matchedEdges;\r\n\t\tthis.unmatchedEdges = unmatchedEdges;\r\n\t\tthis.data = data;\r\n\r\n\t}\r\n\r\n}\r\n","export function areSharedArrayBuffersSupported() {\n\n\treturn typeof SharedArrayBuffer !== 'undefined';\n\n}\n\nexport function convertToSharedArrayBuffer( array ) {\n\n\tif ( array.buffer instanceof SharedArrayBuffer ) {\n\n\t\treturn array;\n\n\t}\n\n\tconst cons = array.constructor;\n\tconst buffer = array.buffer;\n\tconst sharedBuffer = new SharedArrayBuffer( buffer.byteLength );\n\n\tconst uintArray = new Uint8Array( buffer );\n\tconst sharedUintArray = new Uint8Array( sharedBuffer );\n\tsharedUintArray.set( uintArray, 0 );\n\n\treturn new cons( sharedBuffer );\n\n}\n","import { Mesh, Matrix4 } from 'three';\r\nimport { MeshBVH } from 'three-mesh-bvh';\r\nimport { HalfEdgeMap } from './HalfEdgeMap.js';\r\nimport { areSharedArrayBuffersSupported, convertToSharedArrayBuffer } from './utils.js';\r\n\r\nexport class Brush extends Mesh {\r\n\r\n\tconstructor( ...args ) {\r\n\r\n\t\tsuper( ...args );\r\n\r\n\t\tthis.isBrush = true;\r\n\t\tthis._previousMatrix = new Matrix4();\r\n\t\tthis._previousMatrix.elements.fill( 0 );\r\n\r\n\t}\r\n\r\n\tmarkUpdated() {\r\n\r\n\t\tthis._previousMatrix.copy( this.matrix );\r\n\r\n\t}\r\n\r\n\tisDirty() {\r\n\r\n\t\tconst { matrix, _previousMatrix } = this;\r\n\t\tconst el1 = matrix.elements;\r\n\t\tconst el2 = _previousMatrix.elements;\r\n\t\tfor ( let i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tif ( el1[ i ] !== el2[ i ] ) {\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tprepareGeometry() {\r\n\r\n\t\t// generate shared array buffers\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst attributes = geometry.attributes;\r\n\t\tif ( areSharedArrayBuffersSupported() ) {\r\n\r\n\t\t\tfor ( const key in attributes ) {\r\n\r\n\t\t\t\tconst attribute = attributes[ key ];\r\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\tthrow new Error( 'Brush: InterleavedBufferAttributes are not supported.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattribute.array = convertToSharedArrayBuffer( attribute.array );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// generate bounds tree\r\n\t\tif ( ! geometry.boundsTree ) {\r\n\r\n\t\t\tgeometry.boundsTree = new MeshBVH( geometry, { maxLeafTris: 3 } );\r\n\t\t\tif ( geometry.halfEdges ) {\r\n\r\n\t\t\t\tgeometry.halfEdges.updateFrom( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// generate half edges\r\n\t\tif ( ! geometry.halfEdges ) {\r\n\r\n\t\t\tgeometry.halfEdges = new HalfEdgeMap( geometry );\r\n\r\n\t\t}\r\n\r\n\t\t// save group indices for materials\r\n\t\tif ( ! geometry.groupIndices ) {\r\n\r\n\t\t\tconst triCount = geometry.index.count / 3;\r\n\t\t\tconst array = new Uint16Array( triCount );\r\n\t\t\tconst groups = geometry.groups;\r\n\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst { start, count } = groups[ i ];\r\n\t\t\t\tfor ( let g = start / 3, lg = ( start + count ) / 3; g < lg; g ++ ) {\r\n\r\n\t\t\t\t\tarray[ g ] = i;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.groupIndices = array;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdisposeCacheData() {\r\n\r\n\t\tconst { geometry } = this;\r\n\t\tgeometry.halfEdges = null;\r\n\t\tgeometry.boundsTree = null;\r\n\t\tgeometry.groupIndices = null;\r\n\r\n\t}\r\n\r\n}\r\n","export class IntersectionMap {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.intersectionSet = {};\r\n\t\tthis.ids = [];\r\n\r\n\t}\r\n\r\n\tadd( id, intersectionId ) {\r\n\r\n\t\tconst { intersectionSet, ids } = this;\r\n\t\tif ( ! intersectionSet[ id ] ) {\r\n\r\n\t\t\tintersectionSet[ id ] = [];\r\n\t\t\tids.push( id );\r\n\r\n\t\t}\r\n\r\n\t\tintersectionSet[ id ].push( intersectionId );\r\n\r\n\t}\r\n\r\n}\r\n","export const ADDITION = 0;\r\nexport const SUBTRACTION = 1;\r\nexport const DIFFERENCE = 3;\r\nexport const INTERSECTION = 4;\r\n","import { Ray, Matrix4, DoubleSide, Vector3, Vector4, Triangle, Line3 } from 'three';\r\nimport { IntersectionMap } from './IntersectionMap.js';\r\nimport { ADDITION, SUBTRACTION, INTERSECTION, DIFFERENCE } from './constants.js';\r\n\r\nconst _ray = new Ray();\r\nconst _matrix = new Matrix4();\r\nconst _tri = new Triangle();\r\nconst _vec3 = new Vector3();\r\nconst _vec4a = new Vector4();\r\nconst _vec4b = new Vector4();\r\nconst _vec4c = new Vector4();\r\nconst _vec4_0 = new Vector4();\r\nconst _vec4_1 = new Vector4();\r\nconst _vec4_2 = new Vector4();\r\nconst _edge = new Line3();\r\nconst JITTER_EPSILON = 1e-8;\r\n\r\nexport const COPLANAR = 0;\r\nexport const BACK_SIDE = - 1;\r\nexport const FRONT_SIDE = 1;\r\n\r\nexport const INVERT_TRI = 0;\r\nexport const ADD_TRI = 1;\r\nexport const SKIP_TRI = 2;\r\n\r\nlet _debugContext = null;\r\nexport function setDebugContext( debugData ) {\r\n\r\n\t_debugContext = debugData;\r\n\r\n}\r\n\r\nexport function getHitSide( tri, bvh ) {\r\n\r\n\t// random function that returns [ - 0.5, 0.5 ];\r\n\tfunction rand() {\r\n\r\n\t\treturn Math.random() - 0.5;\r\n\r\n\t}\r\n\r\n\t// get the ray the check the triangle for\r\n\t_ray.origin.copy( tri.a ).add( tri.b ).add( tri.c ).multiplyScalar( 1 / 3 );\r\n\ttri.getNormal( _ray.direction );\r\n\r\n\tconst total = 3;\r\n\tlet count = 0;\r\n\tlet minDistance = Infinity;\r\n\tfor ( let i = 0; i < total; i ++ ) {\r\n\r\n\t\t// jitter the ray slightly\r\n\t\t_ray.direction.x += rand() * JITTER_EPSILON;\r\n\t\t_ray.direction.y += rand() * JITTER_EPSILON;\r\n\t\t_ray.direction.z += rand() * JITTER_EPSILON;\r\n\r\n\t\t// check if the ray hit the backside\r\n\t\tconst hit = bvh.raycastFirst( _ray, DoubleSide );\r\n\t\tlet hitBackSide = Boolean( hit && _ray.direction.dot( hit.face.normal ) > 0 );\r\n\t\tif ( hitBackSide ) {\r\n\r\n\t\t\tcount ++;\r\n\r\n\t\t}\r\n\r\n\t\tif ( hit !== null ) {\r\n\r\n\t\t\tminDistance = Math.min( minDistance, hit.distance );\r\n\r\n\t\t}\r\n\r\n\t\t// if our current casts meet our requirements then early out\r\n\t\tif ( minDistance === 0 || count / total > 0.5 || ( i - count + 1 ) / total > 0.5 ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// if we're right up against another face then we're coplanar\r\n\tif ( minDistance === 0 ) {\r\n\r\n\t\treturn COPLANAR;\r\n\r\n\t} else {\r\n\r\n\t\treturn count / total > 0.5 ? BACK_SIDE : FRONT_SIDE;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// returns the intersected triangles and returns objects mapping triangle indices to\r\n// the other triangles intersected\r\nexport function collectIntersectingTriangles( a, b ) {\r\n\r\n\tconst aIntersections = new IntersectionMap();\r\n\tconst bIntersections = new IntersectionMap();\r\n\r\n\t_matrix\r\n\t\t.copy( a.matrixWorld )\r\n\t\t.invert()\r\n\t\t.multiply( b.matrixWorld );\r\n\r\n\ta.geometry.boundsTree.bvhcast( b.geometry.boundsTree, _matrix, {\r\n\r\n\t\tintersectsTriangles( triangleA, triangleB, ia, ib ) {\r\n\r\n\t\t\tif ( triangleA.intersectsTriangle( triangleB, _edge ) && _edge.distance() > 1e-5 ) {\r\n\r\n\t\t\t\taIntersections.add( ia, ib );\r\n\t\t\t\tbIntersections.add( ib, ia );\r\n\r\n\t\t\t\tif ( _debugContext ) {\r\n\r\n\t\t\t\t\t_debugContext.addEdge( _edge );\r\n\t\t\t\t\t_debugContext.addIntersectingTriangles( ia, triangleA, ib, triangleB );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\treturn { aIntersections, bIntersections };\r\n\r\n}\r\n\r\n// Add the barycentric interpolated values fro the triangle into the new attribute data\r\nexport function appendAttributeFromTriangle(\r\n\ttriIndex,\r\n\tbaryCoordTri,\r\n\tgeometry,\r\n\tmatrixWorld,\r\n\tnormalMatrix,\r\n\tattributeInfo,\r\n\tinvert = false,\r\n) {\r\n\r\n\tconst attributes = geometry.attributes;\r\n\tconst indexAttr = geometry.index;\r\n\tconst i3 = triIndex * 3;\r\n\tconst i0 = indexAttr.getX( i3 + 0 );\r\n\tconst i1 = indexAttr.getX( i3 + 1 );\r\n\tconst i2 = indexAttr.getX( i3 + 2 );\r\n\r\n\tfor ( const key in attributeInfo ) {\r\n\r\n\t\t// check if the key we're asking for is in the geometry at all\r\n\t\tconst attr = attributes[ key ];\r\n\t\tconst arr = attributeInfo[ key ];\r\n\t\tif ( ! ( key in attributes ) ) {\r\n\r\n\t\t\tthrow new Error( `CSG Operations: Attribute ${ key } not available on geometry.` );\r\n\r\n\t\t}\r\n\r\n\t\t// handle normals and positions specially because they require transforming\r\n\t\t// TODO: handle tangents\r\n\t\tconst itemSize = attr.itemSize;\r\n\t\tif ( key === 'position' ) {\r\n\r\n\t\t\t_tri.a.fromBufferAttribute( attr, i0 ).applyMatrix4( matrixWorld );\r\n\t\t\t_tri.b.fromBufferAttribute( attr, i1 ).applyMatrix4( matrixWorld );\r\n\t\t\t_tri.c.fromBufferAttribute( attr, i2 ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\tpushBarycoordInterpolatedValues( _tri.a, _tri.b, _tri.c, baryCoordTri, 3, arr, invert );\r\n\r\n\t\t} else if ( key === 'normal' ) {\r\n\r\n\t\t\t_tri.a.fromBufferAttribute( attr, i0 ).applyNormalMatrix( normalMatrix );\r\n\t\t\t_tri.b.fromBufferAttribute( attr, i1 ).applyNormalMatrix( normalMatrix );\r\n\t\t\t_tri.c.fromBufferAttribute( attr, i2 ).applyNormalMatrix( normalMatrix );\r\n\r\n\t\t\tif ( invert ) {\r\n\r\n\t\t\t\t_tri.a.multiplyScalar( - 1 );\r\n\t\t\t\t_tri.b.multiplyScalar( - 1 );\r\n\t\t\t\t_tri.c.multiplyScalar( - 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tpushBarycoordInterpolatedValues( _tri.a, _tri.b, _tri.c, baryCoordTri, 3, arr, invert, true );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_vec4a.fromBufferAttribute( attr, i0 );\r\n\t\t\t_vec4b.fromBufferAttribute( attr, i1 );\r\n\t\t\t_vec4c.fromBufferAttribute( attr, i2 );\r\n\r\n\t\t\tpushBarycoordInterpolatedValues( _vec4a, _vec4b, _vec4c, baryCoordTri, itemSize, arr, invert );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Append all the values of the attributes for the triangle onto the new attribute arrays\r\nexport function appendAttributesFromIndices(\r\n\ti0,\r\n\ti1,\r\n\ti2,\r\n\tattributes,\r\n\tmatrixWorld,\r\n\tnormalMatrix,\r\n\tattributeInfo,\r\n\tinvert = false,\r\n) {\r\n\r\n\tappendAttributeFromIndex( i0, attributes, matrixWorld, normalMatrix, attributeInfo, invert );\r\n\tappendAttributeFromIndex( i1, attributes, matrixWorld, normalMatrix, attributeInfo, invert );\r\n\tappendAttributeFromIndex( i2, attributes, matrixWorld, normalMatrix, attributeInfo, invert );\r\n\r\n}\r\n\r\n// Returns the triangle to add when performing an operation\r\nexport function getOperationAction( operation, hitSide, invert = false ) {\r\n\r\n\tswitch ( operation ) {\r\n\r\n\t\tcase ADDITION:\r\n\t\t\tif ( hitSide === FRONT_SIDE || ( hitSide === COPLANAR && invert ) ) {\r\n\r\n\t\t\t\treturn ADD_TRI;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\t\tcase SUBTRACTION:\r\n\r\n\t\t\tif ( invert ) {\r\n\r\n\t\t\t\tif ( hitSide === BACK_SIDE ) {\r\n\r\n\t\t\t\t\treturn INVERT_TRI;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( hitSide === FRONT_SIDE ) {\r\n\r\n\t\t\t\t\treturn ADD_TRI;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\t\tcase DIFFERENCE:\r\n\t\t\tif ( hitSide === BACK_SIDE ) {\r\n\r\n\t\t\t\treturn INVERT_TRI;\r\n\r\n\t\t\t} else if ( hitSide === FRONT_SIDE ) {\r\n\r\n\t\t\t\treturn ADD_TRI;\r\n\r\n\t\t\t}\r\n\r\n\t\tcase INTERSECTION:\r\n\t\t\tif ( hitSide === BACK_SIDE || ( hitSide === COPLANAR && invert ) ) {\r\n\r\n\t\t\t\treturn ADD_TRI;\r\n\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthrow new Error( `Unrecognized CSG operation enum \"${ operation }\".` );\r\n\r\n\t}\r\n\r\n\treturn SKIP_TRI;\r\n\r\n}\r\n\r\n// takes a set of barycentric values in the form of a triangle, a set of vectors, number of components,\r\n// and whether to invert the result and pushes the new values onto the provided attribute array\r\nfunction pushBarycoordInterpolatedValues( v0, v1, v2, baryCoordTri, itemSize, attrArr, invert = false, normalize = false ) {\r\n\r\n\t// adds the appropriate number of values for the vector onto the array\r\n\tconst addValues = v => {\r\n\r\n\t\tattrArr.push( v.x );\r\n\t\tif ( itemSize > 1 ) attrArr.push( v.y );\r\n\t\tif ( itemSize > 2 ) attrArr.push( v.z );\r\n\t\tif ( itemSize > 3 ) attrArr.push( v.w );\r\n\r\n\t};\r\n\r\n\t// barycentric interpolate the first component\r\n\t_vec4_0.set( 0, 0, 0, 0 )\r\n\t\t.addScaledVector( v0, baryCoordTri.a.x )\r\n\t\t.addScaledVector( v1, baryCoordTri.a.y )\r\n\t\t.addScaledVector( v2, baryCoordTri.a.z );\r\n\r\n\t_vec4_1.set( 0, 0, 0, 0 )\r\n\t\t.addScaledVector( v0, baryCoordTri.b.x )\r\n\t\t.addScaledVector( v1, baryCoordTri.b.y )\r\n\t\t.addScaledVector( v2, baryCoordTri.b.z );\r\n\r\n\t_vec4_2.set( 0, 0, 0, 0 )\r\n\t\t.addScaledVector( v0, baryCoordTri.c.x )\r\n\t\t.addScaledVector( v1, baryCoordTri.c.y )\r\n\t\t.addScaledVector( v2, baryCoordTri.c.z );\r\n\r\n\tif ( normalize ) {\r\n\r\n\t\t_vec4_0.normalize();\r\n\t\t_vec4_1.normalize();\r\n\t\t_vec4_2.normalize();\r\n\r\n\t}\r\n\r\n\t// if the face is inverted then add the values in an inverted order\r\n\taddValues( _vec4_0 );\r\n\r\n\tif ( invert ) {\r\n\r\n\t\taddValues( _vec4_2 );\r\n\t\taddValues( _vec4_1 );\r\n\r\n\t} else {\r\n\r\n\t\taddValues( _vec4_1 );\r\n\t\taddValues( _vec4_2 );\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Adds the values for the given vertex index onto the new attribute arrays\r\nfunction appendAttributeFromIndex(\r\n\tindex,\r\n\tattributes,\r\n\tmatrixWorld,\r\n\tnormalMatrix,\r\n\tattributeInfo,\r\n\tinvert = false,\r\n) {\r\n\r\n\tfor ( const key in attributeInfo ) {\r\n\r\n\t\t// check if the key we're asking for is in the geometry at all\r\n\t\tconst attr = attributes[ key ];\r\n\t\tconst arr = attributeInfo[ key ];\r\n\t\tif ( ! ( key in attributes ) ) {\r\n\r\n\t\t\tthrow new Error( `CSG Operations: Attribute ${ key } no available on geometry.` );\r\n\r\n\t\t}\r\n\r\n\t\t// specially handle the position and normal attributes because they require transforms\r\n\t\t// TODO: handle tangents\r\n\t\tconst itemSize = attr.itemSize;\r\n\t\tif ( key === 'position' ) {\r\n\r\n\t\t\t_vec3.fromBufferAttribute( attr, index ).applyMatrix4( matrixWorld );\r\n\t\t\tarr.push( _vec3.x, _vec3.y, _vec3.z );\r\n\r\n\t\t} else if ( key === 'normal' ) {\r\n\r\n\t\t\t_vec3.fromBufferAttribute( attr, index ).applyNormalMatrix( normalMatrix );\r\n\t\t\tif ( invert ) {\r\n\r\n\t\t\t\t_vec3.multiplyScalar( - 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarr.push( _vec3.x, _vec3.y, _vec3.z );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarr.push( attr.getX( index ) );\r\n\t\t\tif ( itemSize > 1 ) arr.push( attr.getY( index ) );\r\n\t\t\tif ( itemSize > 2 ) arr.push( attr.getZ( index ) );\r\n\t\t\tif ( itemSize > 3 ) arr.push( attr.getW( index ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n","import { Triangle, Line3, Vector3, Plane } from 'three';\r\nimport { ExtendedTriangle } from 'three-mesh-bvh';\r\nimport { BACK_SIDE, FRONT_SIDE, COPLANAR } from './operationsUtils.js';\r\n\r\nconst EPSILON = 1e-14;\r\nconst COPLANAR_EPSILON = 1e-7;\r\nconst _edge = new Line3();\r\nconst _foundEdge = new Line3();\r\nconst _vec = new Vector3();\r\nconst _planeNormal = new Vector3();\r\nconst _plane = new Plane();\r\nconst _exTriangle = new ExtendedTriangle();\r\n\r\nexport function isTriDegenerate( tri ) {\r\n\r\n\treturn tri.a.distanceToSquared( tri.b ) < EPSILON ||\r\n\t\ttri.a.distanceToSquared( tri.c ) < EPSILON ||\r\n\t\ttri.b.distanceToSquared( tri.c ) < EPSILON;\r\n\r\n}\r\n\r\n// Triangle with fields used to track whether it falls on the same side of all planes\r\n// being used to clip it. Side is set to \"null\" if it cannot be determined\r\nclass CullableTriangle extends Triangle {\r\n\r\n\tconstructor( ...args ) {\r\n\r\n\t\tsuper( ...args );\r\n\t\tthis.side = null;\r\n\t\tthis.originalSide = null;\r\n\t\tthis.coplanarCount = 0;\r\n\r\n\t}\r\n\r\n\tinit() {\r\n\r\n\t\tthis.side = null;\r\n\t\tthis.originalSide = null;\r\n\t\tthis.coplanarCount = 0;\r\n\r\n\t}\r\n\r\n\tinitFrom( other ) {\r\n\r\n\t\tthis.side = other.side;\r\n\t\tthis.originalSide = other.originalSide;\r\n\t\tthis.coplanarCount = other.coplanarCount;\r\n\r\n\t}\r\n\r\n\tupdateSide( plane, triangle = null, coplanarIndex = - 1 ) {\r\n\r\n\t\tif ( this.originalSide !== null && this.side === null ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// get center and find the side of the plane we're on\r\n\t\t_vec\r\n\t\t\t.copy( this.a )\r\n\t\t\t.add( this.b )\r\n\t\t\t.add( this.c )\r\n\t\t\t.multiplyScalar( 1 / 3 );\r\n\r\n\t\tconst foundSide = plane.distanceToPoint( _vec ) < 0 ? BACK_SIDE : FRONT_SIDE;\r\n\t\tif ( triangle && coplanarIndex !== - 1 ) {\r\n\r\n\t\t\tif ( foundSide === FRONT_SIDE ) {\r\n\r\n\t\t\t\tthis.coplanarCount ++;\r\n\t\t\t\tif ( this.coplanarCount === 3 ) {\r\n\r\n\t\t\t\t\tthis.side = COPLANAR;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( this.originalSide === null ) {\r\n\r\n\t\t\t\tthis.originalSide = foundSide;\r\n\t\t\t\tthis.side = foundSide;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( foundSide !== this.side ) {\r\n\r\n\t\t\t\tthis.side = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n// A pool of triangles to avoid unnecessary triangle creation\r\nclass TrianglePool {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis._pool = [];\r\n\t\tthis._index = 0;\r\n\r\n\t}\r\n\r\n\tgetTriangle() {\r\n\r\n\t\tif ( this._index >= this._pool.length ) {\r\n\r\n\t\t\tthis._pool.push( new CullableTriangle() );\r\n\r\n\t\t}\r\n\r\n\t\tconst result = this._pool[ this._index ++ ];\r\n\t\tresult.init();\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\tclear() {\r\n\r\n\t\tthis._index = 0;\r\n\r\n\t}\r\n\r\n\treset() {\r\n\r\n\t\tthis._pool.length = 0;\r\n\t\tthis._index = 0;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Utility class for splitting triangles\r\nexport class TriangleSplitter {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.trianglePool = new TrianglePool();\r\n\t\tthis.triangles = [];\r\n\t\tthis.normal = new Vector3();\r\n\r\n\t}\r\n\r\n\t// initialize the class with a triangle\r\n\tinitialize( tri ) {\r\n\r\n\t\tconst { triangles, trianglePool, normal } = this;\r\n\t\ttriangles.length = 0;\r\n\t\ttrianglePool.clear();\r\n\r\n\t\tif ( Array.isArray( tri ) ) {\r\n\r\n\t\t\tfor ( let i = 0, l = tri.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst t = tri[ i ];\r\n\t\t\t\tif ( i === 0 ) {\r\n\r\n\t\t\t\t\tt.getNormal( normal );\r\n\r\n\t\t\t\t} else if ( Math.abs( 1.0 - t.getNormal( _vec ).dot( normal ) ) > EPSILON ) {\r\n\r\n\t\t\t\t\tthrow new Error( 'Triangle Splitter: Cannot initialize with triangles that have different normals.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst poolTri = trianglePool.getTriangle();\r\n\t\t\t\tpoolTri.copy( t );\r\n\t\t\t\ttriangles.push( poolTri );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttri.getNormal( normal );\r\n\r\n\t\t\tconst poolTri = trianglePool.getTriangle();\r\n\t\t\tpoolTri.copy( tri );\r\n\t\t\ttriangles.push( poolTri );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Split the current set of triangles by passing a single triangle in. If the triangle is\r\n\t// coplanar it will attempt to split by the triangle edge planes\r\n\tsplitByTriangle( triangle ) {\r\n\r\n\t\tconst { normal, triangles } = this;\r\n\t\ttriangle.getPlane( _plane );\r\n\r\n\t\tif ( Math.abs( 1.0 - Math.abs( _plane.normal.dot( normal ) ) ) < COPLANAR_EPSILON ) {\r\n\r\n\t\t\t// if the triangle is coplanar then split by the edge planes\r\n\t\t\tconst arr = [ triangle.a, triangle.b, triangle.c ];\r\n\t\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\tconst nexti = ( i + 1 ) % 3;\r\n\r\n\t\t\t\tconst v0 = arr[ i ];\r\n\t\t\t\tconst v1 = arr[ nexti ];\r\n\r\n\t\t\t\t_vec.subVectors( v1, v0 ).normalize();\r\n\t\t\t\t_planeNormal.crossVectors( normal, _vec );\r\n\t\t\t\t_plane.setFromNormalAndCoplanarPoint( _planeNormal, v0 );\r\n\r\n\t\t\t\tthis.splitByPlane( _plane, triangle, i );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let i = 0, l = triangles.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst t = triangles[ i ];\r\n\t\t\t\tt.coplanarCount = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// otherwise split by the triangle plane\r\n\t\t\tthis.splitByPlane( _plane, triangle );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Split the triangles by the given plan. If a triangle is provided then we ensure we\r\n\t// intersect the triangle before splitting the plane\r\n\tsplitByPlane( plane, triangle = null, coplanarIndex = - 1 ) {\r\n\r\n\t\tconst { triangles, trianglePool } = this;\r\n\r\n\t\t// init our triangle to check for intersection\r\n\t\tlet splittingTriangle = null;\r\n\t\tif ( triangle !== null ) {\r\n\r\n\t\t\tsplittingTriangle = _exTriangle;\r\n\t\t\tsplittingTriangle.copy( triangle );\r\n\t\t\tsplittingTriangle.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\t// try to split every triangle in the class\r\n\t\tfor ( let i = 0, l = triangles.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst tri = triangles[ i ];\r\n\t\t\tconst { a, b, c } = tri;\r\n\r\n\t\t\t// skip the triangle if we don't intersect with it\r\n\t\t\tif ( splittingTriangle ) {\r\n\r\n\t\t\t\tif ( ! splittingTriangle.intersectsTriangle( tri, _edge ) || _edge.distance() < 1e-5 ) {\r\n\r\n\t\t\t\t\ttri.updateSide( plane, splittingTriangle, coplanarIndex );\r\n\t\t\t\t\ttri.side = null;\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet intersects = 0;\r\n\t\t\tlet vertexSplitEnd = - 1;\r\n\t\t\tlet positiveSide = 0;\r\n\t\t\tlet onPlane = 0;\r\n\t\t\tlet coplanarEdge = false;\r\n\t\t\tconst arr = [ a, b, c ];\r\n\t\t\tfor ( let t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\t\t// get the triangle edge\r\n\t\t\t\tconst tNext = ( t + 1 ) % 3;\r\n\t\t\t\t_edge.start.copy( arr[ t ] );\r\n\t\t\t\t_edge.end.copy( arr[ tNext ] );\r\n\r\n\t\t\t\t// track if the start point sits on the plane or if it's on the positive side of it\r\n\t\t\t\t// so we can use that information to determine whether to split later.\r\n\t\t\t\tconst startDist = plane.distanceToPoint( _edge.start );\r\n\t\t\t\tconst endDist = plane.distanceToPoint( _edge.end );\r\n\t\t\t\tif ( Math.abs( startDist ) < EPSILON ) {\r\n\r\n\t\t\t\t\tonPlane ++;\r\n\r\n\t\t\t\t} else if ( startDist > 0 ) {\r\n\r\n\t\t\t\t\tpositiveSide ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( Math.abs( startDist ) < COPLANAR_EPSILON && Math.abs( endDist ) < COPLANAR_EPSILON ) {\r\n\r\n\t\t\t\t\tcoplanarEdge = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// double check the end point since the \"intersectLine\" function sometimes does not\r\n\t\t\t\t// return it as an intersection (see issue #28)\r\n\t\t\t\tlet didIntersect = ! ! plane.intersectLine( _edge, _vec );\r\n\t\t\t\tif ( ! didIntersect && Math.abs( endDist ) < EPSILON ) {\r\n\r\n\t\t\t\t\t_vec.copy( _edge.end );\r\n\t\t\t\t\tdidIntersect = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// check if we intersect the plane (ignoring the start point so we don't double count)\r\n\t\t\t\tif ( didIntersect && ! ( _vec.distanceTo( _edge.start ) < EPSILON ) ) {\r\n\r\n\t\t\t\t\t// if we intersect at the end point then we track that point as one that we\r\n\t\t\t\t\t// have to split down the middle\r\n\t\t\t\t\tif ( _vec.distanceTo( _edge.end ) < EPSILON ) {\r\n\r\n\t\t\t\t\t\tvertexSplitEnd = t;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// track the split edge\r\n\t\t\t\t\tif ( intersects === 0 ) {\r\n\r\n\t\t\t\t\t\t_foundEdge.start.copy( _vec );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_foundEdge.end.copy( _vec );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersects ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skip splitting if:\r\n\t\t\t// - we have two points on the plane then the plane intersects the triangle exactly on an edge\r\n\t\t\t// - the plane does not intersect on 2 points\r\n\t\t\t// - the intersection edge is too small\r\n\t\t\tif ( ! coplanarEdge && onPlane < 2 && intersects === 2 && _foundEdge.distance() > COPLANAR_EPSILON ) {\r\n\r\n\t\t\t\tif ( vertexSplitEnd !== - 1 ) {\r\n\r\n\t\t\t\t\tvertexSplitEnd = ( vertexSplitEnd + 1 ) % 3;\r\n\r\n\t\t\t\t\t// we're splitting along a vertex\r\n\t\t\t\t\tlet otherVert1 = 0;\r\n\t\t\t\t\tif ( otherVert1 === vertexSplitEnd ) otherVert1 = ( otherVert1 + 1 ) % 3;\r\n\r\n\t\t\t\t\tlet otherVert2 = otherVert1 + 1;\r\n\t\t\t\t\tif ( otherVert2 === vertexSplitEnd ) otherVert2 = ( otherVert2 + 1 ) % 3;\r\n\r\n\t\t\t\t\tconst nextTri = trianglePool.getTriangle();\r\n\t\t\t\t\tnextTri.a.copy( arr[ otherVert2 ] );\r\n\t\t\t\t\tnextTri.b.copy( _foundEdge.end );\r\n\t\t\t\t\tnextTri.c.copy( _foundEdge.start );\r\n\r\n\t\t\t\t\tif ( ! isTriDegenerate( nextTri ) ) {\r\n\r\n\t\t\t\t\t\ttriangles.push( nextTri );\r\n\t\t\t\t\t\tnextTri.initFrom( tri );\r\n\t\t\t\t\t\tnextTri.updateSide( plane, splittingTriangle, coplanarIndex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttri.a.copy( arr[ otherVert1 ] );\r\n\t\t\t\t\ttri.b.copy( _foundEdge.start );\r\n\t\t\t\t\ttri.c.copy( _foundEdge.end );\r\n\r\n\t\t\t\t\tif ( isTriDegenerate( tri ) ) {\r\n\r\n\t\t\t\t\t\ttriangles.splice( i, 1 );\r\n\t\t\t\t\t\ti --;\r\n\t\t\t\t\t\tl --;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttri.updateSide( plane, splittingTriangle, coplanarIndex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// we're splitting with a quad and a triangle\r\n\t\t\t\t\tconst singleVert = arr.findIndex( v => {\r\n\r\n\t\t\t\t\t\tif ( positiveSide >= 2 ) {\r\n\r\n\t\t\t\t\t\t\treturn plane.distanceToPoint( v ) < 0;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\treturn plane.distanceToPoint( v ) > 0;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tif ( singleVert === 0 ) {\r\n\r\n\t\t\t\t\t\tlet tmp = _foundEdge.start;\r\n\t\t\t\t\t\t_foundEdge.start = _foundEdge.end;\r\n\t\t\t\t\t\t_foundEdge.end = tmp;\r\n\r\n\t\t\t\t\t} else if ( singleVert === - 1 ) {\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst nextVert1 = ( singleVert + 1 ) % 3;\r\n\t\t\t\t\tconst nextVert2 = ( singleVert + 2 ) % 3;\r\n\r\n\t\t\t\t\tconst nextTri1 = trianglePool.getTriangle();\r\n\t\t\t\t\tconst nextTri2 = trianglePool.getTriangle();\r\n\r\n\t\t\t\t\t// choose the triangle that has the larger areas (shortest split distance)\r\n\t\t\t\t\tif ( arr[ nextVert1 ].distanceToSquared( _foundEdge.start ) < arr[ nextVert2 ].distanceToSquared( _foundEdge.end ) ) {\r\n\r\n\t\t\t\t\t\tnextTri1.a.copy( arr[ nextVert1 ] );\r\n\t\t\t\t\t\tnextTri1.b.copy( _foundEdge.start );\r\n\t\t\t\t\t\tnextTri1.c.copy( _foundEdge.end );\r\n\r\n\t\t\t\t\t\tnextTri2.a.copy( arr[ nextVert1 ] );\r\n\t\t\t\t\t\tnextTri2.b.copy( arr[ nextVert2 ] );\r\n\t\t\t\t\t\tnextTri2.c.copy( _foundEdge.start );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tnextTri1.a.copy( arr[ nextVert2 ] );\r\n\t\t\t\t\t\tnextTri1.b.copy( _foundEdge.start );\r\n\t\t\t\t\t\tnextTri1.c.copy( _foundEdge.end );\r\n\r\n\t\t\t\t\t\tnextTri2.a.copy( arr[ nextVert1 ] );\r\n\t\t\t\t\t\tnextTri2.b.copy( arr[ nextVert2 ] );\r\n\t\t\t\t\t\tnextTri2.c.copy( _foundEdge.end );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttri.a.copy( arr[ singleVert ] );\r\n\t\t\t\t\ttri.b.copy( _foundEdge.end );\r\n\t\t\t\t\ttri.c.copy( _foundEdge.start );\r\n\r\n\t\t\t\t\t// don't add degenerate triangles to the list\r\n\t\t\t\t\tif ( ! isTriDegenerate( nextTri1 ) ) {\r\n\r\n\t\t\t\t\t\ttriangles.push( nextTri1 );\r\n\t\t\t\t\t\tnextTri1.initFrom( tri );\r\n\t\t\t\t\t\tnextTri1.updateSide( plane, splittingTriangle, coplanarIndex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! isTriDegenerate( nextTri2 ) ) {\r\n\r\n\t\t\t\t\t\ttriangles.push( nextTri2 );\r\n\t\t\t\t\t\tnextTri2.initFrom( tri );\r\n\t\t\t\t\t\tnextTri2.updateSide( plane, splittingTriangle, coplanarIndex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( isTriDegenerate( tri ) ) {\r\n\r\n\t\t\t\t\t\ttriangles.splice( i, 1 );\r\n\t\t\t\t\t\ti --;\r\n\t\t\t\t\t\tl --;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttri.updateSide( plane, splittingTriangle, coplanarIndex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( intersects === 3 ) {\r\n\r\n\t\t\t\tconsole.warn( 'TriangleClipper: Coplanar clip not handled' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treset() {\r\n\r\n\t\tthis.triangles.length = 0;\r\n\r\n\t}\r\n\r\n}\r\n","import { areSharedArrayBuffersSupported } from './utils.js';\r\n\r\n// Make a new array wrapper class that more easily affords expansion when reaching it's max capacity\r\nexport class TypeBackedArray {\r\n\r\n\tconstructor( type, initialSize = 500 ) {\r\n\r\n\t\tconst bufferType = areSharedArrayBuffersSupported() ? SharedArrayBuffer : ArrayBuffer;\r\n\r\n\t\tthis.expansionFactor = 1.5;\r\n\t\tthis.type = type;\r\n\t\tthis.array = new type( new bufferType( initialSize * type.BYTES_PER_ELEMENT ) );\r\n\t\tthis.length = 0;\r\n\r\n\t}\r\n\r\n\texpand( size = null ) {\r\n\r\n\t\tconst { type, array, expansionFactor } = this;\r\n\r\n\t\tif ( size === null ) {\r\n\r\n\t\t\tsize = ~ ~ ( array.length * expansionFactor );\r\n\r\n\t\t}\r\n\r\n\t\tconst newArray = new type( size );\r\n\t\tnewArray.set( array, 0 );\r\n\t\tthis.array = newArray;\r\n\r\n\t}\r\n\r\n\tpush( ...args ) {\r\n\r\n\t\tlet { array, length } = this;\r\n\t\tif ( length + args.length > array.length ) {\r\n\r\n\t\t\tthis.expand();\r\n\t\t\tarray = this.array;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0, l = args.length; i < l; i ++ ) {\r\n\r\n\t\t\tarray[ length + i ] = args[ i ];\r\n\r\n\t\t}\r\n\r\n\t\tthis.length += args.length;\r\n\r\n\t}\r\n\r\n\tclear() {\r\n\r\n\t\tthis.length = 0;\r\n\r\n\t}\r\n\r\n}\r\n","import { TypeBackedArray } from './TypeBackedArray.js';\r\n\r\n// utility class for for tracking attribute data in type-backed arrays\r\nexport class TypedAttributeData {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.groupAttributes = [ {} ];\r\n\t\tthis.groupCount = 0;\r\n\r\n\t}\r\n\r\n\tgetType( name ) {\r\n\r\n\t\treturn this.groupAttributes[ 0 ][ name ].type;\r\n\r\n\t}\r\n\r\n\tgetTotalLength( name ) {\r\n\r\n\t\tconst { groupCount, groupAttributes } = this;\r\n\r\n\t\tlet length = 0;\r\n\t\tfor ( let i = 0; i < groupCount; i ++ ) {\r\n\r\n\t\t\tconst attrSet = groupAttributes[ i ];\r\n\t\t\tlength += attrSet[ name ].length;\r\n\r\n\t\t}\r\n\r\n\t\treturn length;\r\n\r\n\t}\r\n\r\n\tgetGroupSet( index = 0 ) {\r\n\r\n\t\t// throw an error if we've never\r\n\t\tconst { groupAttributes } = this;\r\n\t\tif ( groupAttributes[ index ] ) {\r\n\r\n\t\t\tthis.groupCount = Math.max( this.groupCount, index + 1 );\r\n\t\t\treturn groupAttributes[ index ];\r\n\r\n\t\t}\r\n\r\n\t\t// add any new group sets required\r\n\t\tconst rootAttrSet = groupAttributes[ 0 ];\r\n\t\tthis.groupCount = Math.max( this.groupCount, index + 1 );\r\n\t\twhile ( index >= groupAttributes.length ) {\r\n\r\n\t\t\tconst newAttrSet = {};\r\n\t\t\tgroupAttributes.push( newAttrSet );\r\n\t\t\tfor ( const key in rootAttrSet ) {\r\n\r\n\t\t\t\tnewAttrSet[ key ] = new TypeBackedArray( rootAttrSet[ key ].type );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn groupAttributes[ index ];\r\n\r\n\t}\r\n\r\n\tgetGroupArray( name, index = 0 ) {\r\n\r\n\t\t// throw an error if we've never\r\n\t\tconst { groupAttributes } = this;\r\n\t\tconst rootAttrSet = groupAttributes[ 0 ];\r\n\t\tconst referenceAttr = rootAttrSet[ name ];\r\n\t\tif ( ! referenceAttr ) {\r\n\r\n\t\t\tthrow new Error( `TypedAttributeData: Attribute with \"${ name }\" has not been initialized` );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.getGroupSet( index )[ name ];\r\n\r\n\t}\r\n\r\n\t// initializes an attribute array with the given name, type, and size\r\n\tinitializeArray( name, type ) {\r\n\r\n\t\tconst { groupAttributes } = this;\r\n\t\tconst rootSet = groupAttributes[ 0 ];\r\n\t\tconst referenceAttr = rootSet[ name ];\r\n\t\tif ( referenceAttr ) {\r\n\r\n\t\t\tif ( referenceAttr.type !== type ) {\r\n\r\n\t\t\t\tthrow new Error( `TypedAttributeData: Array ${ name } already initialized with a different type.` );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( let i = 0, l = groupAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tgroupAttributes[ i ][ name ] = new TypeBackedArray( type );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclear() {\r\n\r\n\t\tthis.groupCount = 0;\r\n\r\n\t\tconst { groupAttributes } = this;\r\n\t\tgroupAttributes.forEach( attrSet => {\r\n\r\n\t\t\tfor ( const key in attrSet ) {\r\n\r\n\t\t\t\tattrSet[ key ].clear();\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tdelete( key ) {\r\n\r\n\t\tthis.groupAttributes.forEach( attrSet => {\r\n\r\n\t\t\tdelete attrSet[ key ];\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\treset() {\r\n\r\n\t\tthis.groupAttributes = [];\r\n\r\n\t}\r\n\r\n}\r\n","import { Triangle } from 'three';\r\n\r\nclass TriangleIntersectData {\r\n\r\n\tconstructor( tri ) {\r\n\r\n\t\tthis.triangle = new Triangle().copy( tri );\r\n\t\tthis.intersects = {};\r\n\r\n\t}\r\n\r\n\taddTriangle( index, tri ) {\r\n\r\n\t\tthis.intersects[ index ] = new Triangle().copy( tri );\r\n\r\n\t}\r\n\r\n\tgetIntersectArray() {\r\n\r\n\t\tconst array = [];\r\n\t\tconst { intersects } = this;\r\n\t\tfor ( const key in intersects ) {\r\n\r\n\t\t\tarray.push( intersects[ key ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass TriangleIntersectionSets {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.data = {};\r\n\r\n\t}\r\n\r\n\taddTriangleIntersection( ia, triA, ib, triB ) {\r\n\r\n\t\tconst { data } = this;\r\n\t\tif ( ! data[ ia ] ) {\r\n\r\n\t\t\tdata[ ia ] = new TriangleIntersectData( triA );\r\n\r\n\t\t}\r\n\r\n\t\tdata[ ia ].addTriangle( ib, triB );\r\n\r\n\t}\r\n\r\n\tgetTrianglesAsArray( id = null ) {\r\n\r\n\t\tconst { data } = this;\r\n\t\tconst arr = [];\r\n\r\n\t\tif ( id !== null ) {\r\n\r\n\t\t\tif ( id in data ) {\r\n\r\n\t\t\t\tarr.push( data[ id ].triangle );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( const key in data ) {\r\n\r\n\t\t\t\tarr.push( data[ key ].triangle );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn arr;\r\n\r\n\t}\r\n\r\n\tgetTriangleIndices() {\r\n\r\n\t\treturn Object.keys( this.data ).map( i => parseInt( i ) );\r\n\r\n\t}\r\n\r\n\tgetIntersectionIndices( id ) {\r\n\r\n\t\tconst { data } = this;\r\n\t\tif ( ! data[ id ] ) {\r\n\r\n\t\t\treturn [];\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn Object.keys( data[ id ].intersects ).map( i => parseInt( i ) );\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetIntersectionsAsArray( id = null, id2 = null ) {\r\n\r\n\t\tconst { data } = this;\r\n\t\tconst triSet = new Set();\r\n\t\tconst arr = [];\r\n\r\n\t\tconst addTriangles = key => {\r\n\r\n\t\t\tif ( ! data[ key ] ) return;\r\n\r\n\t\t\tif ( id2 !== null ) {\r\n\r\n\t\t\t\tif ( data[ key ].intersects[ id2 ] ) {\r\n\r\n\t\t\t\t\tarr.push( data[ key ].intersects[ id2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst intersects = data[ key ].intersects;\r\n\t\t\t\tfor ( const key2 in intersects ) {\r\n\r\n\t\t\t\t\tif ( ! triSet.has( key2 ) ) {\r\n\r\n\t\t\t\t\t\ttriSet.add( key2 );\r\n\t\t\t\t\t\tarr.push( intersects[ key2 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( id !== null ) {\r\n\r\n\t\t\taddTriangles( id );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( const key in data ) {\r\n\r\n\t\t\t\taddTriangles( key );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn arr;\r\n\r\n\t}\r\n\r\n\treset() {\r\n\r\n\t\tthis.data = {};\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport class OperationDebugData {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.enabled = false;\r\n\t\tthis.triangleIntersectsA = new TriangleIntersectionSets();\r\n\t\tthis.triangleIntersectsB = new TriangleIntersectionSets();\r\n\t\tthis.intersectionEdges = [];\r\n\r\n\t}\r\n\r\n\taddIntersectingTriangles( ia, triA, ib, triB ) {\r\n\r\n\t\tconst { triangleIntersectsA, triangleIntersectsB } = this;\r\n\t\ttriangleIntersectsA.addTriangleIntersection( ia, triA, ib, triB );\r\n\t\ttriangleIntersectsB.addTriangleIntersection( ib, triB, ia, triA );\r\n\r\n\t}\r\n\r\n\taddEdge( edge ) {\r\n\r\n\t\tthis.intersectionEdges.push( edge.clone() );\r\n\r\n\t}\r\n\r\n\treset() {\r\n\r\n\t\tthis.triangleIntersectsA.reset();\r\n\t\tthis.triangleIntersectsB.reset();\r\n\t\tthis.intersectionEdges = [];\r\n\r\n\t}\r\n\r\n}\r\n","import { Matrix4, Matrix3, Triangle } from 'three';\r\nimport {\r\n\tgetHitSide,\r\n\tcollectIntersectingTriangles,\r\n\tappendAttributeFromTriangle,\r\n\tappendAttributesFromIndices,\r\n\tgetOperationAction,\r\n\tSKIP_TRI, ADD_TRI, INVERT_TRI,\r\n} from './operationsUtils.js';\r\n\r\nconst _matrix = new Matrix4();\r\nconst _normalMatrix = new Matrix3();\r\nconst _triA = new Triangle();\r\nconst _triB = new Triangle();\r\nconst _tri = new Triangle();\r\nconst _barycoordTri = new Triangle();\r\n\r\nfunction getFirstIdFromSet( set ) {\r\n\r\n\tfor ( const id of set ) return id;\r\n\r\n}\r\n\r\n// runs the given operation against a and b using the splitter and appending data to the\r\n// typedAttributeData object.\r\nexport function performOperation( a, b, operation, splitter, typedAttributeData, options ) {\r\n\r\n\tconst { useGroups = true } = options;\r\n\tconst { aIntersections, bIntersections } = collectIntersectingTriangles( a, b );\r\n\r\n\tconst resultGroups = [];\r\n\tlet resultMaterials = null;\r\n\r\n\tlet groupOffset;\r\n\tgroupOffset = useGroups ? 0 : - 1;\r\n\tperformWholeTriangleOperations( a, b, aIntersections, operation, false, typedAttributeData, groupOffset );\r\n\tperformSplitTriangleOperations( a, b, aIntersections, operation, false, splitter, typedAttributeData, groupOffset );\r\n\r\n\tgroupOffset = useGroups ? a.geometry.groups.length || 1 : - 1;\r\n\tperformWholeTriangleOperations( b, a, bIntersections, operation, true, typedAttributeData, groupOffset );\r\n\tperformSplitTriangleOperations( b, a, bIntersections, operation, true, splitter, typedAttributeData, groupOffset );\r\n\r\n\treturn {\r\n\t\tgroups: resultGroups,\r\n\t\tmaterials: resultMaterials\r\n\t};\r\n\r\n}\r\n\r\n// perform triangle splitting and CSG operations on the set of split triangles\r\nfunction performSplitTriangleOperations( a, b, intersectionMap, operation, invert, splitter, attributeInfo, groupOffset = 0 ) {\r\n\r\n\t// transforms into the local frame of matrix b\r\n\t_matrix\r\n\t\t.copy( b.matrixWorld )\r\n\t\t.invert()\r\n\t\t.multiply( a.matrixWorld );\r\n\r\n\t_normalMatrix.getNormalMatrix( a.matrixWorld );\r\n\r\n\tconst groupIndices = a.geometry.groupIndices;\r\n\tconst aIndex = a.geometry.index;\r\n\tconst aPosition = a.geometry.attributes.position;\r\n\r\n\tconst bBVH = b.geometry.boundsTree;\r\n\tconst bIndex = b.geometry.index;\r\n\tconst bPosition = b.geometry.attributes.position;\r\n\tconst splitIds = intersectionMap.ids;\r\n\tconst intersectionSet = intersectionMap.intersectionSet;\r\n\r\n\t// iterate over all split triangle indices\r\n\tfor ( let i = 0, l = splitIds.length; i < l; i ++ ) {\r\n\r\n\t\tconst ia = splitIds[ i ];\r\n\t\tconst groupIndex = groupOffset === - 1 ? 0 : groupIndices[ ia ] + groupOffset;\r\n\t\tconst attrSet = attributeInfo.getGroupSet( groupIndex );\r\n\r\n\t\t// get the triangle in the geometry B local frame\r\n\t\tconst ia3 = 3 * ia;\r\n\t\tconst ia0 = aIndex.getX( ia3 + 0 );\r\n\t\tconst ia1 = aIndex.getX( ia3 + 1 );\r\n\t\tconst ia2 = aIndex.getX( ia3 + 2 );\r\n\t\t_triA.a.fromBufferAttribute( aPosition, ia0 ).applyMatrix4( _matrix );\r\n\t\t_triA.b.fromBufferAttribute( aPosition, ia1 ).applyMatrix4( _matrix );\r\n\t\t_triA.c.fromBufferAttribute( aPosition, ia2 ).applyMatrix4( _matrix );\r\n\r\n\t\t// initialize the splitter with the triangle from geometry A\r\n\t\tsplitter.initialize( _triA );\r\n\r\n\t\t// split the triangle with the intersecting triangles from B\r\n\t\tconst intersectingIndices = intersectionSet[ ia ];\r\n\t\tfor ( let ib = 0, l = intersectingIndices.length; ib < l; ib ++ ) {\r\n\r\n\t\t\tconst ib3 = 3 * intersectingIndices[ ib ];\r\n\t\t\tconst ib0 = bIndex.getX( ib3 + 0 );\r\n\t\t\tconst ib1 = bIndex.getX( ib3 + 1 );\r\n\t\t\tconst ib2 = bIndex.getX( ib3 + 2 );\r\n\t\t\t_triB.a.fromBufferAttribute( bPosition, ib0 );\r\n\t\t\t_triB.b.fromBufferAttribute( bPosition, ib1 );\r\n\t\t\t_triB.c.fromBufferAttribute( bPosition, ib2 );\r\n\t\t\tsplitter.splitByTriangle( _triB );\r\n\r\n\t\t}\r\n\r\n\t\t// for all triangles in the split result\r\n\t\tconst triangles = splitter.triangles;\r\n\t\tfor ( let ib = 0, l = triangles.length; ib < l; ib ++ ) {\r\n\r\n\t\t\t// get the barycentric coordinates of the clipped triangle to add\r\n\t\t\tconst clippedTri = triangles[ ib ];\r\n\r\n\t\t\t// try to use the side derived from the clipping but if it turns out to be\r\n\t\t\t// uncertain then fall back to the raycasting approach\r\n\t\t\tconst hitSide = getHitSide( clippedTri, bBVH );\r\n\t\t\t// let hitSide = clippedTri.side;\r\n\t\t\t// if ( true || hitSide === null ) {\r\n\r\n\t\t\t// \thitSide = getHitSide( clippedTri, bBVH );\r\n\r\n\t\t\t// }\r\n\r\n\t\t\tconst action = getOperationAction( operation, hitSide, invert );\r\n\t\t\tif ( action !== SKIP_TRI ) {\r\n\r\n\t\t\t\t_triA.getBarycoord( clippedTri.a, _barycoordTri.a );\r\n\t\t\t\t_triA.getBarycoord( clippedTri.b, _barycoordTri.b );\r\n\t\t\t\t_triA.getBarycoord( clippedTri.c, _barycoordTri.c );\r\n\t\t\t\tswitch ( action ) {\r\n\r\n\t\t\t\t\tcase ADD_TRI:\r\n\t\t\t\t\t\tappendAttributeFromTriangle( ia, _barycoordTri, a.geometry, a.matrixWorld, _normalMatrix, attrSet );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase INVERT_TRI:\r\n\t\t\t\t\t\tappendAttributeFromTriangle( ia, _barycoordTri, a.geometry, a.matrixWorld, _normalMatrix, attrSet, true );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn splitIds.length;\r\n\r\n}\r\n\r\n// perform CSG operations on the set of whole triangles using a half edge structure\r\n// at the moment this isn't always faster due to overhead of building the half edge structure\r\n// and degraded connectivity due to split triangles.\r\n\r\nfunction performWholeTriangleOperations( a, b, splitTriSet, operation, invert, attributeInfo, groupOffset = 0 ) {\r\n\r\n\t// matrix for transforming into the local frame of geometry b\r\n\t_matrix\r\n\t\t.copy( b.matrixWorld )\r\n\t\t.invert()\r\n\t\t.multiply( a.matrixWorld );\r\n\r\n\t_normalMatrix.getNormalMatrix( a.matrixWorld );\r\n\r\n\tconst bBVH = b.geometry.boundsTree;\r\n\tconst groupIndices = a.geometry.groupIndices;\r\n\tconst aIndex = a.geometry.index;\r\n\tconst aAttributes = a.geometry.attributes;\r\n\tconst aPosition = aAttributes.position;\r\n\r\n\tconst stack = [];\r\n\tconst halfEdges = a.geometry.halfEdges;\r\n\tconst traverseSet = new Set();\r\n\tfor ( let i = 0, l = aIndex.count / 3; i < l; i ++ ) {\r\n\r\n\t\tif ( ! ( i in splitTriSet.intersectionSet ) ) {\r\n\r\n\t\t\ttraverseSet.add( i );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\twhile ( traverseSet.size > 0 ) {\r\n\r\n\t\tconst id = getFirstIdFromSet( traverseSet );\r\n\t\ttraverseSet.delete( id );\r\n\r\n\t\tstack.push( id );\r\n\r\n\t\t// get the vertex indices\r\n\t\tconst i3 = 3 * id;\r\n\t\tconst i0 = aIndex.getX( i3 + 0 );\r\n\t\tconst i1 = aIndex.getX( i3 + 1 );\r\n\t\tconst i2 = aIndex.getX( i3 + 2 );\r\n\r\n\t\t// get the vertex position in the frame of geometry b so we can\r\n\t\t// perform hit testing\r\n\t\t_tri.a.fromBufferAttribute( aPosition, i0 ).applyMatrix4( _matrix );\r\n\t\t_tri.b.fromBufferAttribute( aPosition, i1 ).applyMatrix4( _matrix );\r\n\t\t_tri.c.fromBufferAttribute( aPosition, i2 ).applyMatrix4( _matrix );\r\n\r\n\t\t// get the side and decide if we need to cull the triangle based on the operation\r\n\t\tconst hitSide = getHitSide( _tri, bBVH );\r\n\t\tconst action = getOperationAction( operation, hitSide, invert );\r\n\t\twhile ( stack.length > 0 ) {\r\n\r\n\t\t\tconst currId = stack.pop();\r\n\t\t\tconst groupIndex = groupOffset === - 1 ? 0 : groupIndices[ currId ] + groupOffset;\r\n\t\t\tconst attrSet = attributeInfo.getGroupSet( groupIndex );\r\n\r\n\t\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\tconst sid = halfEdges.getSiblingTriangleIndex( currId, i );\r\n\t\t\t\tif ( sid !== - 1 && traverseSet.has( sid ) ) {\r\n\r\n\t\t\t\t\tstack.push( sid );\r\n\t\t\t\t\ttraverseSet.delete( sid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst i3 = 3 * currId;\r\n\t\t\tconst i0 = aIndex.getX( i3 + 0 );\r\n\t\t\tconst i1 = aIndex.getX( i3 + 1 );\r\n\t\t\tconst i2 = aIndex.getX( i3 + 2 );\r\n\r\n\t\t\tswitch ( action ) {\r\n\r\n\t\t\t\tcase ADD_TRI:\r\n\t\t\t\t\tappendAttributesFromIndices( i0, i1, i2, aAttributes, a.matrixWorld, _normalMatrix, attrSet );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase INVERT_TRI:\r\n\t\t\t\t\tappendAttributesFromIndices( i2, i1, i0, aAttributes, a.matrixWorld, _normalMatrix, attrSet, invert );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n","import { BufferAttribute } from 'three';\r\nimport { TriangleSplitter } from './TriangleSplitter.js';\r\nimport { TypedAttributeData } from './TypedAttributeData.js';\r\nimport { OperationDebugData } from './OperationDebugData.js';\r\nimport { performOperation } from './operations.js';\r\nimport { setDebugContext } from './operationsUtils.js';\r\nimport { Brush } from './Brush.js';\r\n\r\n// applies the given set of attribute data to the provided geometry. If the attributes are\r\n// not large enough to hold the new set of data then new attributes will be created. Otherwise\r\n// the existing attributes will be used and draw range updated to accommodate the new size.\r\nfunction applyToGeometry( geometry, referenceGeometry, groups, attributeInfo ) {\r\n\r\n\tlet needsDisposal = false;\r\n\tlet drawRange = - 1;\r\n\tconst groupCount = attributeInfo.groupCount;\r\n\r\n\t// set the data\r\n\tconst attributes = geometry.attributes;\r\n\tconst rootAttrSet = attributeInfo.groupAttributes[ 0 ];\r\n\tfor ( const key in rootAttrSet ) {\r\n\r\n\t\tconst requiredLength = attributeInfo.getTotalLength( key, groupCount );\r\n\t\tconst type = rootAttrSet[ key ].type;\r\n\t\tlet attr = attributes[ key ];\r\n\t\tif ( ! attr || attr.array.length < requiredLength ) {\r\n\r\n\t\t\t// create the attribute if it doesn't exist yet\r\n\t\t\tconst refAttr = referenceGeometry.attributes[ key ];\r\n\t\t\tattr = new BufferAttribute( new type( requiredLength ), refAttr.itemSize, refAttr.normalized );\r\n\t\t\tgeometry.setAttribute( key, attr );\r\n\t\t\tneedsDisposal = true;\r\n\r\n\t\t}\r\n\r\n\t\tlet offset = 0;\r\n\t\tfor ( let i = 0; i < groupCount; i ++ ) {\r\n\r\n\t\t\tconst { array, type, length } = attributeInfo.groupAttributes[ i ][ key ];\r\n\t\t\tconst trimmedArray = new type( array.buffer, 0, length );\r\n\t\t\tattr.array.set( trimmedArray, offset );\r\n\t\t\toffset += trimmedArray.length;\r\n\r\n\t\t}\r\n\r\n\t\tattr.needsUpdate = true;\r\n\t\tdrawRange = requiredLength / attr.itemSize;\r\n\r\n\t}\r\n\r\n\t// update the draw range\r\n\tgeometry.setDrawRange( 0, drawRange );\r\n\tgeometry.clearGroups();\r\n\r\n\tlet groupOffset = 0;\r\n\tfor ( let i = 0; i < groupCount; i ++ ) {\r\n\r\n\t\tconst posCount = attributeInfo.getGroupArray( 'position', i ).length / 3;\r\n\t\tif ( posCount !== 0 ) {\r\n\r\n\t\t\tconst group = groups[ i ];\r\n\t\t\tgeometry.addGroup( groupOffset, posCount, group.materialIndex );\r\n\t\t\tgroupOffset += posCount;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// remove or update the index appropriately\r\n\tif ( geometry.index ) {\r\n\r\n\t\tconst indexArray = geometry.index.array;\r\n\t\tif ( indexArray.length < drawRange ) {\r\n\r\n\t\t\tgeometry.index = null;\r\n\t\t\tneedsDisposal = true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( let i = 0, l = indexArray.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tindexArray[ i ] = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// remove the bounds tree if it exists because its now out of date\r\n\t// TODO: can we have this dispose in the same way that a brush does?\r\n\tgeometry.boundsTree = null;\r\n\r\n\tif ( needsDisposal ) {\r\n\r\n\t\tgeometry.dispose();\r\n\r\n\t}\r\n\r\n\treturn geometry;\r\n\r\n}\r\n\r\nfunction getMaterialList( groups, materials ) {\r\n\r\n\tlet result = materials;\r\n\tif ( ! Array.isArray( materials ) ) {\r\n\r\n\t\tresult = [];\r\n\t\tgroups.forEach( g => {\r\n\r\n\t\t\tresult[ g.materialIndex ] = materials;\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\n// Utility class for performing CSG operations\r\nexport class Evaluator {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.triangleSplitter = new TriangleSplitter();\r\n\t\tthis.attributeData = new TypedAttributeData();\r\n\t\tthis.attributes = [ 'position', 'uv', 'normal' ];\r\n\t\tthis.useGroups = true;\r\n\t\tthis.debug = new OperationDebugData();\r\n\r\n\t}\r\n\r\n\tevaluate( a, b, operation, targetBrush = new Brush() ) {\r\n\r\n\t\ta.prepareGeometry();\r\n\t\tb.prepareGeometry();\r\n\r\n\t\tconst { triangleSplitter, attributeData, attributes, useGroups, debug } = this;\r\n\t\tconst targetGeometry = targetBrush.geometry;\r\n\t\tconst aAttributes = a.geometry.attributes;\r\n\t\tfor ( let i = 0, l = attributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst key = attributes[ i ];\r\n\t\t\tconst attr = aAttributes[ key ];\r\n\t\t\tattributeData.initializeArray( key, attr.array.constructor );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( const key in attributeData.attributes ) {\r\n\r\n\t\t\tif ( ! attributes.includes( key ) ) {\r\n\r\n\t\t\t\tattributeData.delete( key );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( const key in targetGeometry.attributes ) {\r\n\r\n\t\t\tif ( ! attributes.includes( key ) ) {\r\n\r\n\t\t\t\ttargetGeometry.deleteAttribute( key );\r\n\t\t\t\ttargetGeometry.dispose();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tattributeData.clear();\r\n\r\n\t\tif ( debug.enabled ) {\r\n\r\n\t\t\tdebug.reset();\r\n\t\t\tsetDebugContext( debug );\r\n\r\n\t\t}\r\n\r\n\t\tperformOperation( a, b, operation, triangleSplitter, attributeData, { useGroups } );\r\n\r\n\t\tif ( debug.enabled ) {\r\n\r\n\t\t\tsetDebugContext( null );\r\n\r\n\t\t}\r\n\r\n\t\t// structure the groups appropriately\r\n\t\tconst aGroups = ! useGroups || a.geometry.groups.length === 0 ?\r\n\t\t\t[ { start: 0, count: Infinity, materialIndex: 0 } ] :\r\n\t\t\ta.geometry.groups.map( group => ( { ...group } ) );\r\n\r\n\t\tconst bGroups = ! useGroups || b.geometry.groups.length === 0 ?\r\n\t\t\t[ { start: 0, count: Infinity, materialIndex: 0 } ] :\r\n\t\t\tb.geometry.groups.map( group => ( { ...group } ) );\r\n\r\n\t\t// get the materials\r\n\t\tconst aMaterials = getMaterialList( aGroups, a.material );\r\n\t\tconst bMaterials = getMaterialList( bGroups, b.material );\r\n\r\n\t\t// adjust the material index\r\n\t\tbGroups.forEach( g => {\r\n\r\n\t\t\tg.materialIndex += aMaterials.length;\r\n\r\n\t\t} );\r\n\r\n\t\t// apply groups and attribute data to the geometry\r\n\t\tapplyToGeometry( targetGeometry, a.geometry, [ ...aGroups, ...bGroups ], attributeData );\r\n\r\n\t\t// generate the minimum set of materials needed for the list of groups and adjust the groups\r\n\t\t// if they're needed\r\n\t\tconst groups = targetGeometry.groups;\r\n\t\tif ( useGroups ) {\r\n\r\n\t\t\tconst materialMap = new Map();\r\n\t\t\tconst allMaterials = [ ...aMaterials, ...bMaterials ];\r\n\r\n\t\t\t// create a map from old to new index and remove materials that aren't used\r\n\t\t\tlet newIndex = 0;\r\n\t\t\tfor ( let i = 0, l = allMaterials.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst foundGroup = Boolean( groups.find( group => group.materialIndex === i ) );\r\n\t\t\t\tif ( ! foundGroup ) {\r\n\r\n\t\t\t\t\tallMaterials[ i ] = null;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmaterialMap.set( i, newIndex );\r\n\t\t\t\t\tnewIndex ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// adjust the groups indices\r\n\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst group = groups[ i ];\r\n\t\t\t\tgroup.materialIndex = materialMap.get( group.materialIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttargetBrush.material = allMaterials.filter( material => material );\r\n\r\n\t\t}\r\n\r\n\t\treturn targetBrush;\r\n\r\n\t}\r\n\r\n\tevaluateHierarchy( root, target = new Brush() ) {\r\n\r\n\t\troot.updateMatrixWorld( true );\r\n\r\n\t\tconst flatTraverse = ( obj, cb ) => {\r\n\r\n\t\t\tconst children = obj.children;\r\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = children[ i ];\r\n\t\t\t\tif ( child.isOperationGroup ) {\r\n\r\n\t\t\t\t\tflatTraverse( child, cb );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcb( child );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\r\n\t\tconst traverse = ( brush ) => {\r\n\r\n\t\t\tconst children = brush.children;\r\n\t\t\tlet didChange = false;\r\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = children[ i ];\r\n\t\t\t\tdidChange = traverse( child ) || didChange;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst isDirty = brush.isDirty();\r\n\t\t\tif ( isDirty ) {\r\n\r\n\t\t\t\tbrush.markUpdated();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( didChange && ! brush.isOperationGroup ) {\r\n\r\n\t\t\t\tlet result;\r\n\t\t\t\tflatTraverse( brush, child => {\r\n\r\n\t\t\t\t\tif ( ! result ) {\r\n\r\n\t\t\t\t\t\tresult = this.evaluate( brush, child, child.operation );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tresult = this.evaluate( result, child, child.operation );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tbrush._cachedGeometry = result.geometry;\r\n\t\t\t\tbrush._cachedMaterials = result.material;\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn didChange || isDirty;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\ttraverse( root );\r\n\r\n\t\ttarget.geometry = root._cachedGeometry;\r\n\t\ttarget.material = root._cachedMaterials;\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\treset() {\r\n\r\n\t\tthis.triangleSplitter.reset();\r\n\r\n\t}\r\n\r\n}\r\n","import { BufferGeometry } from 'three';\r\nimport { Brush } from './Brush.js';\r\nimport { ADDITION } from './constants.js';\r\n\r\nexport class Operation extends Brush {\r\n\r\n\tconstructor( ...args ) {\r\n\r\n\t\tsuper( ...args );\r\n\r\n\t\tthis.isOperation = true;\r\n\t\tthis.operation = ADDITION;\r\n\r\n\t\tthis._cachedGeometry = new BufferGeometry();\r\n\t\tthis._cachedMaterials = null;\r\n\t\tthis._previousOperation = null;\r\n\r\n\t}\r\n\r\n\tmarkUpdated() {\r\n\r\n\t\tsuper.markUpdated();\r\n\t\tthis._previousOperation = this.operation;\r\n\r\n\t}\r\n\r\n\tisDirty() {\r\n\r\n\t\treturn this.operation !== this._previousOperation || super.isDirty();\r\n\r\n\t}\r\n\r\n\tinsertBefore( brush ) {\r\n\r\n\t\tconst parent = this.parent;\r\n\t\tconst index = parent.children.indexOf( this );\r\n\t\tparent.children.splice( index, 0, brush );\r\n\r\n\t\t// TODO: throw event\r\n\r\n\t}\r\n\r\n\tinsertAfter( brush ) {\r\n\r\n\t\tconst parent = this.parent;\r\n\t\tconst index = parent.children.indexOf( this );\r\n\t\tparent.children.splice( index + 1, 0, brush );\r\n\r\n\t\t// TODO: throw event\r\n\r\n\t}\r\n\r\n}\r\n","import { Group, Matrix4 } from 'three';\r\n\r\nexport class OperationGroup extends Group {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\t\tthis.isOperationGroup = true;\r\n\t\tthis._previousMatrix = new Matrix4();\r\n\r\n\t}\r\n\r\n\tmarkUpdated() {\r\n\r\n\t\tthis._previousMatrix.copy( this.matrix );\r\n\r\n\t}\r\n\r\n\tisDirty() {\r\n\r\n\t\tconst { matrix, _previousMatrix } = this;\r\n\t\tconst el1 = matrix.elements;\r\n\t\tconst el2 = _previousMatrix.elements;\r\n\t\tfor ( let i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tif ( el1[ i ] !== el2[ i ] ) {\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n}\r\n","import { Color } from 'three';\r\n\r\nfunction addWorldPosition( shader ) {\r\n\r\n\tif ( /varying\\s+vec3\\s+wPosition/.test( shader.vertexShader ) ) return;\r\n\r\n\tshader.vertexShader = `\r\n\t\t\tvarying vec3 wPosition;\r\n\t\t\t${shader.vertexShader}\r\n\t\t`.replace(\r\n\t\t/#include <displacementmap_vertex>/,\r\n\t\tv =>\r\n\t\t\t`${v}\r\n\t\t\t\twPosition = (modelMatrix * vec4( transformed, 1.0 )).xyz;\r\n\t\t\t\t`,\r\n\t);\r\n\r\n\tshader.fragmentShader = `\r\n\t\tvarying vec3 wPosition;\r\n\t\t${shader.fragmentShader}\r\n\t\t`;\r\n\r\n\treturn shader;\r\n\r\n}\r\n\r\nexport function csgGridShaderMixin( shader ) {\r\n\r\n\tshader.uniforms = {\r\n\t\t...shader.uniforms,\r\n\t\tcheckerboardColor: { value: new Color( 0x111111 ) }\r\n\t};\r\n\r\n\taddWorldPosition( shader );\r\n\r\n\tshader.defines = { CSG_GRID: 1 };\r\n\r\n\tshader.fragmentShader = shader.fragmentShader.replace(\r\n\t\t/#include <common>/,\r\n\t\tv =>\r\n\t\t/* glsl */`\r\n\t\t\t${v}\r\n\r\n\t\t\tuniform vec3 checkerboardColor;\r\n\t\t\tfloat getCheckerboard( vec2 p, float scale ) {\r\n\r\n\t\t\t\tp /= scale;\r\n\t\t\t\tp += vec2( 0.5 );\r\n\r\n\t\t\t\tvec2 line = mod( p, 2.0 ) - vec2( 1.0 );\r\n\t\t\t\tline = abs( line );\r\n\r\n\t\t\t\tvec2 pWidth = fwidth( line );\r\n\t\t\t\tvec2 value = smoothstep( 0.5 - pWidth / 2.0, 0.5 + pWidth / 2.0, line );\r\n\t\t\t\tfloat result = value.x * value.y + ( 1.0 - value.x ) * ( 1.0 - value.y );\r\n\r\n\t\t\t\treturn result;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfloat getGrid( vec2 p, float scale, float thickness ) {\r\n\r\n\t\t\t\tp /= 0.5 * scale;\r\n\r\n\t\t\t\tvec2 stride = mod( p, 2.0 ) - vec2( 1.0 );\r\n\t\t\t\tstride = abs( stride );\r\n\r\n\t\t\t\tvec2 pWidth = fwidth( p );\r\n\t\t\t\tvec2 line = smoothstep( 1.0 - pWidth / 2.0, 1.0 + pWidth / 2.0, stride + thickness * pWidth );\r\n\r\n\t\t\t\treturn max( line.x, line.y );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvec3 getFaceColor( vec2 p, vec3 color ) {\r\n\r\n\t\t\t\tfloat checkLarge = getCheckerboard( p, 1.0 );\r\n\t\t\t\tfloat checkSmall = abs( getCheckerboard( p, 0.1 ) );\r\n\t\t\t\tfloat lines = getGrid( p, 10.0, 1.0 );\r\n\r\n\t\t\t\tvec3 checkColor = mix(\r\n\t\t\t\t\tvec3( 0.7 ) * color,\r\n\t\t\t\t\tvec3( 1.0 ) * color,\r\n\t\t\t\t\tcheckSmall * 0.4 + checkLarge * 0.6\r\n\t\t\t\t);\r\n\r\n\t\t\t\tvec3 gridColor = vec3( 1.0 );\r\n\r\n\t\t\t\treturn mix( checkColor, gridColor, lines );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfloat angleBetween( vec3 a, vec3 b ) {\r\n\r\n\t\t\t\treturn acos( abs( dot( a, b ) ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvec3 planeProject( vec3 norm, vec3 other ) {\r\n\r\n\t\t\t\tfloat d = dot( norm, other );\r\n\t\t\t\treturn normalize( other - norm * d );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvec3 getBlendFactors( vec3 norm ) {\r\n\r\n\t\t\t\tvec3 xVec = vec3( 1.0, 0.0, 0.0 );\r\n\t\t\t\tvec3 yVec = vec3( 0.0, 1.0, 0.0 );\r\n\t\t\t\tvec3 zVec = vec3( 0.0, 0.0, 1.0 );\r\n\r\n\t\t\t\tvec3 projX = planeProject( xVec, norm );\r\n\t\t\t\tvec3 projY = planeProject( yVec, norm );\r\n\t\t\t\tvec3 projZ = planeProject( zVec, norm );\r\n\r\n\t\t\t\tfloat xAngle = max(\r\n\t\t\t\t\tangleBetween( xVec, projY ),\r\n\t\t\t\t\tangleBetween( xVec, projZ )\r\n\t\t\t\t);\r\n\r\n\t\t\t\tfloat yAngle = max(\r\n\t\t\t\t\tangleBetween( yVec, projX ),\r\n\t\t\t\t\tangleBetween( yVec, projZ )\r\n\t\t\t\t);\r\n\r\n\t\t\t\tfloat zAngle = max(\r\n\t\t\t\t\tangleBetween( zVec, projX ),\r\n\t\t\t\t\tangleBetween( zVec, projY )\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn vec3( xAngle, yAngle, zAngle ) / ( 0.5 * PI );\r\n\r\n\t\t\t}\r\n\t\t` ).replace(\r\n\t\t/#include <normal_fragment_maps>/,\r\n\t\tv =>\r\n\t\t/* glsl */`${v}\r\n\t\t\t\t#if CSG_GRID\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\r\n\r\n\t\t\t\t\tfloat yCont = abs( dot( vec3( 0.0, 1.0, 0.0 ), worldNormal ) );\r\n\t\t\t\t\tfloat zCont = abs( dot( vec3( 0.0, 0.0, 1.0 ), worldNormal ) );\r\n\t\t\t\t\tfloat xCont = abs( dot( vec3( 1.0, 0.0, 0.0 ), worldNormal ) );\r\n\r\n\t\t\t\t\tvec3 factors = getBlendFactors( worldNormal );\r\n\t\t\t\t\tfactors = smoothstep( vec3( 0.475 ), vec3( 0.525 ), vec3( 1.0 ) - factors );\r\n\r\n\t\t\t\t\tfloat weight = factors.x + factors.y + factors.z;\r\n\t\t\t\t\tfactors /= weight;\r\n\r\n\t\t\t\t\tvec3 color =\r\n\t\t\t\t\t\tgetFaceColor( wPosition.yz, diffuseColor.rgb ) * factors.x +\r\n\t\t\t\t\t\tgetFaceColor( wPosition.xz, diffuseColor.rgb ) * factors.y +\r\n\t\t\t\t\t\tgetFaceColor( wPosition.xy, diffuseColor.rgb ) * factors.z;\r\n\r\n\t\t\t\t\tdiffuseColor.rgb = color;\r\n\r\n\t\t\t\t}\r\n\t\t\t\t#endif\r\n\t\t\t\t`,\r\n\t);\r\n\r\n\treturn shader;\r\n\r\n}\r\n","import { MeshPhongMaterial } from 'three';\r\nimport { csgGridShaderMixin } from './shaderUtils.js';\r\n\r\nexport class GridMaterial extends MeshPhongMaterial {\r\n\r\n\tget enableGrid() {\r\n\r\n\t\treturn Boolean( this._enableGrid );\r\n\r\n\t}\r\n\r\n\tset enableGrid( v ) {\r\n\r\n\t\tif ( this._enableGrid !== v ) {\r\n\r\n\t\t\tthis._enableGrid = v;\r\n\t\t\tthis.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconstructor( ...args ) {\r\n\r\n\t\tsuper( ...args );\r\n\t\tthis.enableGrid = true;\r\n\r\n\t}\r\n\r\n\tonBeforeCompile( shader ) {\r\n\r\n\t\tcsgGridShaderMixin( shader );\r\n\t\tshader.defines.CSG_GRID = Number( this.enableGrid );\r\n\r\n\t}\r\n\r\n\tcustomProgramCacheKey() {\r\n\r\n\t\treturn this.enableGrid;\r\n\r\n\t}\r\n\r\n}\r\n","import { BufferAttribute, Color, MathUtils } from 'three';\r\n\r\nexport function getTriangleDefinitions( ...triangles ) {\r\n\r\n\tfunction getVectorDefinition( v ) {\r\n\r\n\t\treturn /* js */`new THREE.Vector3( ${ v.x }, ${ v.y }, ${ v.z } )`;\r\n\r\n\t}\r\n\r\n\treturn triangles.map( t => {\r\n\r\n\t\treturn /* js */`\r\n\t\t\tnew THREE.Triangle(\r\n\t\t\t\t${ getVectorDefinition( t.a ) },\r\n\t\t\t\t${ getVectorDefinition( t.b ) },\r\n\t\t\t\t${ getVectorDefinition( t.c ) },\r\n\t\t\t)`.substring( 1 );\r\n\r\n\t} );\r\n\r\n}\r\n\r\nexport function logTriangleDefinitions( ...triangles ) {\r\n\r\n\tconsole.log( getTriangleDefinitions( ...triangles ).join( ',\\n' ) );\r\n\r\n}\r\n\r\nexport function generateRandomTriangleColors( geometry ) {\r\n\r\n\tconst position = geometry.attributes.position;\r\n\tconst array = new Float32Array( position.count * 3 );\r\n\r\n\tconst color = new Color();\r\n\tfor ( let i = 0, l = array.length; i < l; i += 9 ) {\r\n\r\n\t\tcolor.setHSL(\r\n\t\t\tMath.random(),\r\n\t\t\tMathUtils.lerp( 0.5, 1.0, Math.random() ),\r\n\t\t\tMathUtils.lerp( 0.5, 0.75, Math.random() ),\r\n\t\t);\r\n\r\n\t\tarray[ i + 0 ] = color.r;\r\n\t\tarray[ i + 1 ] = color.g;\r\n\t\tarray[ i + 2 ] = color.b;\r\n\r\n\t\tarray[ i + 3 ] = color.r;\r\n\t\tarray[ i + 4 ] = color.g;\r\n\t\tarray[ i + 5 ] = color.b;\r\n\r\n\t\tarray[ i + 6 ] = color.r;\r\n\t\tarray[ i + 7 ] = color.g;\r\n\t\tarray[ i + 8 ] = color.b;\r\n\r\n\t}\r\n\r\n\tgeometry.setAttribute( 'color', new BufferAttribute( array, 3 ) );\r\n\r\n}\r\n","import { Group, Mesh, LineSegments, LineBasicMaterial, MeshPhongMaterial, BufferGeometry, BufferAttribute } from 'three';\r\n\r\nexport class TriangleSetHelper extends Group {\r\n\r\n\tget color() {\r\n\r\n\t\treturn this._mesh.material.color;\r\n\r\n\t}\r\n\r\n\tget side() {\r\n\r\n\t\treturn this._mesh.material.side;\r\n\r\n\t}\r\n\r\n\tset side( v ) {\r\n\r\n\t\tthis._mesh.material.side = v;\r\n\r\n\t}\r\n\r\n\tconstructor( triangles = [] ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\t\tconst lineGeom = new BufferGeometry();\r\n\t\tthis._mesh = new Mesh( geometry, new MeshPhongMaterial( {\r\n\t\t\tflatShading: true,\r\n\t\t\ttransparent: true,\r\n\t\t\topacity: 0.25,\r\n\t\t} ) );\r\n\t\tthis._lines = new LineSegments( lineGeom, new LineBasicMaterial() );\r\n\t\tthis._mesh.material.color = this._lines.material.color;\r\n\r\n\t\tthis._lines.frustumCulled = false;\r\n\t\tthis._mesh.frustumCulled = false;\r\n\r\n\t\tthis.add( this._lines, this._mesh );\r\n\r\n\t\tthis.setTriangles( triangles );\r\n\r\n\t}\r\n\r\n\tsetTriangles( triangles ) {\r\n\r\n\t\tconst triPositions = new Float32Array( 3 * 3 * triangles.length );\r\n\t\tconst linePositions = new Float32Array( 6 * 3 * triangles.length );\r\n\t\tfor ( let i = 0, l = triangles.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst i9 = 9 * i;\r\n\t\t\tconst i18 = 18 * i;\r\n\t\t\tconst tri = triangles[ i ];\r\n\r\n\t\t\ttri.a.toArray( triPositions, i9 + 0 );\r\n\t\t\ttri.b.toArray( triPositions, i9 + 3 );\r\n\t\t\ttri.c.toArray( triPositions, i9 + 6 );\r\n\r\n\r\n\t\t\ttri.a.toArray( linePositions, i18 + 0 );\r\n\t\t\ttri.b.toArray( linePositions, i18 + 3 );\r\n\r\n\t\t\ttri.b.toArray( linePositions, i18 + 6 );\r\n\t\t\ttri.c.toArray( linePositions, i18 + 9 );\r\n\r\n\t\t\ttri.c.toArray( linePositions, i18 + 12 );\r\n\t\t\ttri.a.toArray( linePositions, i18 + 15 );\r\n\r\n\t\t}\r\n\r\n\t\tthis._mesh.geometry.dispose();\r\n\t\tthis._mesh.geometry.setAttribute( 'position', new BufferAttribute( triPositions, 3 ) );\r\n\r\n\t\tthis._lines.geometry.dispose();\r\n\t\tthis._lines.geometry.setAttribute( 'position', new BufferAttribute( linePositions, 3 ) );\r\n\r\n\t}\r\n\r\n}\r\n","import { LineSegments } from 'three';\r\n\r\nexport class EdgesHelper extends LineSegments {\r\n\r\n\tget color() {\r\n\r\n\t\treturn this.material.color;\r\n\r\n\t}\r\n\r\n\tconstructor( edges = [] ) {\r\n\r\n\t\tsuper();\r\n\t\tthis.frustumCulled = false;\r\n\t\tthis.setEdges( edges );\r\n\r\n\t}\r\n\r\n\tsetEdges( edges ) {\r\n\r\n\t\tconst { geometry } = this;\r\n\t\tconst points = edges.flatMap( e => [ e.start, e.end ] );\r\n\t\tgeometry.dispose();\r\n\t\tgeometry.setFromPoints( points );\r\n\r\n\t}\r\n\r\n}\r\n","import { InstancedMesh, SphereBufferGeometry, MeshBasicMaterial, Matrix4 } from 'three';\r\n\r\nconst _matrix = new Matrix4();\r\nexport class PointsHelper extends InstancedMesh {\r\n\r\n\tget color() {\r\n\r\n\t\treturn this.material.color;\r\n\r\n\t}\r\n\r\n\tconstructor( count = 1000, points = [] ) {\r\n\r\n\t\tsuper( new SphereBufferGeometry( 0.025 ), new MeshBasicMaterial(), count );\r\n\t\tthis.frustumCulled = false;\r\n\t\tthis.setPoints( points );\r\n\r\n\t}\r\n\r\n\tsetPoints( points ) {\r\n\r\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst point = points[ i ];\r\n\t\t\t_matrix.makeTranslation( point.x, point.y, point.z );\r\n\t\t\tthis.setMatrixAt( i, _matrix );\r\n\r\n\t\t}\r\n\r\n\t\tthis.count = points.length;\r\n\r\n\t}\r\n\r\n}\r\n","import { Line3, Triangle, Vector3, Plane } from 'three';\r\nimport { EdgesHelper } from './EdgesHelper.js';\r\n\r\nconst _tri1 = new Triangle();\r\nconst _tri2 = new Triangle();\r\nconst _center = new Vector3();\r\nconst _center2 = new Vector3();\r\nconst _edgeCenter = new Vector3();\r\nconst _edgeCenter2 = new Vector3();\r\nconst _projected = new Vector3();\r\nconst _projected2 = new Vector3();\r\nconst _projectedDir = new Vector3();\r\nconst _projectedDir2 = new Vector3();\r\nconst _edgeDir = new Vector3();\r\nconst _edgeDir2 = new Vector3();\r\nconst _vec = new Vector3();\r\nconst _vec2 = new Vector3();\r\nconst _finalPoint = new Vector3();\r\nconst _finalPoint2 = new Vector3();\r\nconst _plane = new Plane();\r\nconst _plane2 = new Plane();\r\n\r\nfunction getTriangle( geometry, triIndex, target ) {\r\n\r\n\tconst i3 = 3 * triIndex;\r\n\tlet i0 = i3 + 0;\r\n\tlet i1 = i3 + 1;\r\n\tlet i2 = i3 + 2;\r\n\r\n\tconst indexAttr = geometry.index;\r\n\tconst posAttr = geometry.attributes.position;\r\n\tif ( indexAttr ) {\r\n\r\n\t\ti0 = indexAttr.getX( i0 );\r\n\t\ti1 = indexAttr.getX( i1 );\r\n\t\ti2 = indexAttr.getX( i2 );\r\n\r\n\t}\r\n\r\n\ttarget.a.fromBufferAttribute( posAttr, i0 );\r\n\ttarget.b.fromBufferAttribute( posAttr, i1 );\r\n\ttarget.c.fromBufferAttribute( posAttr, i2 );\r\n\r\n\treturn target;\r\n\r\n}\r\n\r\nexport class HalfEdgeHelper extends EdgesHelper {\r\n\r\n\tconstructor( geometry = null, halfEdges = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tif ( geometry && halfEdges ) {\r\n\r\n\t\t\tthis.setHalfEdges( geometry, halfEdges );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetHalfEdges( geometry, halfEdges ) {\r\n\r\n\t\tconst indexAttr = geometry.index;\r\n\t\tconst posAttr = geometry.attributes.position;\r\n\r\n\t\tconst vertKeys = [ 'a', 'b', 'c' ];\r\n\t\tconst edges = [];\r\n\t\tconst triCount = indexAttr ? indexAttr.count / 3 : posAttr.count / 3;\r\n\t\tfor ( let triIndex = 0; triIndex < triCount; triIndex ++ ) {\r\n\r\n\t\t\tgetTriangle( geometry, triIndex, _tri1 );\r\n\t\t\t_tri1.getMidpoint( _center );\r\n\t\t\t_tri1.getPlane( _plane );\r\n\t\t\tfor ( let e = 0; e < 3; e ++ ) {\r\n\r\n\t\t\t\tconst otherTriIndex = halfEdges.getSiblingTriangleIndex( triIndex, e );\r\n\t\t\t\tconst otherEdgeIndex = halfEdges.getSiblingEdgeIndex( triIndex, e );\r\n\t\t\t\tif ( otherTriIndex === - 1 ) {\r\n\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// get other triangle\r\n\t\t\t\tgetTriangle( geometry, otherTriIndex, _tri2 );\r\n\t\t\t\t_tri2.getPlane( _plane2 );\r\n\r\n\t\t\t\t// get triangle center\r\n\t\t\t\t_tri2.getMidpoint( _center2 );\r\n\r\n\t\t\t\t// get edge centers\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tconst nextE = ( e + 1 ) % 3;\r\n\t\t\t\t\tconst v0 = _tri1[ vertKeys[ e ] ];\r\n\t\t\t\t\tconst v1 = _tri1[ vertKeys[ nextE ] ];\r\n\t\t\t\t\t_edgeCenter.lerpVectors( v0, v1, 0.5 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tconst nextE = ( otherEdgeIndex + 1 ) % 3;\r\n\t\t\t\t\tconst v0 = _tri2[ vertKeys[ otherEdgeIndex ] ];\r\n\t\t\t\t\tconst v1 = _tri2[ vertKeys[ nextE ] ];\r\n\t\t\t\t\t_edgeCenter2.lerpVectors( v0, v1, 0.5 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// get the projected centers\r\n\t\t\t\t_plane.projectPoint( _center2, _projected );\r\n\t\t\t\t_plane2.projectPoint( _center, _projected2 );\r\n\r\n\t\t\t\t// get the directions so we can flip them if needed\r\n\t\t\t\t_projectedDir.subVectors( _projected, _center );\r\n\t\t\t\t_projectedDir2.subVectors( _projected2, _center2 );\r\n\r\n\t\t\t\t// get the directions so we can flip them if needed\r\n\t\t\t\t_edgeDir.subVectors( _edgeCenter, _center );\r\n\t\t\t\t_edgeDir2.subVectors( _edgeCenter2, _center2 );\r\n\r\n\t\t\t\tif ( _projectedDir.dot( _edgeDir ) < 0 ) {\r\n\r\n\t\t\t\t\t_projectedDir.multiplyScalar( - 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( _projectedDir2.dot( _edgeDir2 ) < 0 ) {\r\n\r\n\t\t\t\t\t_projectedDir2.multiplyScalar( - 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// find the new points after inversion\r\n\t\t\t\t_vec.addVectors( _center, _projectedDir );\r\n\t\t\t\t_vec2.addVectors( _center2, _projectedDir2 );\r\n\r\n\t\t\t\t// project the points onto the triangle edge. This would be better\r\n\t\t\t\t// if we clipped instead of chose the closest point\r\n\t\t\t\t_tri1.closestPointToPoint( _vec, _finalPoint );\r\n\t\t\t\t_tri2.closestPointToPoint( _vec2, _finalPoint2 );\r\n\r\n\t\t\t\tconst edge = new Line3();\r\n\t\t\t\tedge.start.copy( _center );\r\n\t\t\t\tedge.end.lerpVectors( _finalPoint, _finalPoint2, 0.5 );\r\n\t\t\t\tedges.push( edge );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.setEdges( edges );\r\n\r\n\t}\r\n\r\n}\r\n","export * from './core/Brush.js';\r\nexport * from './core/Evaluator.js';\r\nexport * from './core/Operation.js';\r\nexport * from './core/OperationGroup.js';\r\nexport * from './core/TriangleSplitter.js';\r\nexport * from './core/Evaluator.js';\r\nexport * from './core/HalfEdgeMap.js';\r\nexport * from './materials/GridMaterial.js';\r\n\r\nexport * from './core/constants.js';\r\nexport * from './core/debugUtils.js';\r\n\r\nexport * from './objects/TriangleSetHelper.js';\r\nexport * from './objects/EdgesHelper.js';\r\nexport * from './objects/PointsHelper.js';\r\nexport * from './objects/HalfEdgeHelper.js';\r\n","import * as THREE from \"three\";\r\nimport { IHoleSettings } from \"./shapes\";\r\n\r\ninterface IAwningMaterials {\r\n  default: any;\r\n  alu?: any;\r\n  fabric?: any[];\r\n}\r\n\r\nexport interface IAwningSettings {\r\n  type: string;\r\n  materials: IAwningMaterials;\r\n  depth: number;\r\n  opened: number;\r\n  top: number;\r\n  left: number;\r\n  right: number;\r\n  height: number;\r\n  z?: number;\r\n  stiffness: number;\r\n  segments: number;\r\n}\r\n\r\ninterface IAwning {\r\n  settings: IAwningSettings;\r\n  hole: IHoleSettings;\r\n}\r\n\r\nfunction awningFabric({ settings, hole }: IAwning) {\r\n  const thickness = 0.02;\r\n  const meshZ = 0.02;\r\n  const awningWidth = hole.width - settings.left - settings.right;\r\n  const controlpoint = {\r\n    x: 0 - settings.depth * (settings.stiffness / 2),\r\n    y: -settings.height + settings.height * (settings.stiffness / 2)\r\n  };\r\n\r\n  const shape = new THREE.Shape();\r\n  shape.moveTo(0, 0);\r\n  shape.bezierCurveTo(\r\n    0,\r\n    0,\r\n    controlpoint.x,\r\n    controlpoint.y,\r\n    -settings.depth,\r\n    -settings.height\r\n  );\r\n  shape.lineTo(-settings.depth, -settings.height + thickness);\r\n  shape.bezierCurveTo(\r\n    -settings.depth,\r\n    -settings.height + thickness,\r\n    controlpoint.x - thickness,\r\n    controlpoint.y + thickness,\r\n    -thickness,\r\n    0\r\n  );\r\n  shape.lineTo(0, 0);\r\n\r\n  const extrudeSettings = {\r\n    steps: 1,\r\n    depth: awningWidth / settings.segments,\r\n    bevelEnabled: false\r\n  };\r\n\r\n  const g = new THREE.Group();\r\n\r\n  for (var i = 0; i < settings.segments; i++) {\r\n    const geometry = new THREE.ExtrudeGeometry(shape, extrudeSettings);\r\n    const mesh = new THREE.Mesh(geometry, settings.materials.fabric[i % 2]);\r\n    mesh.position.x = (awningWidth / settings.segments) * i;\r\n    mesh.position.z = meshZ;\r\n    mesh.rotation.y = Math.PI / 2;\r\n    mesh.castShadow = true;\r\n    mesh.receiveShadow = true;\r\n    g.add(mesh);\r\n  }\r\n\r\n  return g;\r\n}\r\n\r\nexport function awning({ settings, hole }: IAwning) {\r\n  const awningWidth = hole.width - settings.left - settings.right;\r\n  const awningCenter = (settings.left - settings.right) / 2;\r\n  const awningY = hole.y + hole.height / 2 - settings.top;\r\n  const meshZ = 0.02;\r\n\r\n  settings.materials.alu = settings.materials.alu || settings.materials.default;\r\n  settings.materials.fabric = settings.materials.fabric || [\r\n    settings.materials.default\r\n  ];\r\n\r\n  const g = new THREE.Group();\r\n\r\n  const shape = awningFabric({ settings, hole });\r\n  g.add(shape);\r\n\r\n  const bottommesh = new THREE.Mesh(\r\n    new THREE.BoxGeometry(awningWidth, 0.02, 0.02),\r\n    settings.materials.alu\r\n  );\r\n  bottommesh.position.x = awningWidth / 2;\r\n  bottommesh.position.y = -settings.height + 0.01;\r\n  bottommesh.position.z = meshZ + settings.depth - 0.02;\r\n  bottommesh.castShadow = true;\r\n  g.add(bottommesh);\r\n\r\n  const boxmesh = new THREE.Mesh(\r\n    new THREE.BoxGeometry(awningWidth, 0.08, 0.08),\r\n    settings.materials.alu\r\n  );\r\n  boxmesh.position.x = awningWidth / 2;\r\n  boxmesh.position.y = 0.04;\r\n  boxmesh.position.z = 0.04;\r\n  boxmesh.castShadow = true;\r\n  g.add(boxmesh);\r\n\r\n  const sidemesh1 = new THREE.Mesh(\r\n    new THREE.BoxGeometry(0.02, 0.02, settings.depth + meshZ),\r\n    settings.materials.alu\r\n  );\r\n  sidemesh1.position.x = awningWidth - 0.01;\r\n  sidemesh1.position.y = -settings.height + 0.01;\r\n  sidemesh1.position.z = settings.depth / 2;\r\n  sidemesh1.castShadow = true;\r\n  g.add(sidemesh1);\r\n\r\n  const sidemesh2 = sidemesh1.clone();\r\n  sidemesh2.position.x = 0.02;\r\n  g.add(sidemesh2);\r\n\r\n  g.position.x = hole.x + (awningCenter - awningWidth / 2);\r\n  g.position.z = settings.z;\r\n  g.position.y = awningY;\r\n\r\n  return {\r\n    shape: g\r\n  };\r\n}\r\n\r\nexport function retractableAwning({ settings, hole }: IAwning) {\r\n  const awningWidth = hole.width - settings.left - settings.right;\r\n  const awningCenter = (settings.left - settings.right) / 2;\r\n  const awningY = hole.y + hole.height / 2 - settings.top;\r\n\r\n  settings.materials.alu = settings.materials.alu || settings.materials.default;\r\n  settings.materials.fabric = settings.materials.fabric || [\r\n    settings.materials.default\r\n  ];\r\n\r\n  const meshZ = 0.02;\r\n\r\n  const g = new THREE.Group();\r\n\r\n  const boxmesh = new THREE.Mesh(\r\n    new THREE.BoxGeometry(awningWidth, 0.08, 0.08),\r\n    settings.materials.alu\r\n  );\r\n  boxmesh.position.x = awningWidth / 2;\r\n  boxmesh.position.y = 0.04;\r\n  boxmesh.position.z = 0.04;\r\n  boxmesh.castShadow = true;\r\n  g.add(boxmesh);\r\n\r\n  const sidemeshvert1 = new THREE.Mesh(\r\n    new THREE.BoxGeometry(0.02, settings.height + meshZ, 0.02),\r\n    settings.materials.alu\r\n  );\r\n  sidemeshvert1.position.z = meshZ - 0.01;\r\n  sidemeshvert1.position.x = awningWidth - 0.01;\r\n  sidemeshvert1.position.y = -settings.height / 2;\r\n  sidemeshvert1.castShadow = true;\r\n  g.add(sidemeshvert1);\r\n\r\n  const sidemeshvert2 = sidemeshvert1.clone();\r\n  sidemeshvert2.position.x = 0.01;\r\n  g.add(sidemeshvert2);\r\n\r\n  const sidemeshGroup = new THREE.Group();\r\n  sidemeshGroup.position.x = 0;\r\n  sidemeshGroup.position.y = -settings.height;\r\n  sidemeshGroup.position.z = 0.01;\r\n\r\n  const sidemesh1 = new THREE.Mesh(\r\n    new THREE.BoxGeometry(0.02, 0.02, settings.height + meshZ),\r\n    settings.materials.alu\r\n  );\r\n  sidemesh1.rotation.x = THREE.MathUtils.degToRad(-90);\r\n  sidemesh1.position.x = awningWidth - 0.01;\r\n  sidemesh1.position.y = settings.height / 2;\r\n  sidemesh1.castShadow = true;\r\n\r\n  const sidemesh2 = sidemesh1.clone();\r\n  sidemesh2.position.x = 0.01;\r\n\r\n  const bottommesh = new THREE.Mesh(\r\n    new THREE.BoxGeometry(awningWidth, 0.02, 0.02),\r\n    settings.materials.alu\r\n  );\r\n  bottommesh.position.x = awningWidth / 2;\r\n  bottommesh.position.y = settings.height + meshZ;\r\n  bottommesh.position.z = 0;\r\n  bottommesh.castShadow = true;\r\n\r\n  sidemeshGroup.add(bottommesh);\r\n  sidemeshGroup.add(sidemesh1);\r\n  sidemeshGroup.add(sidemesh2);\r\n  sidemeshGroup.rotation.x = THREE.MathUtils.degToRad(settings.opened);\r\n\r\n  g.add(sidemeshGroup);\r\n\r\n  let bottompos = new THREE.Vector3();\r\n  bottommesh.getWorldPosition(bottompos);\r\n  const fabricDepth = new THREE.Vector3(\r\n    bottompos.x,\r\n    bottompos.y,\r\n    meshZ\r\n  ).distanceTo(bottompos);\r\n  const fabricHeight = new THREE.Vector3(\r\n    bottompos.x,\r\n    0,\r\n    bottompos.z\r\n  ).distanceTo(bottompos);\r\n\r\n  settings.depth = fabricDepth;\r\n  settings.height = fabricHeight;\r\n\r\n  const shape = awningFabric({ settings, hole });\r\n\r\n  g.add(shape);\r\n\r\n  g.position.x = hole.x + (awningCenter - awningWidth / 2);\r\n  g.position.z = settings.z;\r\n  g.position.y = awningY;\r\n\r\n  return { shape: g };\r\n}\r\n","import * as THREE from \"three\";\r\nimport { IHoleSettings, wallHole } from \"./shapes\";\r\n\r\ninterface IBalconyRailing {\r\n  materials: IBalconyMaterials;\r\n  width?: number;\r\n  height?: number;\r\n  space?: number;\r\n  railwidth?: number;\r\n}\r\nexport const balconyRaling = ({\r\n  height = 1,\r\n  width = 2,\r\n  space = 0.1,\r\n  railwidth = 0.06,\r\n  materials\r\n}: IBalconyRailing) => {\r\n  const g = new THREE.Group();\r\n\r\n  const count = Math.round(width / space);\r\n  space = width / count;\r\n\r\n  const toprail = new THREE.Mesh(\r\n    new THREE.BoxGeometry(width + railwidth, railwidth, railwidth),\r\n    materials.alu || materials.default\r\n  );\r\n  toprail.position.x = width / 2;\r\n  toprail.position.y = height;\r\n  toprail.position.z = 0;\r\n  toprail.receiveShadow = true;\r\n  toprail.castShadow = true;\r\n  g.add(toprail);\r\n  toprail.matrixAutoUpdate = false;\r\n  toprail.updateMatrix();\r\n\r\n  for (var i = 0; i <= count; i++) {\r\n    const rail = new THREE.Mesh(\r\n      new THREE.BoxGeometry(0.02, height, 0.02),\r\n      materials.alu || materials.default\r\n    );\r\n    rail.position.x = i * space;\r\n    rail.position.y = height / 2;\r\n    rail.position.z = 0;\r\n    rail.receiveShadow = true;\r\n    rail.castShadow = true;\r\n    g.add(rail);\r\n    rail.matrixAutoUpdate = false;\r\n    rail.updateMatrix();\r\n  }\r\n\r\n  return g;\r\n};\r\n\r\nexport const wallRailing = ({ settings, hole }: IBalcony) => {\r\n  const balconyWidth = hole.width;\r\n  const balconyLeft = -hole.width / 2 + hole.x;\r\n\r\n  const railingSpace = 0.2;\r\n  const railingHeight = hole.height - 0.1;\r\n\r\n  const railingFront = balconyRaling({\r\n    width: balconyWidth,\r\n    height: railingHeight,\r\n    space: railingSpace,\r\n    materials: settings.materials\r\n  });\r\n  railingFront.position.x = balconyLeft;\r\n  railingFront.position.z = settings.z;\r\n  railingFront.position.y = hole.y - railingHeight / 2;\r\n\r\n  return {\r\n    shape: railingFront,\r\n    hole: wallHole(hole.width, hole.height, hole.x, hole.y)\r\n  };\r\n};\r\nexport interface IBalconyMaterials {\r\n  default: any;\r\n  alu?: any;\r\n  fabric?: any[];\r\n}\r\n\r\nexport interface IBalconySettings {\r\n  type: string;\r\n  z: number;\r\n  top: number;\r\n  left: number;\r\n  right: number;\r\n  materials: IBalconyMaterials;\r\n  depth: number;\r\n}\r\n\r\ninterface IBalcony {\r\n  settings: IBalconySettings;\r\n  hole: IHoleSettings;\r\n}\r\nexport const balcony = ({ settings, hole }: IBalcony) => {\r\n  const balconyWidth = hole.width - settings.left - settings.right;\r\n  const balconyLeft = -hole.width / 2 + settings.left;\r\n  const balconyRight = hole.width / 2 - settings.right;\r\n  const balconyCenter = (settings.left - settings.right) / 2;\r\n\r\n  const g = new THREE.Group();\r\n  g.position.x = hole.x;\r\n  g.position.z = settings.z;\r\n  g.position.y = hole.y - settings.top - hole.height / 2;\r\n\r\n  const bottom = new THREE.Mesh(\r\n    new THREE.BoxGeometry(balconyWidth, 0.2, settings.depth),\r\n    settings.materials.default\r\n  );\r\n  bottom.position.x = balconyCenter;\r\n  bottom.position.y = -0.1;\r\n  bottom.position.z = settings.depth / 2;\r\n  bottom.receiveShadow = true;\r\n  bottom.castShadow = true;\r\n  g.add(bottom);\r\n\r\n  const railingSpace = 0.2;\r\n  const railingLeft = balconyRaling({\r\n    width: settings.depth - 0.2,\r\n    space: railingSpace,\r\n    materials: settings.materials\r\n  });\r\n  railingLeft.rotation.y = Math.PI / -2;\r\n  railingLeft.position.x = balconyLeft + 0.1;\r\n  railingLeft.position.z = 0.1;\r\n  g.add(railingLeft);\r\n\r\n  const railingRight = railingLeft.clone();\r\n  railingRight.position.x = balconyRight - 0.1;\r\n  g.add(railingRight);\r\n\r\n  const railingFront = balconyRaling({\r\n    width: balconyWidth - 0.2,\r\n    space: railingSpace,\r\n    materials: settings.materials\r\n  });\r\n  railingFront.position.x = balconyLeft + 0.1;\r\n  railingFront.position.z = settings.depth - 0.1;\r\n  g.add(railingFront);\r\n\r\n  return {\r\n    shape: g\r\n  };\r\n};\r\n","import * as THREE from \"three\";\r\nimport {\r\n  windowMaterial,\r\n  wallMaterial,\r\n  pavementMaterial,\r\n  colors,\r\n  groundMaterial,\r\n  backgroundMaterial,\r\n  floorMaterial\r\n} from \"../materials\";\r\n\r\nexport function chair(x: number, y: number, z: number, yrotation: number) {\r\n  const material = floorMaterial;\r\n\r\n  const width = 0.45;\r\n  const depth = 0.45;\r\n  const backheight = 0.35;\r\n  const legsheight = 0.45;\r\n  const legswidth = 0.06;\r\n  const legswidthhalf = legswidth / 2;\r\n\r\n  const chair = new THREE.Group();\r\n\r\n  const legGeometry0 = new THREE.BoxGeometry(legswidth, legsheight, legswidth);\r\n  const leg = new THREE.Mesh(legGeometry0.clone(), material);\r\n  leg.geometry.translate(\r\n    -width / 2 + legswidthhalf,\r\n    legsheight / 2,\r\n    -depth / 2 + legswidthhalf\r\n  );\r\n  leg.castShadow = true;\r\n  chair.add(leg);\r\n\r\n  const leg2 = new THREE.Mesh(legGeometry0.clone(), material);\r\n  leg2.geometry.translate(\r\n    -width / 2 + legswidthhalf,\r\n    legsheight / 2,\r\n    depth / 2 - legswidthhalf\r\n  );\r\n  leg2.castShadow = true;\r\n  chair.add(leg2);\r\n\r\n  const leg3 = new THREE.Mesh(legGeometry0.clone(), material);\r\n  leg3.geometry.translate(\r\n    width / 2 - legswidthhalf,\r\n    legsheight / 2,\r\n    depth / 2 - legswidthhalf\r\n  );\r\n  leg3.castShadow = true;\r\n  chair.add(leg3);\r\n\r\n  const leg4 = new THREE.Mesh(legGeometry0.clone(), material);\r\n  leg4.geometry.translate(\r\n    width / 2 - legswidthhalf,\r\n    legsheight / 2,\r\n    -depth / 2 + legswidthhalf\r\n  );\r\n  leg4.castShadow = true;\r\n  chair.add(leg4);\r\n\r\n  leg.matrixAutoUpdate = false;\r\n  leg2.matrixAutoUpdate = false;\r\n  leg3.matrixAutoUpdate = false;\r\n  leg4.matrixAutoUpdate = false;\r\n\r\n  const seat = new THREE.Mesh(\r\n    new THREE.BoxGeometry(width, legswidth, depth),\r\n    material\r\n  );\r\n  seat.geometry.translate(0, legsheight, 0);\r\n  seat.castShadow = true;\r\n  seat.matrixAutoUpdate = false;\r\n  chair.add(seat);\r\n\r\n  const chairback = new THREE.Group();\r\n  chairback.position.set(-depth / 2 + legswidthhalf, legsheight, 0);\r\n\r\n  // const testgeo = new THREE.BoxGeometry(0.1, 0.1, 0.1);\r\n  // const test = new THREE.Mesh(testgeo, material);\r\n  // chairback.add(test);\r\n\r\n  const backleft = new THREE.Mesh(legGeometry0.clone(), material);\r\n  backleft.geometry.translate(0, backheight / 2, depth / 2 - legswidthhalf);\r\n  backleft.castShadow = true;\r\n  backleft.matrixAutoUpdate = false;\r\n  chairback.add(backleft);\r\n\r\n  const backright = new THREE.Mesh(legGeometry0.clone(), material);\r\n  backright.geometry.translate(0, backheight / 2, -depth / 2 + legswidthhalf);\r\n  backright.castShadow = true;\r\n  backright.matrixAutoUpdate = false;\r\n  chairback.add(backright);\r\n\r\n  const backseat = new THREE.Mesh(\r\n    new THREE.BoxGeometry(legswidth, 0.2, width),\r\n    material\r\n  );\r\n  backseat.geometry.translate(0, backheight + 0.1, 0);\r\n  backseat.castShadow = true;\r\n  backseat.matrixAutoUpdate = false;\r\n  chairback.add(backseat);\r\n\r\n  chairback.rotation.z = THREE.MathUtils.degToRad(10);\r\n\r\n  chair.add(chairback);\r\n\r\n  chair.position.set(x, y, z);\r\n  if (yrotation) {\r\n    chair.rotation.y = THREE.MathUtils.degToRad(yrotation);\r\n  }\r\n\r\n  return chair;\r\n}\r\n","import * as THREE from \"three\";\r\n\r\nimport {\r\n  windowMaterial,\r\n  wallMaterial,\r\n  pavementMaterial,\r\n  colors,\r\n  groundMaterial,\r\n  backgroundMaterial,\r\n  floorMaterial\r\n} from \"../materials\";\r\n\r\nexport function table(x: number, y: number, z: number, yrotation: number) {\r\n  const material = floorMaterial;\r\n\r\n  const width = 0.8;\r\n  const depth = 1.2;\r\n  const legsheight = 0.7;\r\n  const legswidth = 0.06;\r\n  const legswidthhalf = legswidth / 2;\r\n\r\n  const table = new THREE.Group();\r\n\r\n  const legGeometry = new THREE.BoxGeometry(legswidth, legsheight, legswidth);\r\n  legGeometry.translate(0, legsheight / 2, 0);\r\n  const leg = new THREE.Mesh(legGeometry, material);\r\n  leg.matrixAutoUpdate = false;\r\n  leg.castShadow = true;\r\n  leg.position.set(-width / 2 + legswidthhalf, 0, -depth / 2 + legswidthhalf);\r\n  table.add(leg);\r\n  leg.updateMatrix();\r\n\r\n  const leg2 = leg.clone();\r\n  leg2.position.set(-width / 2 + legswidthhalf, 0, depth / 2 - legswidthhalf);\r\n  table.add(leg2);\r\n  leg2.updateMatrix();\r\n\r\n  const leg3 = leg.clone();\r\n  leg3.position.set(width / 2 - legswidthhalf, 0, depth / 2 - legswidthhalf);\r\n  table.add(leg3);\r\n  leg3.updateMatrix();\r\n\r\n  const leg4 = leg.clone();\r\n  leg4.position.set(width / 2 - legswidthhalf, 0, -depth / 2 + legswidthhalf);\r\n  table.add(leg4);\r\n  leg4.updateMatrix();\r\n\r\n  const top = new THREE.Mesh(\r\n    new THREE.BoxGeometry(width, 0.06, depth),\r\n    material\r\n  );\r\n  top.matrixAutoUpdate = false;\r\n  top.castShadow = true;\r\n  top.position.set(0, legsheight, 0);\r\n  table.add(top);\r\n  top.updateMatrix();\r\n\r\n  table.position.set(x, y, z);\r\n  if (yrotation) {\r\n    table.rotation.y = THREE.MathUtils.degToRad(yrotation);\r\n  }\r\n  return table;\r\n}\r\n","import * as THREE from \"three\";\r\nimport {\r\n  Evaluator,\r\n  EdgesHelper,\r\n  Operation,\r\n  OperationGroup,\r\n  ADDITION,\r\n  SUBTRACTION,\r\n} from \"three-bvh-csg\";\r\nimport { Line2 } from \"three/examples/jsm/lines/Line2.js\";\r\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial.js\";\r\nimport { LineGeometry } from \"three/examples/jsm/lines/LineGeometry.js\";\r\n\r\nexport { awning, retractableAwning, IAwningSettings } from \"./awnings\";\r\nexport { balcony, wallRailing, IBalconySettings } from \"./balconies\";\r\nexport { chair } from \"./chairs\";\r\nexport { table } from \"./tables\";\r\n\r\n// CSG\r\nlet csgEvaluator: any;\r\ncsgEvaluator = new Evaluator();\r\ncsgEvaluator.attributes = [\"position\", \"normal\"];\r\ncsgEvaluator.useGroups = false;\r\n\r\nexport function wallHole(w: number, h: number, x: number, y: number) {\r\n  const hole = new Operation(new THREE.BoxGeometry(w, h, 0.7)); //BoxBufferGeometry\r\n  hole.operation = SUBTRACTION; //ADDITION; // ;\r\n  hole.position.x = x;\r\n  hole.position.y = y; //hole.positionFromGround(y);\r\n\r\n  hole.matrixAutoUpdate = false;\r\n  hole.updateMatrix();\r\n  // console.log(w, h, x, y);\r\n\r\n  //addWindow(w, h, x, y);\r\n\r\n  return hole;\r\n}\r\n\r\nexport function bulbLight(x: number, y: number, z: number) {\r\n  // console.log(\"bulb\", x, y, z);\r\n  const bulbLight = new THREE.PointLight(0xffcf73, 0.1);\r\n  // const bulbLight = new THREE.SpotLight(0xffcf73, 1);\r\n  // const bulbLight = new THREE.DirectionalLight(0xffcf73, 1);\r\n  bulbLight.castShadow = false;\r\n  //Set up shadow properties for the light\r\n\r\n  bulbLight.power = 20;\r\n  bulbLight.decay = 0.5;\r\n  // bulbLight.distance = Infinity;\r\n  //bulbLight.position.set(-100, 600, -100);\r\n  bulbLight.position.set(x, y, z);\r\n  // bulbLight.target.updateMatrixWorld();\r\n\r\n  bulbLight.matrixAutoUpdate = false;\r\n  bulbLight.updateMatrix();\r\n  // scene.add(bulbLight);\r\n\r\n  const bulbLightshadowCam = bulbLight.shadow.camera;\r\n  bulbLight.castShadow = true;\r\n  bulbLight.shadow.mapSize.setScalar(512);\r\n  bulbLight.shadow.mapSize.width = 512;\r\n  bulbLight.shadow.mapSize.height = 512;\r\n  bulbLight.shadow.camera.near = 0.05; // default\r\n  bulbLight.shadow.camera.far = 10; // default\r\n  bulbLight.shadow.bias = -0.00005; //1e-5;\r\n  bulbLight.shadow.normalBias = 0.02; //1e-2;\r\n  setTimeout(() => {\r\n    bulbLight.shadow.autoUpdate = false;\r\n  }, 500);\r\n\r\n  // bulbLightshadowCam.left = bulbLightshadowCam.bottom = -1000;\r\n  // bulbLightshadowCam.right = bulbLightshadowCam.top = 1000;\r\n  bulbLightshadowCam.updateProjectionMatrix();\r\n\r\n  return bulbLight;\r\n}\r\n\r\ninterface IBulbMaterials {\r\n  default: string;\r\n  bulb: string;\r\n}\r\nexport interface IHangingLightsSettings {\r\n  type: string;\r\n  z: number;\r\n  depth: number;\r\n  hanging: number[];\r\n  materials: IBulbMaterials;\r\n}\r\n\r\ninterface IHangingLights {\r\n  settings: IHangingLightsSettings;\r\n  hole: IHoleSettings;\r\n}\r\n\r\n// addShape( californiaShape, extrudeSettings, 0xf08000, - 300, - 100, 0, 0, 0, 0, 1 );\r\n// function addShape( shape, extrudeSettings, color, x, y, z, rx, ry, rz, s ) {\r\n\r\nfunction addLineShape(shape, color, x, y, z, rx, ry, rz, s) {\r\n  // lines\r\n  // console.log(\"shape\", shape);\r\n\r\n  shape.autoClose = false;\r\n\r\n  const points = shape.getPoints(50);\r\n  // const spacedPoints = shape.getSpacedPoints(50);\r\n\r\n  // Create the final object to add to the scene\r\n  //const curveObject = new THREE.Line( geometry, material );\r\n\r\n  const geometryPoints = new THREE.BufferGeometry().setFromPoints(points);\r\n\r\n  // solid line\r\n\r\n  let line = new THREE.Line(\r\n    geometryPoints,\r\n    new THREE.LineBasicMaterial({ color: color, linewidth: 0.1 })\r\n  );\r\n  line.position.set(x, y, z);\r\n  line.rotation.set(rx, ry, rz);\r\n  line.scale.set(s, s, s);\r\n  return line;\r\n}\r\n\r\nexport const hangingLightPosts = ({ settings, hole }: IHangingLights) => {\r\n  const g = new THREE.Group();\r\n  g.position.x = 0;\r\n  g.position.z = 0;\r\n  g.position.y = 0;\r\n\r\n  for (var i = 0; i < settings.path.length; i++) {\r\n    const post = new THREE.Mesh(\r\n      new THREE.CylinderGeometry(0.06, 0.06, hole.height, 6),\r\n      settings.materials.default\r\n    );\r\n    post.position.copy(settings.path[i]);\r\n    post.receiveShadow = true;\r\n    post.castShadow = true;\r\n\r\n    post.matrixAutoUpdate = false;\r\n    post.updateMatrix();\r\n    g.add(post);\r\n  }\r\n\r\n  return g;\r\n};\r\n\r\nexport const hangingLightBulbs = (\r\n  curve: THREE.CatmullRomCurve3,\r\n  bulbs: number,\r\n  materials: any\r\n) => {\r\n  const g = new THREE.Group();\r\n\r\n  const bulbgroup = new THREE.Group();\r\n  const bulbstem = new THREE.Mesh(\r\n    new THREE.CylinderGeometry(0.03, 0.03, 0.05, 6),\r\n    materials.default\r\n  );\r\n  const bulbtop = new THREE.Mesh(\r\n    new THREE.CylinderGeometry(0.03, 0.05, 0.1, 16),\r\n    materials.bulb\r\n  );\r\n  const bulbbottom = new THREE.Mesh(\r\n    new THREE.SphereGeometry(0.05, 16, 16),\r\n    materials.bulb\r\n  );\r\n\r\n  bulbstem.position.y = 0;\r\n  bulbtop.position.y = -0.1 / 2 - 0.025;\r\n  bulbbottom.position.y = bulbtop.position.y - 0.1 / 2;\r\n\r\n  bulbgroup.add(bulbstem);\r\n  bulbgroup.add(bulbtop);\r\n  bulbgroup.add(bulbbottom);\r\n\r\n  const bulb = bulbLight(0, -0.2, 0);\r\n\r\n  bulb.castShadow = false;\r\n  bulb.power = 1;\r\n  bulb.decay = 0.3;\r\n  bulb.distance = 4;\r\n\r\n  bulbgroup.add(bulb);\r\n\r\n  const points = curve.getSpacedPoints(bulbs);\r\n\r\n  for (var i = 1; i < points.length - 1; i++) {\r\n    const bulbclone = bulbgroup.clone();\r\n    bulbclone.position.copy(points[i]);\r\n    bulbclone.rotation.x = THREE.MathUtils.randFloat(-0.2, 0.2);\r\n    bulbclone.rotation.z = THREE.MathUtils.randFloat(-0.2, 0.2);\r\n    bulbclone.updateMatrix();\r\n\r\n    g.add(bulbclone);\r\n  }\r\n  return g;\r\n};\r\n// https://threejs.org/docs/#api/en/geometries/TubeGeometry\r\nexport const hangingLights = ({ settings, hole }: IHangingLights) => {\r\n  const g = new THREE.Group();\r\n  g.position.x = hole.x - hole.width / 2; //hole.x;\r\n  g.position.z = -settings.z || -1; //settings.z;\r\n  g.position.y = hole.height / 2;\r\n\r\n  const posts = hangingLightPosts({ settings, hole });\r\n  g.add(posts);\r\n  let hanging = settings.hanging[0];\r\n  for (var i = 1; i < settings.path.length; i++) {\r\n    const previousPoint = settings.path[i - 1];\r\n    const currentPoint = settings.path[i];\r\n    const mid1 = new THREE.Vector3().lerpVectors(\r\n      previousPoint,\r\n      currentPoint,\r\n      0.15\r\n    );\r\n    const mid2 = new THREE.Vector3().lerpVectors(\r\n      previousPoint,\r\n      currentPoint,\r\n      0.5\r\n    );\r\n    const mid3 = new THREE.Vector3().lerpVectors(\r\n      previousPoint,\r\n      currentPoint,\r\n      0.85\r\n    );\r\n    if (settings.hanging[i - 1]) {\r\n      hanging = settings.hanging[i - 1];\r\n    }\r\n    mid1.y = mid3.y = -hanging / 2;\r\n    mid2.y = -hanging;\r\n    const curve = new THREE.CatmullRomCurve3([\r\n      new THREE.Vector3(previousPoint.x, 0, previousPoint.z),\r\n      mid1,\r\n      mid2,\r\n      mid3,\r\n      new THREE.Vector3(currentPoint.x, 0, currentPoint.z),\r\n    ]);\r\n\r\n    const bulbs = hangingLightBulbs(\r\n      curve,\r\n      previousPoint.distanceTo(currentPoint) / 0.5,\r\n      settings.materials\r\n    );\r\n    bulbs.position.y = hole.y + hole.height / 2;\r\n    g.add(bulbs);\r\n\r\n    const lineshape = addLineShape(\r\n      curve,\r\n      0x000000,\r\n      0, //hole.x,\r\n      hole.y + hole.height / 2,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      1\r\n    );\r\n\r\n    lineshape.matrixAutoUpdate = false;\r\n    lineshape.updateMatrix();\r\n    g.add(lineshape);\r\n  }\r\n\r\n  return {\r\n    shape: g,\r\n  };\r\n};\r\n\r\nexport interface IPlantSettings {\r\n  type: string;\r\n  z: number;\r\n  materials: IBalconyMaterials;\r\n}\r\n\r\ninterface IPlant {\r\n  settings: IPlantSettings;\r\n  hole: IHoleSettings;\r\n}\r\n\r\nexport const plant = ({ settings, hole }: IPlant) => {\r\n  // const balconyWidth = hole.width - settings.left - settings.right;\r\n  // const balconyLeft = -hole.width / 2 + settings.left;\r\n  // const balconyRight = hole.width / 2 - settings.right;\r\n  // const balconyCenter = (settings.left - settings.right) / 2;\r\n\r\n  console.log(\"Plant\", hole);\r\n  const g = new THREE.Group();\r\n  g.position.x = hole.x; //hole.x;\r\n  g.position.z = settings.z || -1; //settings.z;\r\n  g.position.y = hole.height / 2;\r\n\r\n  const bottom = new THREE.Mesh(\r\n    new THREE.CylinderGeometry(0.2, 0.5, hole.height, 0.32),\r\n    settings.materials.default\r\n  );\r\n  // bottom.position.x = balconyCenter;\r\n  // bottom.position.y = -10;\r\n  // bottom.position.z = settings.depth / 2;\r\n  bottom.receiveShadow = true;\r\n  bottom.castShadow = true;\r\n  g.add(bottom);\r\n\r\n  bottom.matrixAutoUpdate = false;\r\n  bottom.updateMatrix();\r\n  return {\r\n    shape: g,\r\n  };\r\n};\r\n\r\ninterface IFrame {\r\n  x?: number;\r\n  y?: number;\r\n  z?: number;\r\n  width?: number;\r\n  height?: number;\r\n  depth?: number;\r\n  framewidth?: number[];\r\n}\r\nconst frame = ({\r\n  width = 2,\r\n  height = 2,\r\n  framewidth = [0.05, 0.05, 0.05, 0.05],\r\n  depth = 5,\r\n}: IFrame) => {\r\n  const frame = new Operation(new THREE.BoxGeometry(width, height, depth));\r\n\r\n  const hole = new Operation(\r\n    new THREE.BoxGeometry(\r\n      width - framewidth[1] - framewidth[3],\r\n      height - framewidth[0] - framewidth[2],\r\n      depth * 2\r\n    )\r\n  );\r\n  hole.operation = SUBTRACTION;\r\n  hole.position.y = (framewidth[2] - framewidth[0]) / 2;\r\n  hole.position.x = (framewidth[3] - framewidth[1]) / 2;\r\n\r\n  frame.add(hole);\r\n\r\n  const result = csgEvaluator.evaluateHierarchy(frame);\r\n  result.castShadow = true;\r\n  result.receiveShadow = true;\r\n\r\n  return result;\r\n};\r\n\r\ninterface IShutter {\r\n  materials: IAweningMaterials;\r\n  x?: number;\r\n  y?: number;\r\n  z?: number;\r\n  width?: number;\r\n  height?: number;\r\n}\r\nconst shutter = ({ width = 2, height = 2, materials }: IShutter) => {\r\n  const framemesh = frame({\r\n    width: width,\r\n    height: height,\r\n    framewidth: [0.05, 0.05, 0.05, 0.05],\r\n    depth: 0.04,\r\n  });\r\n  const shutterframe = new Operation(framemesh.geometry);\r\n\r\n  const innerheight = height - 0.05 - 0.05;\r\n  const innerwidth = width - 0.05 - 0.05;\r\n  const shutterparts = Math.ceil(innerheight / 0.1 + 0.005);\r\n\r\n  const originalshutterpart = new Operation(\r\n    new THREE.BoxGeometry(innerwidth, 0.1, 0.02)\r\n  );\r\n  originalshutterpart.operation = ADDITION;\r\n  originalshutterpart.position.x = 0.01;\r\n  originalshutterpart.rotation.x = 2.5;\r\n\r\n  let shutterY = innerheight / 2 - 0 * 0.1;\r\n  for (var i = 0; i < shutterparts; i++) {\r\n    const shutterpart = originalshutterpart.clone();\r\n    shutterpart.position.y = shutterY;\r\n    shutterframe.add(shutterpart);\r\n\r\n    shutterframe.matrixAutoUpdate = false;\r\n    shutterframe.updateMatrix();\r\n    shutterY -= 0.1;\r\n  }\r\n\r\n  const result = csgEvaluator.evaluateHierarchy(shutterframe);\r\n  result.castShadow = true;\r\n  result.receiveShadow = true;\r\n  result.material = materials.default;\r\n\r\n  return result;\r\n};\r\n\r\nexport interface IBalconyDoorSettings {\r\n  type: string;\r\n  z: number;\r\n  materials: IAweningMaterials;\r\n  shutters: number;\r\n  open?: number[];\r\n}\r\n\r\nexport interface IHoleSettings {\r\n  width: number;\r\n  height?: number;\r\n  x?: number;\r\n  y?: number;\r\n  groundY?: number;\r\n  top?: number;\r\n  bottom?: number;\r\n  left?: number;\r\n  offsetLeft?: number;\r\n  shapes?: any[];\r\n}\r\n\r\ninterface IBalconyDoor {\r\n  settings: IBalconyDoorSettings;\r\n  hole: IHoleSettings;\r\n}\r\n\r\nexport const shuttersWithFrame = ({ hole, settings }: IBalconyDoor) => {\r\n  const g = new THREE.Group();\r\n  // console.log(\"shuttersWithFrame\", hole, settings);\r\n  const h = hole.height;\r\n  const w = hole.width;\r\n  const doorframe = 0.05;\r\n  const innerWidth = w - doorframe * 2;\r\n\r\n  const framemesh = frame({\r\n    width: w,\r\n    height: h,\r\n    framewidth: [0.05, 0.05, 0.05, 0.05],\r\n    depth: 0.04,\r\n  });\r\n\r\n  const doorframeMesh = new THREE.Mesh(\r\n    framemesh.geometry,\r\n    settings?.materials?.default\r\n  );\r\n  doorframeMesh.position.x = w / 5;\r\n  doorframeMesh.position.y = h / 2;\r\n  doorframeMesh.matrixAutoUpdate = false;\r\n  doorframeMesh.updateMatrix();\r\n  g.add(doorframeMesh);\r\n\r\n  const shutterwidth = innerWidth / settings.shutters;\r\n  const shutterheight = h - doorframe * 2;\r\n  let doorX = doorframe;\r\n  const doorGroupRight = new THREE.Group();\r\n\r\n  const door = shutter({\r\n    width: shutterwidth,\r\n    height: shutterheight,\r\n    materials: settings.materials,\r\n  });\r\n  door.receiveShadow = true;\r\n  // door.position.z = 0;\r\n  door.castShadow = true;\r\n\r\n  let previousGroup;\r\n  let counter = 0;\r\n  for (var i = settings.shutters; i > 0; i--) {\r\n    counter++;\r\n    const isEven = counter % 2 === 1;\r\n    // const is0orEven = i === 1 || isEven;\r\n\r\n    const doorGroup = new THREE.Group();\r\n    // doorGroup.name = `doorGroup${i}`;\r\n    // const sphere = new THREE.SphereGeometry(5 * i);\r\n    // const sphereMesh = new THREE.Mesh(sphere, materials.default);\r\n    // sphereMesh.position.y = 240;\r\n    // doorGroup.add(sphereMesh);\r\n\r\n    // console.log(\"shutters\", shutters, i, isEven);\r\n    let posX = 0;\r\n    if (i !== 1 && previousGroup) {\r\n      // console.log(\"add to previousGroup\");\r\n      // previousGroup.add(doorGroup);\r\n      const rotatedShutterWidth =\r\n        shutterwidth * Math.abs(Math.cos(previousGroup.rotation.y));\r\n\r\n      posX = doorX + innerWidth - rotatedShutterWidth * 2;\r\n    }\r\n    if (i === 1) {\r\n      doorGroup.position.x = doorX;\r\n    } else if (isEven) {\r\n      doorGroup.position.x = doorX + innerWidth;\r\n    } else {\r\n      doorGroup.position.x = doorX + innerWidth - i * shutterwidth; // - (doorX + (i - 1) * shutterwidth);\r\n      //   // doorGroupRight.position.x = doorX + shutters * shutterwidth;\r\n    }\r\n    // doorGroup.position.y = i * 100;\r\n\r\n    // const door = new THREE.Mesh(\r\n    //   new THREE.BoxGeometry(doorwidth, height - doorframe, 2),\r\n    //   materials.default\r\n    // );\r\n\r\n    const doorclone = door.clone();\r\n    doorGroup.add(doorclone);\r\n    if (i === 1) {\r\n      doorclone.position.x = shutterwidth / 2;\r\n    } else if (isEven) {\r\n      doorclone.position.x = -shutterwidth / 2;\r\n    } else {\r\n      doorclone.position.x = shutterwidth / 2;\r\n      //doorGroupRight.add(doorGroup);\r\n    }\r\n    doorclone.position.y = h / 2;\r\n\r\n    doorclone.matrixAutoUpdate = false;\r\n    doorclone.updateMatrix();\r\n\r\n    if (settings.open && settings.open[i] !== null) {\r\n      if (i === 1) {\r\n        doorGroup.rotation.y = THREE.MathUtils.degToRad(settings.open[0]);\r\n      } else if (isEven) {\r\n        doorGroup.rotation.y = THREE.MathUtils.degToRad(-settings.open[1]);\r\n      } else {\r\n        doorGroup.rotation.y = THREE.MathUtils.degToRad(settings.open[1]);\r\n        doorGroup.position.x = posX;\r\n      }\r\n      g.add(doorGroup);\r\n    }\r\n\r\n    previousGroup = doorGroup;\r\n  }\r\n  g.add(doorGroupRight);\r\n\r\n  // for (var i = shutters; i > 0; i--) {\r\n  //   const isEven = i % 2 === 1;\r\n  //   const is0orEven = i === 1 || isEven;\r\n  //   const doorGroup = g.getObjectByName(`doorGroup${i}`);\r\n  //   if (open[i] !== null && doorGroup) {\r\n  //     if (i === 1) {\r\n  //       doorGroup.rotation.y = THREE.MathUtils.degToRad(open[0]);\r\n  //     } else if (isEven) {\r\n  //       doorGroup.rotation.y = THREE.MathUtils.degToRad(-open[1]);\r\n  //     } else {\r\n  //       // doorGroup.rotation.y = THREE.MathUtils.degToRad(open[1]);\r\n  //       // doorGroup.position.x = posX;\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  g.position.x = hole.x - hole.width / 2;\r\n  g.position.z = settings.z;\r\n  g.position.y = hole.y - hole.height / 2;\r\n\r\n  return {\r\n    shape: g,\r\n    hole: wallHole(hole.width, hole.height, hole.x, hole.y),\r\n  };\r\n};\r\n\r\nexport const balconydoor = ({ hole, settings }: IBalconyDoor) => {\r\n  return shuttersWithFrame({\r\n    hole: hole,\r\n    settings: settings,\r\n  });\r\n};\r\n\r\n//N https://stackoverflow.com/questions/50957349/threejs-how-to-offset-all-points-on-a-2d-geometry-by-distance\r\nfunction OffsetContour(offset, contour) {\r\n  let result = [];\r\n\r\n  offset = new THREE.BufferAttribute(new Float32Array([offset, 0, 0]), 3);\r\n  console.log(\"offset\", offset);\r\n\r\n  for (let i = 0; i < contour.length; i++) {\r\n    let v1 = new THREE.Vector2().subVectors(\r\n      contour[i - 1 < 0 ? contour.length - 1 : i - 1],\r\n      contour[i]\r\n    );\r\n    let v2 = new THREE.Vector2().subVectors(\r\n      contour[i + 1 == contour.length ? 0 : i + 1],\r\n      contour[i]\r\n    );\r\n    let angle = v2.angle() - v1.angle();\r\n    let halfAngle = angle * 0.5;\r\n\r\n    let hA = halfAngle;\r\n    let tA = v2.angle() + Math.PI * 0.5;\r\n\r\n    let shift = Math.tan(hA - Math.PI * 0.5);\r\n    let shiftMatrix = new THREE.Matrix4().set(\r\n      1,\r\n      0,\r\n      0,\r\n      0,\r\n      -shift,\r\n      1,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      1,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      1\r\n    );\r\n\r\n    let tempAngle = tA;\r\n    let rotationMatrix = new THREE.Matrix4().set(\r\n      Math.cos(tempAngle),\r\n      -Math.sin(tempAngle),\r\n      0,\r\n      0,\r\n      Math.sin(tempAngle),\r\n      Math.cos(tempAngle),\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      1,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      1\r\n    );\r\n\r\n    let translationMatrix = new THREE.Matrix4().set(\r\n      1,\r\n      0,\r\n      0,\r\n      contour[i].x,\r\n      0,\r\n      1,\r\n      0,\r\n      contour[i].y,\r\n      0,\r\n      0,\r\n      1,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      1\r\n    );\r\n\r\n    let cloneOffset = offset.clone();\r\n    console.log(\"cloneOffset\", cloneOffset);\r\n    shiftMatrix.applyToBufferAttribute(cloneOffset);\r\n    rotationMatrix.applyToBufferAttribute(cloneOffset);\r\n    translationMatrix.applyToBufferAttribute(cloneOffset);\r\n\r\n    result.push(new THREE.Vector2(cloneOffset.getX(0), cloneOffset.getY(0)));\r\n  }\r\n\r\n  return result;\r\n}\r\n","/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.chroma = factory());\n})(this, (function () { 'use strict';\n\n    var limit$2 = function (x, min, max) {\n        if ( min === void 0 ) min=0;\n        if ( max === void 0 ) max=1;\n\n        return x < min ? min : x > max ? max : x;\n    };\n\n    var limit$1 = limit$2;\n\n    var clip_rgb$3 = function (rgb) {\n        rgb._clipped = false;\n        rgb._unclipped = rgb.slice(0);\n        for (var i=0; i<=3; i++) {\n            if (i < 3) {\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\n                rgb[i] = limit$1(rgb[i], 0, 255);\n            } else if (i === 3) {\n                rgb[i] = limit$1(rgb[i], 0, 1);\n            }\n        }\n        return rgb;\n    };\n\n    // ported from jQuery's $.type\n    var classToType = {};\n    for (var i$1 = 0, list$1 = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i$1 < list$1.length; i$1 += 1) {\n        var name = list$1[i$1];\n\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\n    }\n    var type$p = function(obj) {\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\n    };\n\n    var type$o = type$p;\n\n    var unpack$B = function (args, keyOrder) {\n        if ( keyOrder === void 0 ) keyOrder=null;\n\n    \t// if called with more than 3 arguments, we return the arguments\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\n        // with less than 3 args we check if first arg is object\n        // and use the keyOrder string to extract and sort properties\n    \tif (type$o(args[0]) == 'object' && keyOrder) {\n    \t\treturn keyOrder.split('')\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\n    \t\t\t.map(function (k) { return args[0][k]; });\n    \t}\n    \t// otherwise we just return the first argument\n    \t// (which we suppose is an array of args)\n        return args[0];\n    };\n\n    var type$n = type$p;\n\n    var last$4 = function (args) {\n        if (args.length < 2) { return null; }\n        var l = args.length-1;\n        if (type$n(args[l]) == 'string') { return args[l].toLowerCase(); }\n        return null;\n    };\n\n    var PI$2 = Math.PI;\n\n    var utils = {\n    \tclip_rgb: clip_rgb$3,\n    \tlimit: limit$2,\n    \ttype: type$p,\n    \tunpack: unpack$B,\n    \tlast: last$4,\n    \tPI: PI$2,\n    \tTWOPI: PI$2*2,\n    \tPITHIRD: PI$2/3,\n    \tDEG2RAD: PI$2 / 180,\n    \tRAD2DEG: 180 / PI$2\n    };\n\n    var input$h = {\n    \tformat: {},\n    \tautodetect: []\n    };\n\n    var last$3 = utils.last;\n    var clip_rgb$2 = utils.clip_rgb;\n    var type$m = utils.type;\n    var _input = input$h;\n\n    var Color$D = function Color() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var me = this;\n        if (type$m(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        var mode = last$3(args);\n        var autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!_input.sorted) {\n                _input.autodetect = _input.autodetect.sort(function (a,b) { return b.p - a.p; });\n                _input.sorted = true;\n            }\n            // auto-detect format\n            for (var i = 0, list = _input.autodetect; i < list.length; i += 1) {\n                var chk = list[i];\n\n                mode = chk.test.apply(chk, args);\n                if (mode) { break; }\n            }\n        }\n\n        if (_input.format[mode]) {\n            var rgb = _input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb$2(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) { me._rgb.push(1); }\n    };\n\n    Color$D.prototype.toString = function toString () {\n        if (type$m(this.hex) == 'function') { return this.hex(); }\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\n    };\n\n    var Color_1 = Color$D;\n\n    var chroma$k = function () {\n    \tvar args = [], len = arguments.length;\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\n\n    \treturn new (Function.prototype.bind.apply( chroma$k.Color, [ null ].concat( args) ));\n    };\n\n    chroma$k.Color = Color_1;\n    chroma$k.version = '2.4.2';\n\n    var chroma_1 = chroma$k;\n\n    var unpack$A = utils.unpack;\n    var max$2 = Math.max;\n\n    var rgb2cmyk$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$A(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        var k = 1 - max$2(r,max$2(g,b));\n        var f = k < 1 ? 1 / (1-k) : 0;\n        var c = (1-r-k) * f;\n        var m = (1-g-k) * f;\n        var y = (1-b-k) * f;\n        return [c,m,y,k];\n    };\n\n    var rgb2cmyk_1 = rgb2cmyk$1;\n\n    var unpack$z = utils.unpack;\n\n    var cmyk2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$z(args, 'cmyk');\n        var c = args[0];\n        var m = args[1];\n        var y = args[2];\n        var k = args[3];\n        var alpha = args.length > 4 ? args[4] : 1;\n        if (k === 1) { return [0,0,0,alpha]; }\n        return [\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\n            alpha\n        ];\n    };\n\n    var cmyk2rgb_1 = cmyk2rgb;\n\n    var chroma$j = chroma_1;\n    var Color$C = Color_1;\n    var input$g = input$h;\n    var unpack$y = utils.unpack;\n    var type$l = utils.type;\n\n    var rgb2cmyk = rgb2cmyk_1;\n\n    Color$C.prototype.cmyk = function() {\n        return rgb2cmyk(this._rgb);\n    };\n\n    chroma$j.cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$C, [ null ].concat( args, ['cmyk']) ));\n    };\n\n    input$g.format.cmyk = cmyk2rgb_1;\n\n    input$g.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$y(args, 'cmyk');\n            if (type$l(args) === 'array' && args.length === 4) {\n                return 'cmyk';\n            }\n        }\n    });\n\n    var unpack$x = utils.unpack;\n    var last$2 = utils.last;\n    var rnd = function (a) { return Math.round(a*100)/100; };\n\n    /*\n     * supported arguments:\n     * - hsl2css(h,s,l)\n     * - hsl2css(h,s,l,a)\n     * - hsl2css([h,s,l], mode)\n     * - hsl2css([h,s,l,a], mode)\n     * - hsl2css({h,s,l,a}, mode)\n     */\n    var hsl2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hsla = unpack$x(args, 'hsla');\n        var mode = last$2(args) || 'lsa';\n        hsla[0] = rnd(hsla[0] || 0);\n        hsla[1] = rnd(hsla[1]*100) + '%';\n        hsla[2] = rnd(hsla[2]*100) + '%';\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n            mode = 'hsla';\n        } else {\n            hsla.length = 3;\n        }\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\n    };\n\n    var hsl2css_1 = hsl2css$1;\n\n    var unpack$w = utils.unpack;\n\n    /*\n     * supported arguments:\n     * - rgb2hsl(r,g,b)\n     * - rgb2hsl(r,g,b,a)\n     * - rgb2hsl([r,g,b])\n     * - rgb2hsl([r,g,b,a])\n     * - rgb2hsl({r,g,b,a})\n     */\n    var rgb2hsl$3 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$w(args, 'rgba');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n\n        var l = (max + min) / 2;\n        var s, h;\n\n        if (max === min){\n            s = 0;\n            h = Number.NaN;\n        } else {\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n        }\n\n        if (r == max) { h = (g - b) / (max - min); }\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\n\n        h *= 60;\n        if (h < 0) { h += 360; }\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\n        return [h,s,l];\n    };\n\n    var rgb2hsl_1 = rgb2hsl$3;\n\n    var unpack$v = utils.unpack;\n    var last$1 = utils.last;\n    var hsl2css = hsl2css_1;\n    var rgb2hsl$2 = rgb2hsl_1;\n    var round$6 = Math.round;\n\n    /*\n     * supported arguments:\n     * - rgb2css(r,g,b)\n     * - rgb2css(r,g,b,a)\n     * - rgb2css([r,g,b], mode)\n     * - rgb2css([r,g,b,a], mode)\n     * - rgb2css({r,g,b,a}, mode)\n     */\n    var rgb2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$v(args, 'rgba');\n        var mode = last$1(args) || 'rgb';\n        if (mode.substr(0,3) == 'hsl') {\n            return hsl2css(rgb2hsl$2(rgba), mode);\n        }\n        rgba[0] = round$6(rgba[0]);\n        rgba[1] = round$6(rgba[1]);\n        rgba[2] = round$6(rgba[2]);\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n            mode = 'rgba';\n        }\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\n    };\n\n    var rgb2css_1 = rgb2css$1;\n\n    var unpack$u = utils.unpack;\n    var round$5 = Math.round;\n\n    var hsl2rgb$1 = function () {\n        var assign;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$u(args, 'hsl');\n        var h = args[0];\n        var s = args[1];\n        var l = args[2];\n        var r,g,b;\n        if (s === 0) {\n            r = g = b = l*255;\n        } else {\n            var t3 = [0,0,0];\n            var c = [0,0,0];\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\n            var t1 = 2 * l - t2;\n            var h_ = h / 360;\n            t3[0] = h_ + 1/3;\n            t3[1] = h_;\n            t3[2] = h_ - 1/3;\n            for (var i=0; i<3; i++) {\n                if (t3[i] < 0) { t3[i] += 1; }\n                if (t3[i] > 1) { t3[i] -= 1; }\n                if (6 * t3[i] < 1)\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\n                else if (2 * t3[i] < 1)\n                    { c[i] = t2; }\n                else if (3 * t3[i] < 2)\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\n                else\n                    { c[i] = t1; }\n            }\n            (assign = [round$5(c[0]*255),round$5(c[1]*255),round$5(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\n        }\n        if (args.length > 3) {\n            // keep alpha channel\n            return [r,g,b,args[3]];\n        }\n        return [r,g,b,1];\n    };\n\n    var hsl2rgb_1 = hsl2rgb$1;\n\n    var hsl2rgb = hsl2rgb_1;\n    var input$f = input$h;\n\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n    var round$4 = Math.round;\n\n    var css2rgb$1 = function (css) {\n        css = css.toLowerCase().trim();\n        var m;\n\n        if (input$f.format.named) {\n            try {\n                return input$f.format.named(css);\n            } catch (e) {\n                // eslint-disable-next-line\n            }\n        }\n\n        // rgb(250,20,0)\n        if ((m = css.match(RE_RGB))) {\n            var rgb = m.slice(1,4);\n            for (var i=0; i<3; i++) {\n                rgb[i] = +rgb[i];\n            }\n            rgb[3] = 1;  // default alpha\n            return rgb;\n        }\n\n        // rgba(250,20,0,0.4)\n        if ((m = css.match(RE_RGBA))) {\n            var rgb$1 = m.slice(1,5);\n            for (var i$1=0; i$1<4; i$1++) {\n                rgb$1[i$1] = +rgb$1[i$1];\n            }\n            return rgb$1;\n        }\n\n        // rgb(100%,0%,0%)\n        if ((m = css.match(RE_RGB_PCT))) {\n            var rgb$2 = m.slice(1,4);\n            for (var i$2=0; i$2<3; i$2++) {\n                rgb$2[i$2] = round$4(rgb$2[i$2] * 2.55);\n            }\n            rgb$2[3] = 1;  // default alpha\n            return rgb$2;\n        }\n\n        // rgba(100%,0%,0%,0.4)\n        if ((m = css.match(RE_RGBA_PCT))) {\n            var rgb$3 = m.slice(1,5);\n            for (var i$3=0; i$3<3; i$3++) {\n                rgb$3[i$3] = round$4(rgb$3[i$3] * 2.55);\n            }\n            rgb$3[3] = +rgb$3[3];\n            return rgb$3;\n        }\n\n        // hsl(0,100%,50%)\n        if ((m = css.match(RE_HSL))) {\n            var hsl = m.slice(1,4);\n            hsl[1] *= 0.01;\n            hsl[2] *= 0.01;\n            var rgb$4 = hsl2rgb(hsl);\n            rgb$4[3] = 1;\n            return rgb$4;\n        }\n\n        // hsla(0,100%,50%,0.5)\n        if ((m = css.match(RE_HSLA))) {\n            var hsl$1 = m.slice(1,4);\n            hsl$1[1] *= 0.01;\n            hsl$1[2] *= 0.01;\n            var rgb$5 = hsl2rgb(hsl$1);\n            rgb$5[3] = +m[4];  // default alpha = 1\n            return rgb$5;\n        }\n    };\n\n    css2rgb$1.test = function (s) {\n        return RE_RGB.test(s) ||\n            RE_RGBA.test(s) ||\n            RE_RGB_PCT.test(s) ||\n            RE_RGBA_PCT.test(s) ||\n            RE_HSL.test(s) ||\n            RE_HSLA.test(s);\n    };\n\n    var css2rgb_1 = css2rgb$1;\n\n    var chroma$i = chroma_1;\n    var Color$B = Color_1;\n    var input$e = input$h;\n    var type$k = utils.type;\n\n    var rgb2css = rgb2css_1;\n    var css2rgb = css2rgb_1;\n\n    Color$B.prototype.css = function(mode) {\n        return rgb2css(this._rgb, mode);\n    };\n\n    chroma$i.css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$B, [ null ].concat( args, ['css']) ));\n    };\n\n    input$e.format.css = css2rgb;\n\n    input$e.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$k(h) === 'string' && css2rgb.test(h)) {\n                return 'css';\n            }\n        }\n    });\n\n    var Color$A = Color_1;\n    var chroma$h = chroma_1;\n    var input$d = input$h;\n    var unpack$t = utils.unpack;\n\n    input$d.format.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$t(args, 'rgba');\n        rgb[0] *= 255;\n        rgb[1] *= 255;\n        rgb[2] *= 255;\n        return rgb;\n    };\n\n    chroma$h.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$A, [ null ].concat( args, ['gl']) ));\n    };\n\n    Color$A.prototype.gl = function() {\n        var rgb = this._rgb;\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\n    };\n\n    var unpack$s = utils.unpack;\n\n    var rgb2hcg$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$s(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var c = delta * 100 / 255;\n        var _g = min / (255 - delta) * 100;\n        var h;\n        if (delta === 0) {\n            h = Number.NaN;\n        } else {\n            if (r === max) { h = (g - b) / delta; }\n            if (g === max) { h = 2+(b - r) / delta; }\n            if (b === max) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, c, _g];\n    };\n\n    var rgb2hcg_1 = rgb2hcg$1;\n\n    var unpack$r = utils.unpack;\n    var floor$3 = Math.floor;\n\n    /*\n     * this is basically just HSV with some minor tweaks\n     *\n     * hue.. [0..360]\n     * chroma .. [0..1]\n     * grayness .. [0..1]\n     */\n\n    var hcg2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$r(args, 'hcg');\n        var h = args[0];\n        var c = args[1];\n        var _g = args[2];\n        var r,g,b;\n        _g = _g * 255;\n        var _c = c * 255;\n        if (c === 0) {\n            r = g = b = _g;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n            var i = floor$3(h);\n            var f = h - i;\n            var p = _g * (1 - c);\n            var q = p + _c * (1 - f);\n            var t = p + _c * f;\n            var v = p + _c;\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var hcg2rgb_1 = hcg2rgb;\n\n    var unpack$q = utils.unpack;\n    var type$j = utils.type;\n    var chroma$g = chroma_1;\n    var Color$z = Color_1;\n    var input$c = input$h;\n\n    var rgb2hcg = rgb2hcg_1;\n\n    Color$z.prototype.hcg = function() {\n        return rgb2hcg(this._rgb);\n    };\n\n    chroma$g.hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$z, [ null ].concat( args, ['hcg']) ));\n    };\n\n    input$c.format.hcg = hcg2rgb_1;\n\n    input$c.autodetect.push({\n        p: 1,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$q(args, 'hcg');\n            if (type$j(args) === 'array' && args.length === 3) {\n                return 'hcg';\n            }\n        }\n    });\n\n    var unpack$p = utils.unpack;\n    var last = utils.last;\n    var round$3 = Math.round;\n\n    var rgb2hex$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$p(args, 'rgba');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n        var mode = last(args) || 'auto';\n        if (a === undefined) { a = 1; }\n        if (mode === 'auto') {\n            mode = a < 1 ? 'rgba' : 'rgb';\n        }\n        r = round$3(r);\n        g = round$3(g);\n        b = round$3(b);\n        var u = r << 16 | g << 8 | b;\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\n        str = str.substr(str.length - 6);\n        var hxa = '0' + round$3(a * 255).toString(16);\n        hxa = hxa.substr(hxa.length - 2);\n        switch (mode.toLowerCase()) {\n            case 'rgba': return (\"#\" + str + hxa);\n            case 'argb': return (\"#\" + hxa + str);\n            default: return (\"#\" + str);\n        }\n    };\n\n    var rgb2hex_1 = rgb2hex$2;\n\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n    var hex2rgb$1 = function (hex) {\n        if (hex.match(RE_HEX)) {\n            // remove optional leading #\n            if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full six-digit\n            if (hex.length === 3) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            var u = parseInt(hex, 16);\n            var r = u >> 16;\n            var g = u >> 8 & 0xFF;\n            var b = u & 0xFF;\n            return [r,g,b,1];\n        }\n\n        // match rgba hex format, eg #FF000077\n        if (hex.match(RE_HEXA)) {\n            if (hex.length === 5 || hex.length === 9) {\n                // remove optional leading #\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full eight-digit\n            if (hex.length === 4) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\n            }\n            var u$1 = parseInt(hex, 16);\n            var r$1 = u$1 >> 24 & 0xFF;\n            var g$1 = u$1 >> 16 & 0xFF;\n            var b$1 = u$1 >> 8 & 0xFF;\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n            return [r$1,g$1,b$1,a];\n        }\n\n        // we used to check for css colors here\n        // if _input.css? and rgb = _input.css hex\n        //     return rgb\n\n        throw new Error((\"unknown hex color: \" + hex));\n    };\n\n    var hex2rgb_1 = hex2rgb$1;\n\n    var chroma$f = chroma_1;\n    var Color$y = Color_1;\n    var type$i = utils.type;\n    var input$b = input$h;\n\n    var rgb2hex$1 = rgb2hex_1;\n\n    Color$y.prototype.hex = function(mode) {\n        return rgb2hex$1(this._rgb, mode);\n    };\n\n    chroma$f.hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$y, [ null ].concat( args, ['hex']) ));\n    };\n\n    input$b.format.hex = hex2rgb_1;\n    input$b.autodetect.push({\n        p: 4,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$i(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\n                return 'hex';\n            }\n        }\n    });\n\n    var unpack$o = utils.unpack;\n    var TWOPI$2 = utils.TWOPI;\n    var min$2 = Math.min;\n    var sqrt$4 = Math.sqrt;\n    var acos = Math.acos;\n\n    var rgb2hsi$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n        */\n        var ref = unpack$o(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        var h;\n        var min_ = min$2(r,g,b);\n        var i = (r+g+b) / 3;\n        var s = i > 0 ? 1 - min_/i : 0;\n        if (s === 0) {\n            h = NaN;\n        } else {\n            h = ((r-g)+(r-b)) / 2;\n            h /= sqrt$4((r-g)*(r-g) + (r-b)*(g-b));\n            h = acos(h);\n            if (b > g) {\n                h = TWOPI$2 - h;\n            }\n            h /= TWOPI$2;\n        }\n        return [h*360,s,i];\n    };\n\n    var rgb2hsi_1 = rgb2hsi$1;\n\n    var unpack$n = utils.unpack;\n    var limit = utils.limit;\n    var TWOPI$1 = utils.TWOPI;\n    var PITHIRD = utils.PITHIRD;\n    var cos$4 = Math.cos;\n\n    /*\n     * hue [0..360]\n     * saturation [0..1]\n     * intensity [0..1]\n     */\n    var hsi2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n        */\n        args = unpack$n(args, 'hsi');\n        var h = args[0];\n        var s = args[1];\n        var i = args[2];\n        var r,g,b;\n\n        if (isNaN(h)) { h = 0; }\n        if (isNaN(s)) { s = 0; }\n        // normalize hue\n        if (h > 360) { h -= 360; }\n        if (h < 0) { h += 360; }\n        h /= 360;\n        if (h < 1/3) {\n            b = (1-s)/3;\n            r = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            g = 1 - (b+r);\n        } else if (h < 2/3) {\n            h -= 1/3;\n            r = (1-s)/3;\n            g = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            b = 1 - (r+g);\n        } else {\n            h -= 2/3;\n            g = (1-s)/3;\n            b = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            r = 1 - (g+b);\n        }\n        r = limit(i*r*3);\n        g = limit(i*g*3);\n        b = limit(i*b*3);\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\n    };\n\n    var hsi2rgb_1 = hsi2rgb;\n\n    var unpack$m = utils.unpack;\n    var type$h = utils.type;\n    var chroma$e = chroma_1;\n    var Color$x = Color_1;\n    var input$a = input$h;\n\n    var rgb2hsi = rgb2hsi_1;\n\n    Color$x.prototype.hsi = function() {\n        return rgb2hsi(this._rgb);\n    };\n\n    chroma$e.hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$x, [ null ].concat( args, ['hsi']) ));\n    };\n\n    input$a.format.hsi = hsi2rgb_1;\n\n    input$a.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$m(args, 'hsi');\n            if (type$h(args) === 'array' && args.length === 3) {\n                return 'hsi';\n            }\n        }\n    });\n\n    var unpack$l = utils.unpack;\n    var type$g = utils.type;\n    var chroma$d = chroma_1;\n    var Color$w = Color_1;\n    var input$9 = input$h;\n\n    var rgb2hsl$1 = rgb2hsl_1;\n\n    Color$w.prototype.hsl = function() {\n        return rgb2hsl$1(this._rgb);\n    };\n\n    chroma$d.hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$w, [ null ].concat( args, ['hsl']) ));\n    };\n\n    input$9.format.hsl = hsl2rgb_1;\n\n    input$9.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$l(args, 'hsl');\n            if (type$g(args) === 'array' && args.length === 3) {\n                return 'hsl';\n            }\n        }\n    });\n\n    var unpack$k = utils.unpack;\n    var min$1 = Math.min;\n    var max$1 = Math.max;\n\n    /*\n     * supported arguments:\n     * - rgb2hsv(r,g,b)\n     * - rgb2hsv([r,g,b])\n     * - rgb2hsv({r,g,b})\n     */\n    var rgb2hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$k(args, 'rgb');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n        var min_ = min$1(r, g, b);\n        var max_ = max$1(r, g, b);\n        var delta = max_ - min_;\n        var h,s,v;\n        v = max_ / 255.0;\n        if (max_ === 0) {\n            h = Number.NaN;\n            s = 0;\n        } else {\n            s = delta / max_;\n            if (r === max_) { h = (g - b) / delta; }\n            if (g === max_) { h = 2+(b - r) / delta; }\n            if (b === max_) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, s, v]\n    };\n\n    var rgb2hsv$1 = rgb2hsl;\n\n    var unpack$j = utils.unpack;\n    var floor$2 = Math.floor;\n\n    var hsv2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$j(args, 'hsv');\n        var h = args[0];\n        var s = args[1];\n        var v = args[2];\n        var r,g,b;\n        v *= 255;\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n\n            var i = floor$2(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r,g,b,args.length > 3?args[3]:1];\n    };\n\n    var hsv2rgb_1 = hsv2rgb;\n\n    var unpack$i = utils.unpack;\n    var type$f = utils.type;\n    var chroma$c = chroma_1;\n    var Color$v = Color_1;\n    var input$8 = input$h;\n\n    var rgb2hsv = rgb2hsv$1;\n\n    Color$v.prototype.hsv = function() {\n        return rgb2hsv(this._rgb);\n    };\n\n    chroma$c.hsv = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$v, [ null ].concat( args, ['hsv']) ));\n    };\n\n    input$8.format.hsv = hsv2rgb_1;\n\n    input$8.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$i(args, 'hsv');\n            if (type$f(args) === 'array' && args.length === 3) {\n                return 'hsv';\n            }\n        }\n    });\n\n    var labConstants = {\n        // Corresponds roughly to RGB brighter/darker\n        Kn: 18,\n\n        // D65 standard referent\n        Xn: 0.950470,\n        Yn: 1,\n        Zn: 1.088830,\n\n        t0: 0.137931034,  // 4 / 29\n        t1: 0.206896552,  // 6 / 29\n        t2: 0.12841855,   // 3 * t1 * t1\n        t3: 0.008856452,  // t1 * t1 * t1\n    };\n\n    var LAB_CONSTANTS$3 = labConstants;\n    var unpack$h = utils.unpack;\n    var pow$a = Math.pow;\n\n    var rgb2lab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$h(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2xyz(r,g,b);\n        var x = ref$1[0];\n        var y = ref$1[1];\n        var z = ref$1[2];\n        var l = 116 * y - 16;\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n    };\n\n    var rgb_xyz = function (r) {\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\n        return pow$a((r + 0.055) / 1.055, 2.4);\n    };\n\n    var xyz_lab = function (t) {\n        if (t > LAB_CONSTANTS$3.t3) { return pow$a(t, 1 / 3); }\n        return t / LAB_CONSTANTS$3.t2 + LAB_CONSTANTS$3.t0;\n    };\n\n    var rgb2xyz = function (r,g,b) {\n        r = rgb_xyz(r);\n        g = rgb_xyz(g);\n        b = rgb_xyz(b);\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS$3.Xn);\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS$3.Yn);\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS$3.Zn);\n        return [x,y,z];\n    };\n\n    var rgb2lab_1 = rgb2lab$2;\n\n    var LAB_CONSTANTS$2 = labConstants;\n    var unpack$g = utils.unpack;\n    var pow$9 = Math.pow;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var lab2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$g(args, 'lab');\n        var l = args[0];\n        var a = args[1];\n        var b = args[2];\n        var x,y,z, r,g,b_;\n\n        y = (l + 16) / 116;\n        x = isNaN(a) ? y : y + a / 500;\n        z = isNaN(b) ? y : y - b / 200;\n\n        y = LAB_CONSTANTS$2.Yn * lab_xyz(y);\n        x = LAB_CONSTANTS$2.Xn * lab_xyz(x);\n        z = LAB_CONSTANTS$2.Zn * lab_xyz(z);\n\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\n    };\n\n    var xyz_rgb = function (r) {\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$9(r, 1 / 2.4) - 0.055)\n    };\n\n    var lab_xyz = function (t) {\n        return t > LAB_CONSTANTS$2.t1 ? t * t * t : LAB_CONSTANTS$2.t2 * (t - LAB_CONSTANTS$2.t0)\n    };\n\n    var lab2rgb_1 = lab2rgb$1;\n\n    var unpack$f = utils.unpack;\n    var type$e = utils.type;\n    var chroma$b = chroma_1;\n    var Color$u = Color_1;\n    var input$7 = input$h;\n\n    var rgb2lab$1 = rgb2lab_1;\n\n    Color$u.prototype.lab = function() {\n        return rgb2lab$1(this._rgb);\n    };\n\n    chroma$b.lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$u, [ null ].concat( args, ['lab']) ));\n    };\n\n    input$7.format.lab = lab2rgb_1;\n\n    input$7.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$f(args, 'lab');\n            if (type$e(args) === 'array' && args.length === 3) {\n                return 'lab';\n            }\n        }\n    });\n\n    var unpack$e = utils.unpack;\n    var RAD2DEG = utils.RAD2DEG;\n    var sqrt$3 = Math.sqrt;\n    var atan2$2 = Math.atan2;\n    var round$2 = Math.round;\n\n    var lab2lch$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$e(args, 'lab');\n        var l = ref[0];\n        var a = ref[1];\n        var b = ref[2];\n        var c = sqrt$3(a * a + b * b);\n        var h = (atan2$2(b, a) * RAD2DEG + 360) % 360;\n        if (round$2(c*10000) === 0) { h = Number.NaN; }\n        return [l, c, h];\n    };\n\n    var lab2lch_1 = lab2lch$2;\n\n    var unpack$d = utils.unpack;\n    var rgb2lab = rgb2lab_1;\n    var lab2lch$1 = lab2lch_1;\n\n    var rgb2lch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$d(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2lab(r,g,b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch$1(l,a,b_);\n    };\n\n    var rgb2lch_1 = rgb2lch$1;\n\n    var unpack$c = utils.unpack;\n    var DEG2RAD = utils.DEG2RAD;\n    var sin$3 = Math.sin;\n    var cos$3 = Math.cos;\n\n    var lch2lab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\n        out of gamut if the parameters are in the range 0-1.\n\n        A saturation multiplier was added by Gregor Aisch\n        */\n        var ref = unpack$c(args, 'lch');\n        var l = ref[0];\n        var c = ref[1];\n        var h = ref[2];\n        if (isNaN(h)) { h = 0; }\n        h = h * DEG2RAD;\n        return [l, cos$3(h) * c, sin$3(h) * c]\n    };\n\n    var lch2lab_1 = lch2lab$2;\n\n    var unpack$b = utils.unpack;\n    var lch2lab$1 = lch2lab_1;\n    var lab2rgb = lab2rgb_1;\n\n    var lch2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$b(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab$1 (l,c,h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = lab2rgb (L,a,b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var lch2rgb_1 = lch2rgb$1;\n\n    var unpack$a = utils.unpack;\n    var lch2rgb = lch2rgb_1;\n\n    var hcl2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hcl = unpack$a(args, 'hcl').reverse();\n        return lch2rgb.apply(void 0, hcl);\n    };\n\n    var hcl2rgb_1 = hcl2rgb;\n\n    var unpack$9 = utils.unpack;\n    var type$d = utils.type;\n    var chroma$a = chroma_1;\n    var Color$t = Color_1;\n    var input$6 = input$h;\n\n    var rgb2lch = rgb2lch_1;\n\n    Color$t.prototype.lch = function() { return rgb2lch(this._rgb); };\n    Color$t.prototype.hcl = function() { return rgb2lch(this._rgb).reverse(); };\n\n    chroma$a.lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['lch']) ));\n    };\n    chroma$a.hcl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['hcl']) ));\n    };\n\n    input$6.format.lch = lch2rgb_1;\n    input$6.format.hcl = hcl2rgb_1;\n\n    ['lch','hcl'].forEach(function (m) { return input$6.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$9(args, m);\n            if (type$d(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    }); });\n\n    /**\n    \tX11 color names\n\n    \thttp://www.w3.org/TR/css3-color/#svg-color\n    */\n\n    var w3cx11$1 = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflower: '#6495ed',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        laserlemon: '#ffff54',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrod: '#fafad2',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        maroon2: '#7f0000',\n        maroon3: '#b03060',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        purple2: '#7f007f',\n        purple3: '#a020f0',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32'\n    };\n\n    var w3cx11_1 = w3cx11$1;\n\n    var Color$s = Color_1;\n    var input$5 = input$h;\n    var type$c = utils.type;\n\n    var w3cx11 = w3cx11_1;\n    var hex2rgb = hex2rgb_1;\n    var rgb2hex = rgb2hex_1;\n\n    Color$s.prototype.name = function() {\n        var hex = rgb2hex(this._rgb, 'rgb');\n        for (var i = 0, list = Object.keys(w3cx11); i < list.length; i += 1) {\n            var n = list[i];\n\n            if (w3cx11[n] === hex) { return n.toLowerCase(); }\n        }\n        return hex;\n    };\n\n    input$5.format.named = function (name) {\n        name = name.toLowerCase();\n        if (w3cx11[name]) { return hex2rgb(w3cx11[name]); }\n        throw new Error('unknown color name: '+name);\n    };\n\n    input$5.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$c(h) === 'string' && w3cx11[h.toLowerCase()]) {\n                return 'named';\n            }\n        }\n    });\n\n    var unpack$8 = utils.unpack;\n\n    var rgb2num$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$8(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        return (r << 16) + (g << 8) + b;\n    };\n\n    var rgb2num_1 = rgb2num$1;\n\n    var type$b = utils.type;\n\n    var num2rgb = function (num) {\n        if (type$b(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n            var r = num >> 16;\n            var g = (num >> 8) & 0xFF;\n            var b = num & 0xFF;\n            return [r,g,b,1];\n        }\n        throw new Error(\"unknown num color: \"+num);\n    };\n\n    var num2rgb_1 = num2rgb;\n\n    var chroma$9 = chroma_1;\n    var Color$r = Color_1;\n    var input$4 = input$h;\n    var type$a = utils.type;\n\n    var rgb2num = rgb2num_1;\n\n    Color$r.prototype.num = function() {\n        return rgb2num(this._rgb);\n    };\n\n    chroma$9.num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$r, [ null ].concat( args, ['num']) ));\n    };\n\n    input$4.format.num = num2rgb_1;\n\n    input$4.autodetect.push({\n        p: 5,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            if (args.length === 1 && type$a(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n                return 'num';\n            }\n        }\n    });\n\n    var chroma$8 = chroma_1;\n    var Color$q = Color_1;\n    var input$3 = input$h;\n    var unpack$7 = utils.unpack;\n    var type$9 = utils.type;\n    var round$1 = Math.round;\n\n    Color$q.prototype.rgb = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        if (rnd === false) { return this._rgb.slice(0,3); }\n        return this._rgb.slice(0,3).map(round$1);\n    };\n\n    Color$q.prototype.rgba = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        return this._rgb.slice(0,4).map(function (v,i) {\n            return i<3 ? (rnd === false ? v : round$1(v)) : v;\n        });\n    };\n\n    chroma$8.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$q, [ null ].concat( args, ['rgb']) ));\n    };\n\n    input$3.format.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$7(args, 'rgba');\n        if (rgba[3] === undefined) { rgba[3] = 1; }\n        return rgba;\n    };\n\n    input$3.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$7(args, 'rgba');\n            if (type$9(args) === 'array' && (args.length === 3 ||\n                args.length === 4 && type$9(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n                return 'rgb';\n            }\n        }\n    });\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     */\n\n    var log$1 = Math.log;\n\n    var temperature2rgb$1 = function (kelvin) {\n        var temp = kelvin / 100;\n        var r,g,b;\n        if (temp < 66) {\n            r = 255;\n            g = temp < 6 ? 0 : -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log$1(g);\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log$1(b);\n        } else {\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log$1(r);\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log$1(g);\n            b = 255;\n        }\n        return [r,g,b,1];\n    };\n\n    var temperature2rgb_1 = temperature2rgb$1;\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     **/\n\n    var temperature2rgb = temperature2rgb_1;\n    var unpack$6 = utils.unpack;\n    var round = Math.round;\n\n    var rgb2temperature$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$6(args, 'rgb');\n        var r = rgb[0], b = rgb[2];\n        var minTemp = 1000;\n        var maxTemp = 40000;\n        var eps = 0.4;\n        var temp;\n        while (maxTemp - minTemp > eps) {\n            temp = (maxTemp + minTemp) * 0.5;\n            var rgb$1 = temperature2rgb(temp);\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\n                maxTemp = temp;\n            } else {\n                minTemp = temp;\n            }\n        }\n        return round(temp);\n    };\n\n    var rgb2temperature_1 = rgb2temperature$1;\n\n    var chroma$7 = chroma_1;\n    var Color$p = Color_1;\n    var input$2 = input$h;\n\n    var rgb2temperature = rgb2temperature_1;\n\n    Color$p.prototype.temp =\n    Color$p.prototype.kelvin =\n    Color$p.prototype.temperature = function() {\n        return rgb2temperature(this._rgb);\n    };\n\n    chroma$7.temp =\n    chroma$7.kelvin =\n    chroma$7.temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$p, [ null ].concat( args, ['temp']) ));\n    };\n\n    input$2.format.temp =\n    input$2.format.kelvin =\n    input$2.format.temperature = temperature2rgb_1;\n\n    var unpack$5 = utils.unpack;\n    var cbrt = Math.cbrt;\n    var pow$8 = Math.pow;\n    var sign$1 = Math.sign;\n\n    var rgb2oklab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        // OKLab color space implementation taken from\n        // https://bottosson.github.io/posts/oklab/\n        var ref = unpack$5(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = [rgb2lrgb(r / 255), rgb2lrgb(g / 255), rgb2lrgb(b / 255)];\n        var lr = ref$1[0];\n        var lg = ref$1[1];\n        var lb = ref$1[2];\n        var l = cbrt(0.4122214708 * lr + 0.5363325363 * lg + 0.0514459929 * lb);\n        var m = cbrt(0.2119034982 * lr + 0.6806995451 * lg + 0.1073969566 * lb);\n        var s = cbrt(0.0883024619 * lr + 0.2817188376 * lg + 0.6299787005 * lb);\n\n        return [\n            0.2104542553 * l + 0.793617785 * m - 0.0040720468 * s,\n            1.9779984951 * l - 2.428592205 * m + 0.4505937099 * s,\n            0.0259040371 * l + 0.7827717662 * m - 0.808675766 * s\n        ];\n    };\n\n    var rgb2oklab_1 = rgb2oklab$2;\n\n    function rgb2lrgb(c) {\n        var abs = Math.abs(c);\n        if (abs < 0.04045) {\n            return c / 12.92;\n        }\n        return (sign$1(c) || 1) * pow$8((abs + 0.055) / 1.055, 2.4);\n    }\n\n    var unpack$4 = utils.unpack;\n    var pow$7 = Math.pow;\n    var sign = Math.sign;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var oklab2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$4(args, 'lab');\n        var L = args[0];\n        var a = args[1];\n        var b = args[2];\n\n        var l = pow$7(L + 0.3963377774 * a + 0.2158037573 * b, 3);\n        var m = pow$7(L - 0.1055613458 * a - 0.0638541728 * b, 3);\n        var s = pow$7(L - 0.0894841775 * a - 1.291485548 * b, 3);\n\n        return [\n            255 * lrgb2rgb(+4.0767416621 * l - 3.3077115913 * m + 0.2309699292 * s),\n            255 * lrgb2rgb(-1.2684380046 * l + 2.6097574011 * m - 0.3413193965 * s),\n            255 * lrgb2rgb(-0.0041960863 * l - 0.7034186147 * m + 1.707614701 * s),\n            args.length > 3 ? args[3] : 1\n        ];\n    };\n\n    var oklab2rgb_1 = oklab2rgb$1;\n\n    function lrgb2rgb(c) {\n        var abs = Math.abs(c);\n        if (abs > 0.0031308) {\n            return (sign(c) || 1) * (1.055 * pow$7(abs, 1 / 2.4) - 0.055);\n        }\n        return c * 12.92;\n    }\n\n    var unpack$3 = utils.unpack;\n    var type$8 = utils.type;\n    var chroma$6 = chroma_1;\n    var Color$o = Color_1;\n    var input$1 = input$h;\n\n    var rgb2oklab$1 = rgb2oklab_1;\n\n    Color$o.prototype.oklab = function () {\n        return rgb2oklab$1(this._rgb);\n    };\n\n    chroma$6.oklab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$o, [ null ].concat( args, ['oklab']) ));\n    };\n\n    input$1.format.oklab = oklab2rgb_1;\n\n    input$1.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$3(args, 'oklab');\n            if (type$8(args) === 'array' && args.length === 3) {\n                return 'oklab';\n            }\n        }\n    });\n\n    var unpack$2 = utils.unpack;\n    var rgb2oklab = rgb2oklab_1;\n    var lab2lch = lab2lch_1;\n\n    var rgb2oklch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$2(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2oklab(r, g, b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch(l, a, b_);\n    };\n\n    var rgb2oklch_1 = rgb2oklch$1;\n\n    var unpack$1 = utils.unpack;\n    var lch2lab = lch2lab_1;\n    var oklab2rgb = oklab2rgb_1;\n\n    var oklch2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$1(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab(l, c, h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = oklab2rgb(L, a, b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var oklch2rgb_1 = oklch2rgb;\n\n    var unpack = utils.unpack;\n    var type$7 = utils.type;\n    var chroma$5 = chroma_1;\n    var Color$n = Color_1;\n    var input = input$h;\n\n    var rgb2oklch = rgb2oklch_1;\n\n    Color$n.prototype.oklch = function () {\n        return rgb2oklch(this._rgb);\n    };\n\n    chroma$5.oklch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$n, [ null ].concat( args, ['oklch']) ));\n    };\n\n    input.format.oklch = oklch2rgb_1;\n\n    input.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack(args, 'oklch');\n            if (type$7(args) === 'array' && args.length === 3) {\n                return 'oklch';\n            }\n        }\n    });\n\n    var Color$m = Color_1;\n    var type$6 = utils.type;\n\n    Color$m.prototype.alpha = function(a, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        if (a !== undefined && type$6(a) === 'number') {\n            if (mutate) {\n                this._rgb[3] = a;\n                return this;\n            }\n            return new Color$m([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n        }\n        return this._rgb[3];\n    };\n\n    var Color$l = Color_1;\n\n    Color$l.prototype.clipped = function() {\n        return this._rgb._clipped || false;\n    };\n\n    var Color$k = Color_1;\n    var LAB_CONSTANTS$1 = labConstants;\n\n    Color$k.prototype.darken = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lab = me.lab();\n    \tlab[0] -= LAB_CONSTANTS$1.Kn * amount;\n    \treturn new Color$k(lab, 'lab').alpha(me.alpha(), true);\n    };\n\n    Color$k.prototype.brighten = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.darken(-amount);\n    };\n\n    Color$k.prototype.darker = Color$k.prototype.darken;\n    Color$k.prototype.brighter = Color$k.prototype.brighten;\n\n    var Color$j = Color_1;\n\n    Color$j.prototype.get = function (mc) {\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n            if (i > -1) { return src[i]; }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$i = Color_1;\n    var type$5 = utils.type;\n    var pow$6 = Math.pow;\n\n    var EPS = 1e-7;\n    var MAX_ITER = 20;\n\n    Color$i.prototype.luminance = function(lum) {\n        if (lum !== undefined && type$5(lum) === 'number') {\n            if (lum === 0) {\n                // return pure black\n                return new Color$i([0,0,0,this._rgb[3]], 'rgb');\n            }\n            if (lum === 1) {\n                // return pure white\n                return new Color$i([255,255,255,this._rgb[3]], 'rgb');\n            }\n            // compute new color using...\n            var cur_lum = this.luminance();\n            var mode = 'rgb';\n            var max_iter = MAX_ITER;\n\n            var test = function (low, high) {\n                var mid = low.interpolate(high, 0.5, mode);\n                var lm = mid.luminance();\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                    // close enough\n                    return mid;\n                }\n                return lm > lum ? test(low, mid) : test(mid, high);\n            };\n\n            var rgb = (cur_lum > lum ? test(new Color$i([0,0,0]), this) : test(this, new Color$i([255,255,255]))).rgb();\n            return new Color$i(rgb.concat( [this._rgb[3]]));\n        }\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\n    };\n\n\n    var rgb2luminance = function (r,g,b) {\n        // relative luminance\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        r = luminance_x(r);\n        g = luminance_x(g);\n        b = luminance_x(b);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n\n    var luminance_x = function (x) {\n        x /= 255;\n        return x <= 0.03928 ? x/12.92 : pow$6((x+0.055)/1.055, 2.4);\n    };\n\n    var interpolator$1 = {};\n\n    var Color$h = Color_1;\n    var type$4 = utils.type;\n    var interpolator = interpolator$1;\n\n    var mix$1 = function (col1, col2, f) {\n        if ( f === void 0 ) f=0.5;\n        var rest = [], len = arguments.length - 3;\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\n\n        var mode = rest[0] || 'lrgb';\n        if (!interpolator[mode] && !rest.length) {\n            // fall back to the first supported mode\n            mode = Object.keys(interpolator)[0];\n        }\n        if (!interpolator[mode]) {\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\n        }\n        if (type$4(col1) !== 'object') { col1 = new Color$h(col1); }\n        if (type$4(col2) !== 'object') { col2 = new Color$h(col2); }\n        return interpolator[mode](col1, col2, f)\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    };\n\n    var Color$g = Color_1;\n    var mix = mix$1;\n\n    Color$g.prototype.mix =\n    Color$g.prototype.interpolate = function(col2, f) {\n    \tif ( f === void 0 ) f=0.5;\n    \tvar rest = [], len = arguments.length - 2;\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\n\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\n    };\n\n    var Color$f = Color_1;\n\n    Color$f.prototype.premultiply = function(mutate) {\n    \tif ( mutate === void 0 ) mutate=false;\n\n    \tvar rgb = this._rgb;\n    \tvar a = rgb[3];\n    \tif (mutate) {\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\n    \t\treturn this;\n    \t} else {\n    \t\treturn new Color$f([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\n    \t}\n    };\n\n    var Color$e = Color_1;\n    var LAB_CONSTANTS = labConstants;\n\n    Color$e.prototype.saturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lch = me.lch();\n    \tlch[1] += LAB_CONSTANTS.Kn * amount;\n    \tif (lch[1] < 0) { lch[1] = 0; }\n    \treturn new Color$e(lch, 'lch').alpha(me.alpha(), true);\n    };\n\n    Color$e.prototype.desaturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.saturate(-amount);\n    };\n\n    var Color$d = Color_1;\n    var type$3 = utils.type;\n\n    Color$d.prototype.set = function (mc, value, mutate) {\n        if ( mutate === void 0 ) mutate = false;\n\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n            if (i > -1) {\n                if (type$3(value) == 'string') {\n                    switch (value.charAt(0)) {\n                        case '+':\n                            src[i] += +value;\n                            break;\n                        case '-':\n                            src[i] += +value;\n                            break;\n                        case '*':\n                            src[i] *= +value.substr(1);\n                            break;\n                        case '/':\n                            src[i] /= +value.substr(1);\n                            break;\n                        default:\n                            src[i] = +value;\n                    }\n                } else if (type$3(value) === 'number') {\n                    src[i] = value;\n                } else {\n                    throw new Error(\"unsupported value for Color.set\");\n                }\n                var out = new Color$d(src, mode);\n                if (mutate) {\n                    this._rgb = out._rgb;\n                    return this;\n                }\n                return out;\n            }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$c = Color_1;\n\n    var rgb = function (col1, col2, f) {\n        var xyz0 = col1._rgb;\n        var xyz1 = col2._rgb;\n        return new Color$c(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.rgb = rgb;\n\n    var Color$b = Color_1;\n    var sqrt$2 = Math.sqrt;\n    var pow$5 = Math.pow;\n\n    var lrgb = function (col1, col2, f) {\n        var ref = col1._rgb;\n        var x1 = ref[0];\n        var y1 = ref[1];\n        var z1 = ref[2];\n        var ref$1 = col2._rgb;\n        var x2 = ref$1[0];\n        var y2 = ref$1[1];\n        var z2 = ref$1[2];\n        return new Color$b(\n            sqrt$2(pow$5(x1,2) * (1-f) + pow$5(x2,2) * f),\n            sqrt$2(pow$5(y1,2) * (1-f) + pow$5(y2,2) * f),\n            sqrt$2(pow$5(z1,2) * (1-f) + pow$5(z2,2) * f),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lrgb = lrgb;\n\n    var Color$a = Color_1;\n\n    var lab = function (col1, col2, f) {\n        var xyz0 = col1.lab();\n        var xyz1 = col2.lab();\n        return new Color$a(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'lab'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lab = lab;\n\n    var Color$9 = Color_1;\n\n    var _hsx = function (col1, col2, f, m) {\n        var assign, assign$1;\n\n        var xyz0, xyz1;\n        if (m === 'hsl') {\n            xyz0 = col1.hsl();\n            xyz1 = col2.hsl();\n        } else if (m === 'hsv') {\n            xyz0 = col1.hsv();\n            xyz1 = col2.hsv();\n        } else if (m === 'hcg') {\n            xyz0 = col1.hcg();\n            xyz1 = col2.hcg();\n        } else if (m === 'hsi') {\n            xyz0 = col1.hsi();\n            xyz1 = col2.hsi();\n        } else if (m === 'lch' || m === 'hcl') {\n            m = 'hcl';\n            xyz0 = col1.hcl();\n            xyz1 = col2.hcl();\n        } else if (m === 'oklch') {\n            xyz0 = col1.oklch().reverse();\n            xyz1 = col2.oklch().reverse();\n        }\n\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\n        if (m.substr(0, 1) === 'h' || m === 'oklch') {\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\n        }\n\n        var sat, hue, lbv, dh;\n\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n            // both colors have hue\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1 - (hue0 + 360);\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1 + 360 - hue0;\n            } else {\n                dh = hue1 - hue0;\n            }\n            hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n            hue = hue0;\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\n        } else if (!isNaN(hue1)) {\n            hue = hue1;\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\n        } else {\n            hue = Number.NaN;\n        }\n\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\n        lbv = lbv0 + f * (lbv1 - lbv0);\n        return m === 'oklch' ? new Color$9([lbv, sat, hue], m) : new Color$9([hue, sat, lbv], m);\n    };\n\n    var interpolate_hsx$5 = _hsx;\n\n    var lch = function (col1, col2, f) {\n    \treturn interpolate_hsx$5(col1, col2, f, 'lch');\n    };\n\n    // register interpolator\n    interpolator$1.lch = lch;\n    interpolator$1.hcl = lch;\n\n    var Color$8 = Color_1;\n\n    var num = function (col1, col2, f) {\n        var c1 = col1.num();\n        var c2 = col2.num();\n        return new Color$8(c1 + f * (c2-c1), 'num')\n    };\n\n    // register interpolator\n    interpolator$1.num = num;\n\n    var interpolate_hsx$4 = _hsx;\n\n    var hcg = function (col1, col2, f) {\n    \treturn interpolate_hsx$4(col1, col2, f, 'hcg');\n    };\n\n    // register interpolator\n    interpolator$1.hcg = hcg;\n\n    var interpolate_hsx$3 = _hsx;\n\n    var hsi = function (col1, col2, f) {\n    \treturn interpolate_hsx$3(col1, col2, f, 'hsi');\n    };\n\n    // register interpolator\n    interpolator$1.hsi = hsi;\n\n    var interpolate_hsx$2 = _hsx;\n\n    var hsl = function (col1, col2, f) {\n    \treturn interpolate_hsx$2(col1, col2, f, 'hsl');\n    };\n\n    // register interpolator\n    interpolator$1.hsl = hsl;\n\n    var interpolate_hsx$1 = _hsx;\n\n    var hsv = function (col1, col2, f) {\n    \treturn interpolate_hsx$1(col1, col2, f, 'hsv');\n    };\n\n    // register interpolator\n    interpolator$1.hsv = hsv;\n\n    var Color$7 = Color_1;\n\n    var oklab = function (col1, col2, f) {\n        var xyz0 = col1.oklab();\n        var xyz1 = col2.oklab();\n        return new Color$7(\n            xyz0[0] + f * (xyz1[0] - xyz0[0]),\n            xyz0[1] + f * (xyz1[1] - xyz0[1]),\n            xyz0[2] + f * (xyz1[2] - xyz0[2]),\n            'oklab'\n        );\n    };\n\n    // register interpolator\n    interpolator$1.oklab = oklab;\n\n    var interpolate_hsx = _hsx;\n\n    var oklch = function (col1, col2, f) {\n        return interpolate_hsx(col1, col2, f, 'oklch');\n    };\n\n    // register interpolator\n    interpolator$1.oklch = oklch;\n\n    var Color$6 = Color_1;\n    var clip_rgb$1 = utils.clip_rgb;\n    var pow$4 = Math.pow;\n    var sqrt$1 = Math.sqrt;\n    var PI$1 = Math.PI;\n    var cos$2 = Math.cos;\n    var sin$2 = Math.sin;\n    var atan2$1 = Math.atan2;\n\n    var average = function (colors, mode, weights) {\n        if ( mode === void 0 ) mode='lrgb';\n        if ( weights === void 0 ) weights=null;\n\n        var l = colors.length;\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\n        // normalize weights\n        var k = l / weights.reduce(function(a, b) { return a + b; });\n        weights.forEach(function (w,i) { weights[i] *= k; });\n        // convert colors to Color objects\n        colors = colors.map(function (c) { return new Color$6(c); });\n        if (mode === 'lrgb') {\n            return _average_lrgb(colors, weights)\n        }\n        var first = colors.shift();\n        var xyz = first.get(mode);\n        var cnt = [];\n        var dx = 0;\n        var dy = 0;\n        // initial color\n        for (var i=0; i<xyz.length; i++) {\n            xyz[i] = (xyz[i] || 0) * weights[0];\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n                var A = xyz[i] / 180 * PI$1;\n                dx += cos$2(A) * weights[0];\n                dy += sin$2(A) * weights[0];\n            }\n        }\n\n        var alpha = first.alpha() * weights[0];\n        colors.forEach(function (c,ci) {\n            var xyz2 = c.get(mode);\n            alpha += c.alpha() * weights[ci+1];\n            for (var i=0; i<xyz.length; i++) {\n                if (!isNaN(xyz2[i])) {\n                    cnt[i] += weights[ci+1];\n                    if (mode.charAt(i) === 'h') {\n                        var A = xyz2[i] / 180 * PI$1;\n                        dx += cos$2(A) * weights[ci+1];\n                        dy += sin$2(A) * weights[ci+1];\n                    } else {\n                        xyz[i] += xyz2[i] * weights[ci+1];\n                    }\n                }\n            }\n        });\n\n        for (var i$1=0; i$1<xyz.length; i$1++) {\n            if (mode.charAt(i$1) === 'h') {\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n                while (A$1 < 0) { A$1 += 360; }\n                while (A$1 >= 360) { A$1 -= 360; }\n                xyz[i$1] = A$1;\n            } else {\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\n            }\n        }\n        alpha /= l;\n        return (new Color$6(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\n    };\n\n\n    var _average_lrgb = function (colors, weights) {\n        var l = colors.length;\n        var xyz = [0,0,0,0];\n        for (var i=0; i < colors.length; i++) {\n            var col = colors[i];\n            var f = weights[i] / l;\n            var rgb = col._rgb;\n            xyz[0] += pow$4(rgb[0],2) * f;\n            xyz[1] += pow$4(rgb[1],2) * f;\n            xyz[2] += pow$4(rgb[2],2) * f;\n            xyz[3] += rgb[3] * f;\n        }\n        xyz[0] = sqrt$1(xyz[0]);\n        xyz[1] = sqrt$1(xyz[1]);\n        xyz[2] = sqrt$1(xyz[2]);\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\n        return new Color$6(clip_rgb$1(xyz));\n    };\n\n    // minimal multi-purpose interface\n\n    // @requires utils color analyze\n\n    var chroma$4 = chroma_1;\n    var type$2 = utils.type;\n\n    var pow$3 = Math.pow;\n\n    var scale$2 = function(colors) {\n\n        // constructor\n        var _mode = 'rgb';\n        var _nacol = chroma$4('#ccc');\n        var _spread = 0;\n        // const _fixed = false;\n        var _domain = [0, 1];\n        var _pos = [];\n        var _padding = [0,0];\n        var _classes = false;\n        var _colors = [];\n        var _out = false;\n        var _min = 0;\n        var _max = 1;\n        var _correctLightness = false;\n        var _colorCache = {};\n        var _useCache = true;\n        var _gamma = 1;\n\n        // private methods\n\n        var setColors = function(colors) {\n            colors = colors || ['#fff', '#000'];\n            if (colors && type$2(colors) === 'string' && chroma$4.brewer &&\n                chroma$4.brewer[colors.toLowerCase()]) {\n                colors = chroma$4.brewer[colors.toLowerCase()];\n            }\n            if (type$2(colors) === 'array') {\n                // handle single color\n                if (colors.length === 1) {\n                    colors = [colors[0], colors[0]];\n                }\n                // make a copy of the colors\n                colors = colors.slice(0);\n                // convert to chroma classes\n                for (var c=0; c<colors.length; c++) {\n                    colors[c] = chroma$4(colors[c]);\n                }\n                // auto-fill color position\n                _pos.length = 0;\n                for (var c$1=0; c$1<colors.length; c$1++) {\n                    _pos.push(c$1/(colors.length-1));\n                }\n            }\n            resetCache();\n            return _colors = colors;\n        };\n\n        var getClass = function(value) {\n            if (_classes != null) {\n                var n = _classes.length-1;\n                var i = 0;\n                while (i < n && value >= _classes[i]) {\n                    i++;\n                }\n                return i-1;\n            }\n            return 0;\n        };\n\n        var tMapLightness = function (t) { return t; };\n        var tMapDomain = function (t) { return t; };\n\n        // const classifyValue = function(value) {\n        //     let val = value;\n        //     if (_classes.length > 2) {\n        //         const n = _classes.length-1;\n        //         const i = getClass(value);\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n        //     }\n        //     return val;\n        // };\n\n        var getColor = function(val, bypassMap) {\n            var col, t;\n            if (bypassMap == null) { bypassMap = false; }\n            if (isNaN(val) || (val === null)) { return _nacol; }\n            if (!bypassMap) {\n                if (_classes && (_classes.length > 2)) {\n                    // find the class\n                    var c = getClass(val);\n                    t = c / (_classes.length-2);\n                } else if (_max !== _min) {\n                    // just interpolate between min/max\n                    t = (val - _min) / (_max - _min);\n                } else {\n                    t = 1;\n                }\n            } else {\n                t = val;\n            }\n\n            // domain map\n            t = tMapDomain(t);\n\n            if (!bypassMap) {\n                t = tMapLightness(t);  // lightness correction\n            }\n\n            if (_gamma !== 1) { t = pow$3(t, _gamma); }\n\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n\n            t = Math.min(1, Math.max(0, t));\n\n            var k = Math.floor(t * 10000);\n\n            if (_useCache && _colorCache[k]) {\n                col = _colorCache[k];\n            } else {\n                if (type$2(_colors) === 'array') {\n                    //for i in [0.._pos.length-1]\n                    for (var i=0; i<_pos.length; i++) {\n                        var p = _pos[i];\n                        if (t <= p) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if ((t >= p) && (i === (_pos.length-1))) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if (t > p && t < _pos[i+1]) {\n                            t = (t-p)/(_pos[i+1]-p);\n                            col = chroma$4.interpolate(_colors[i], _colors[i+1], t, _mode);\n                            break;\n                        }\n                    }\n                } else if (type$2(_colors) === 'function') {\n                    col = _colors(t);\n                }\n                if (_useCache) { _colorCache[k] = col; }\n            }\n            return col;\n        };\n\n        var resetCache = function () { return _colorCache = {}; };\n\n        setColors(colors);\n\n        // public interface\n\n        var f = function(v) {\n            var c = chroma$4(getColor(v));\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\n        };\n\n        f.classes = function(classes) {\n            if (classes != null) {\n                if (type$2(classes) === 'array') {\n                    _classes = classes;\n                    _domain = [classes[0], classes[classes.length-1]];\n                } else {\n                    var d = chroma$4.analyze(_domain);\n                    if (classes === 0) {\n                        _classes = [d.min, d.max];\n                    } else {\n                        _classes = chroma$4.limits(d, 'e', classes);\n                    }\n                }\n                return f;\n            }\n            return _classes;\n        };\n\n\n        f.domain = function(domain) {\n            if (!arguments.length) {\n                return _domain;\n            }\n            _min = domain[0];\n            _max = domain[domain.length-1];\n            _pos = [];\n            var k = _colors.length;\n            if ((domain.length === k) && (_min !== _max)) {\n                // update positions\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n                    var d = list[i];\n\n                  _pos.push((d-_min) / (_max-_min));\n                }\n            } else {\n                for (var c=0; c<k; c++) {\n                    _pos.push(c/(k-1));\n                }\n                if (domain.length > 2) {\n                    // set domain map\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\n                        tMapDomain = function (t) {\n                            if (t <= 0 || t >= 1) { return t; }\n                            var i = 0;\n                            while (t >= tBreaks[i+1]) { i++; }\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\n                            return out;\n                        };\n                    }\n\n                }\n            }\n            _domain = [_min, _max];\n            return f;\n        };\n\n        f.mode = function(_m) {\n            if (!arguments.length) {\n                return _mode;\n            }\n            _mode = _m;\n            resetCache();\n            return f;\n        };\n\n        f.range = function(colors, _pos) {\n            setColors(colors);\n            return f;\n        };\n\n        f.out = function(_o) {\n            _out = _o;\n            return f;\n        };\n\n        f.spread = function(val) {\n            if (!arguments.length) {\n                return _spread;\n            }\n            _spread = val;\n            return f;\n        };\n\n        f.correctLightness = function(v) {\n            if (v == null) { v = true; }\n            _correctLightness = v;\n            resetCache();\n            if (_correctLightness) {\n                tMapLightness = function(t) {\n                    var L0 = getColor(0, true).lab()[0];\n                    var L1 = getColor(1, true).lab()[0];\n                    var pol = L0 > L1;\n                    var L_actual = getColor(t, true).lab()[0];\n                    var L_ideal = L0 + ((L1 - L0) * t);\n                    var L_diff = L_actual - L_ideal;\n                    var t0 = 0;\n                    var t1 = 1;\n                    var max_iter = 20;\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\n                        (function() {\n                            if (pol) { L_diff *= -1; }\n                            if (L_diff < 0) {\n                                t0 = t;\n                                t += (t1 - t) * 0.5;\n                            } else {\n                                t1 = t;\n                                t += (t0 - t) * 0.5;\n                            }\n                            L_actual = getColor(t, true).lab()[0];\n                            return L_diff = L_actual - L_ideal;\n                        })();\n                    }\n                    return t;\n                };\n            } else {\n                tMapLightness = function (t) { return t; };\n            }\n            return f;\n        };\n\n        f.padding = function(p) {\n            if (p != null) {\n                if (type$2(p) === 'number') {\n                    p = [p,p];\n                }\n                _padding = p;\n                return f;\n            } else {\n                return _padding;\n            }\n        };\n\n        f.colors = function(numColors, out) {\n            // If no arguments are given, return the original colors that were provided\n            if (arguments.length < 2) { out = 'hex'; }\n            var result = [];\n\n            if (arguments.length === 0) {\n                result = _colors.slice(0);\n\n            } else if (numColors === 1) {\n                result = [f(0.5)];\n\n            } else if (numColors > 1) {\n                var dm = _domain[0];\n                var dd = _domain[1] - dm;\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\n\n            } else { // returns all colors based on the defined classes\n                colors = [];\n                var samples = [];\n                if (_classes && (_classes.length > 2)) {\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\n                    }\n                } else {\n                    samples = _domain;\n                }\n                result = samples.map(function (v) { return f(v); });\n            }\n\n            if (chroma$4[out]) {\n                result = result.map(function (c) { return c[out](); });\n            }\n            return result;\n        };\n\n        f.cache = function(c) {\n            if (c != null) {\n                _useCache = c;\n                return f;\n            } else {\n                return _useCache;\n            }\n        };\n\n        f.gamma = function(g) {\n            if (g != null) {\n                _gamma = g;\n                return f;\n            } else {\n                return _gamma;\n            }\n        };\n\n        f.nodata = function(d) {\n            if (d != null) {\n                _nacol = chroma$4(d);\n                return f;\n            } else {\n                return _nacol;\n            }\n        };\n\n        return f;\n    };\n\n    function __range__(left, right, inclusive) {\n      var range = [];\n      var ascending = left < right;\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n      }\n      return range;\n    }\n\n    //\n    // interpolates between a set of colors uzing a bezier spline\n    //\n\n    // @requires utils lab\n    var Color$5 = Color_1;\n\n    var scale$1 = scale$2;\n\n    // nth row of the pascal triangle\n    var binom_row = function(n) {\n        var row = [1, 1];\n        for (var i = 1; i < n; i++) {\n            var newrow = [1];\n            for (var j = 1; j <= row.length; j++) {\n                newrow[j] = (row[j] || 0) + row[j - 1];\n            }\n            row = newrow;\n        }\n        return row;\n    };\n\n    var bezier = function(colors) {\n        var assign, assign$1, assign$2;\n\n        var I, lab0, lab1, lab2;\n        colors = colors.map(function (c) { return new Color$5(c); });\n        if (colors.length === 2) {\n            // linear interpolation\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 3) {\n            // quadratic bezier interpolation\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 4) {\n            // cubic bezier interpolation\n            var lab3;\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length >= 5) {\n            // general case (degree n bezier)\n            var labs, row, n;\n            labs = colors.map(function (c) { return c.lab(); });\n            n = colors.length - 1;\n            row = binom_row(n);\n            I = function (t) {\n                var u = 1 - t;\n                var lab = ([0, 1, 2].map(function (i) { return labs.reduce(function (sum, el, j) { return (sum + row[j] * Math.pow( u, (n - j) ) * Math.pow( t, j ) * el[i]); }, 0); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else {\n            throw new RangeError(\"No point in running bezier with only one color.\")\n        }\n        return I;\n    };\n\n    var bezier_1 = function (colors) {\n        var f = bezier(colors);\n        f.scale = function () { return scale$1(f); };\n        return f;\n    };\n\n    /*\n     * interpolates between a set of colors uzing a bezier spline\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n     */\n\n    var chroma$3 = chroma_1;\n\n    var blend = function (bottom, top, mode) {\n        if (!blend[mode]) {\n            throw new Error('unknown blend mode ' + mode);\n        }\n        return blend[mode](bottom, top);\n    };\n\n    var blend_f = function (f) { return function (bottom,top) {\n            var c0 = chroma$3(top).rgb();\n            var c1 = chroma$3(bottom).rgb();\n            return chroma$3.rgb(f(c0, c1));\n        }; };\n\n    var each = function (f) { return function (c0, c1) {\n            var out = [];\n            out[0] = f(c0[0], c1[0]);\n            out[1] = f(c0[1], c1[1]);\n            out[2] = f(c0[2], c1[2]);\n            return out;\n        }; };\n\n    var normal = function (a) { return a; };\n    var multiply = function (a,b) { return a * b / 255; };\n    var darken = function (a,b) { return a > b ? b : a; };\n    var lighten = function (a,b) { return a > b ? a : b; };\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\n    var dodge = function (a,b) {\n        if (a === 255) { return 255; }\n        a = 255 * (b / 255) / (1 - a / 255);\n        return a > 255 ? 255 : a\n    };\n\n    // # add = (a,b) ->\n    // #     if (a + b > 255) then 255 else a + b\n\n    blend.normal = blend_f(each(normal));\n    blend.multiply = blend_f(each(multiply));\n    blend.screen = blend_f(each(screen));\n    blend.overlay = blend_f(each(overlay));\n    blend.darken = blend_f(each(darken));\n    blend.lighten = blend_f(each(lighten));\n    blend.dodge = blend_f(each(dodge));\n    blend.burn = blend_f(each(burn));\n    // blend.add = blend_f(each(add));\n\n    var blend_1 = blend;\n\n    // cubehelix interpolation\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n    var type$1 = utils.type;\n    var clip_rgb = utils.clip_rgb;\n    var TWOPI = utils.TWOPI;\n    var pow$2 = Math.pow;\n    var sin$1 = Math.sin;\n    var cos$1 = Math.cos;\n    var chroma$2 = chroma_1;\n\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\n        if ( start === void 0 ) start=300;\n        if ( rotations === void 0 ) rotations=-1.5;\n        if ( hue === void 0 ) hue=1;\n        if ( gamma === void 0 ) gamma=1;\n        if ( lightness === void 0 ) lightness=[0,1];\n\n        var dh = 0, dl;\n        if (type$1(lightness) === 'array') {\n            dl = lightness[1] - lightness[0];\n        } else {\n            dl = 0;\n            lightness = [lightness, lightness];\n        }\n\n        var f = function(fract) {\n            var a = TWOPI * (((start+120)/360) + (rotations * fract));\n            var l = pow$2(lightness[0] + (dl * fract), gamma);\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\n            var amp = (h * l * (1-l)) / 2;\n            var cos_a = cos$1(a);\n            var sin_a = sin$1(a);\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\n            var b = l + (amp * (+1.97294 * cos_a));\n            return chroma$2(clip_rgb([r*255,g*255,b*255,1]));\n        };\n\n        f.start = function(s) {\n            if ((s == null)) { return start; }\n            start = s;\n            return f;\n        };\n\n        f.rotations = function(r) {\n            if ((r == null)) { return rotations; }\n            rotations = r;\n            return f;\n        };\n\n        f.gamma = function(g) {\n            if ((g == null)) { return gamma; }\n            gamma = g;\n            return f;\n        };\n\n        f.hue = function(h) {\n            if ((h == null)) { return hue; }\n            hue = h;\n            if (type$1(hue) === 'array') {\n                dh = hue[1] - hue[0];\n                if (dh === 0) { hue = hue[1]; }\n            } else {\n                dh = 0;\n            }\n            return f;\n        };\n\n        f.lightness = function(h) {\n            if ((h == null)) { return lightness; }\n            if (type$1(h) === 'array') {\n                lightness = h;\n                dl = h[1] - h[0];\n            } else {\n                lightness = [h,h];\n                dl = 0;\n            }\n            return f;\n        };\n\n        f.scale = function () { return chroma$2.scale(f); };\n\n        f.hue(hue);\n\n        return f;\n    };\n\n    var Color$4 = Color_1;\n    var digits = '0123456789abcdef';\n\n    var floor$1 = Math.floor;\n    var random = Math.random;\n\n    var random_1 = function () {\n        var code = '#';\n        for (var i=0; i<6; i++) {\n            code += digits.charAt(floor$1(random() * 16));\n        }\n        return new Color$4(code, 'hex');\n    };\n\n    var type = type$p;\n    var log = Math.log;\n    var pow$1 = Math.pow;\n    var floor = Math.floor;\n    var abs$1 = Math.abs;\n\n\n    var analyze = function (data, key) {\n        if ( key === void 0 ) key=null;\n\n        var r = {\n            min: Number.MAX_VALUE,\n            max: Number.MAX_VALUE*-1,\n            sum: 0,\n            values: [],\n            count: 0\n        };\n        if (type(data) === 'object') {\n            data = Object.values(data);\n        }\n        data.forEach(function (val) {\n            if (key && type(val) === 'object') { val = val[key]; }\n            if (val !== undefined && val !== null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n                if (val < r.min) { r.min = val; }\n                if (val > r.max) { r.max = val; }\n                r.count += 1;\n            }\n        });\n\n        r.domain = [r.min, r.max];\n\n        r.limits = function (mode, num) { return limits(r, mode, num); };\n\n        return r;\n    };\n\n\n    var limits = function (data, mode, num) {\n        if ( mode === void 0 ) mode='equal';\n        if ( num === void 0 ) num=7;\n\n        if (type(data) == 'array') {\n            data = analyze(data);\n        }\n        var min = data.min;\n        var max = data.max;\n        var values = data.values.sort(function (a,b) { return a-b; });\n\n        if (num === 1) { return [min,max]; }\n\n        var limits = [];\n\n        if (mode.substr(0,1) === 'c') { // continuous\n            limits.push(min);\n            limits.push(max);\n        }\n\n        if (mode.substr(0,1) === 'e') { // equal interval\n            limits.push(min);\n            for (var i=1; i<num; i++) {\n                limits.push(min+((i/num)*(max-min)));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'l') { // log scale\n            if (min <= 0) {\n                throw new Error('Logarithmic scales are only possible for values > 0');\n            }\n            var min_log = Math.LOG10E * log(min);\n            var max_log = Math.LOG10E * log(max);\n            limits.push(min);\n            for (var i$1=1; i$1<num; i$1++) {\n                limits.push(pow$1(10, min_log + ((i$1/num) * (max_log - min_log))));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'q') { // quantile scale\n            limits.push(min);\n            for (var i$2=1; i$2<num; i$2++) {\n                var p = ((values.length-1) * i$2)/num;\n                var pb = floor(p);\n                if (pb === p) {\n                    limits.push(values[pb]);\n                } else { // p > pb\n                    var pr = p - pb;\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\n                }\n            }\n            limits.push(max);\n\n        }\n\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\n            /*\n            implementation based on\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n            simplified for 1-d input values\n            */\n            var cluster;\n            var n = values.length;\n            var assignments = new Array(n);\n            var clusterSizes = new Array(num);\n            var repeat = true;\n            var nb_iters = 0;\n            var centroids = null;\n\n            // get seed values\n            centroids = [];\n            centroids.push(min);\n            for (var i$3=1; i$3<num; i$3++) {\n                centroids.push(min + ((i$3/num) * (max-min)));\n            }\n            centroids.push(max);\n\n            while (repeat) {\n                // assignment step\n                for (var j=0; j<num; j++) {\n                    clusterSizes[j] = 0;\n                }\n                for (var i$4=0; i$4<n; i$4++) {\n                    var value = values[i$4];\n                    var mindist = Number.MAX_VALUE;\n                    var best = (void 0);\n                    for (var j$1=0; j$1<num; j$1++) {\n                        var dist = abs$1(centroids[j$1]-value);\n                        if (dist < mindist) {\n                            mindist = dist;\n                            best = j$1;\n                        }\n                        clusterSizes[best]++;\n                        assignments[i$4] = best;\n                    }\n                }\n\n                // update centroids step\n                var newCentroids = new Array(num);\n                for (var j$2=0; j$2<num; j$2++) {\n                    newCentroids[j$2] = null;\n                }\n                for (var i$5=0; i$5<n; i$5++) {\n                    cluster = assignments[i$5];\n                    if (newCentroids[cluster] === null) {\n                        newCentroids[cluster] = values[i$5];\n                    } else {\n                        newCentroids[cluster] += values[i$5];\n                    }\n                }\n                for (var j$3=0; j$3<num; j$3++) {\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\n                }\n\n                // check convergence\n                repeat = false;\n                for (var j$4=0; j$4<num; j$4++) {\n                    if (newCentroids[j$4] !== centroids[j$4]) {\n                        repeat = true;\n                        break;\n                    }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                    repeat = false;\n                }\n            }\n\n            // finished k-means clustering\n            // the next part is borrowed from gabrielflor.it\n            var kClusters = {};\n            for (var j$5=0; j$5<num; j$5++) {\n                kClusters[j$5] = [];\n            }\n            for (var i$6=0; i$6<n; i$6++) {\n                cluster = assignments[i$6];\n                kClusters[cluster].push(values[i$6]);\n            }\n            var tmpKMeansBreaks = [];\n            for (var j$6=0; j$6<num; j$6++) {\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\n            }\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\n            limits.push(tmpKMeansBreaks[0]);\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\n                var v = tmpKMeansBreaks[i$7];\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\n                    limits.push(v);\n                }\n            }\n        }\n        return limits;\n    };\n\n    var analyze_1 = {analyze: analyze, limits: limits};\n\n    var Color$3 = Color_1;\n\n\n    var contrast = function (a, b) {\n        // WCAG contrast ratio\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n        a = new Color$3(a);\n        b = new Color$3(b);\n        var l1 = a.luminance();\n        var l2 = b.luminance();\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n    };\n\n    var Color$2 = Color_1;\n    var sqrt = Math.sqrt;\n    var pow = Math.pow;\n    var min = Math.min;\n    var max = Math.max;\n    var atan2 = Math.atan2;\n    var abs = Math.abs;\n    var cos = Math.cos;\n    var sin = Math.sin;\n    var exp = Math.exp;\n    var PI = Math.PI;\n\n    var deltaE = function(a, b, Kl, Kc, Kh) {\n        if ( Kl === void 0 ) Kl=1;\n        if ( Kc === void 0 ) Kc=1;\n        if ( Kh === void 0 ) Kh=1;\n\n        // Delta E (CIE 2000)\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\n        var rad2deg = function(rad) {\n            return 360 * rad / (2 * PI);\n        };\n        var deg2rad = function(deg) {\n            return (2 * PI * deg) / 360;\n        };\n        a = new Color$2(a);\n        b = new Color$2(b);\n        var ref = Array.from(a.lab());\n        var L1 = ref[0];\n        var a1 = ref[1];\n        var b1 = ref[2];\n        var ref$1 = Array.from(b.lab());\n        var L2 = ref$1[0];\n        var a2 = ref$1[1];\n        var b2 = ref$1[2];\n        var avgL = (L1 + L2)/2;\n        var C1 = sqrt(pow(a1, 2) + pow(b1, 2));\n        var C2 = sqrt(pow(a2, 2) + pow(b2, 2));\n        var avgC = (C1 + C2)/2;\n        var G = 0.5*(1-sqrt(pow(avgC, 7)/(pow(avgC, 7) + pow(25, 7))));\n        var a1p = a1*(1+G);\n        var a2p = a2*(1+G);\n        var C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\n        var C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\n        var avgCp = (C1p + C2p)/2;\n        var arctan1 = rad2deg(atan2(b1, a1p));\n        var arctan2 = rad2deg(atan2(b2, a2p));\n        var h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\n        var h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\n        var avgHp = abs(h1p - h2p) > 180 ? (h1p + h2p + 360)/2 : (h1p + h2p)/2;\n        var T = 1 - 0.17*cos(deg2rad(avgHp - 30)) + 0.24*cos(deg2rad(2*avgHp)) + 0.32*cos(deg2rad(3*avgHp + 6)) - 0.2*cos(deg2rad(4*avgHp - 63));\n        var deltaHp = h2p - h1p;\n        deltaHp = abs(deltaHp) <= 180 ? deltaHp : h2p <= h1p ? deltaHp + 360 : deltaHp - 360;\n        deltaHp = 2*sqrt(C1p*C2p)*sin(deg2rad(deltaHp)/2);\n        var deltaL = L2 - L1;\n        var deltaCp = C2p - C1p;    \n        var sl = 1 + (0.015*pow(avgL - 50, 2))/sqrt(20 + pow(avgL - 50, 2));\n        var sc = 1 + 0.045*avgCp;\n        var sh = 1 + 0.015*avgCp*T;\n        var deltaTheta = 30*exp(-pow((avgHp - 275)/25, 2));\n        var Rc = 2*sqrt(pow(avgCp, 7)/(pow(avgCp, 7) + pow(25, 7)));\n        var Rt = -Rc*sin(2*deg2rad(deltaTheta));\n        var result = sqrt(pow(deltaL/(Kl*sl), 2) + pow(deltaCp/(Kc*sc), 2) + pow(deltaHp/(Kh*sh), 2) + Rt*(deltaCp/(Kc*sc))*(deltaHp/(Kh*sh)));\n        return max(0, min(100, result));\n    };\n\n    var Color$1 = Color_1;\n\n    // simple Euclidean distance\n    var distance = function(a, b, mode) {\n        if ( mode === void 0 ) mode='lab';\n\n        // Delta E (CIE 1976)\n        // see http://www.brucelindbloom.com/index.html?Equations.html\n        a = new Color$1(a);\n        b = new Color$1(b);\n        var l1 = a.get(mode);\n        var l2 = b.get(mode);\n        var sum_sq = 0;\n        for (var i in l1) {\n            var d = (l1[i] || 0) - (l2[i] || 0);\n            sum_sq += d*d;\n        }\n        return Math.sqrt(sum_sq);\n    };\n\n    var Color = Color_1;\n\n    var valid = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        try {\n            new (Function.prototype.bind.apply( Color, [ null ].concat( args) ));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // some pre-defined color scales:\n    var chroma$1 = chroma_1;\n\n    var scale = scale$2;\n\n    var scales = {\n    \tcool: function cool() { return scale([chroma$1.hsl(180,1,.9), chroma$1.hsl(250,.7,.4)]) },\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff']).mode('rgb') }\n    };\n\n    /**\n        ColorBrewer colors for chroma.js\n\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n        Pennsylvania State University.\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software distributed\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\n        specific language governing permissions and limitations under the License.\n    */\n\n    var colorbrewer = {\n        // sequential\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n        // diverging\n\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n        // qualitative\n\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\n    };\n\n    // add lowercase aliases for case-insensitive matches\n    for (var i = 0, list = Object.keys(colorbrewer); i < list.length; i += 1) {\n        var key = list[i];\n\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\n    }\n\n    var colorbrewer_1 = colorbrewer;\n\n    var chroma = chroma_1;\n\n    // feel free to comment out anything to rollup\n    // a smaller chroma.js built\n\n    // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n    // interpolators\n\n\n\n\n\n\n\n\n\n\n\n\n    // generators -- > create new colors\n    chroma.average = average;\n    chroma.bezier = bezier_1;\n    chroma.blend = blend_1;\n    chroma.cubehelix = cubehelix;\n    chroma.mix = chroma.interpolate = mix$1;\n    chroma.random = random_1;\n    chroma.scale = scale$2;\n\n    // other utility methods\n    chroma.analyze = analyze_1.analyze;\n    chroma.contrast = contrast;\n    chroma.deltaE = deltaE;\n    chroma.distance = distance;\n    chroma.limits = analyze_1.limits;\n    chroma.valid = valid;\n\n    // scale\n    chroma.scales = scales;\n\n    // colors\n    chroma.colors = w3cx11_1;\n    chroma.brewer = colorbrewer_1;\n\n    var chroma_js = chroma;\n\n    return chroma_js;\n\n}));\n","import * as THREE from \"three\";\r\nimport chroma from \"chroma-js\";\r\n\r\nfunction lerp(start: number, end: number, value: number) {\r\n  return (1 - value) * start + value * end;\r\n}\r\n\r\nfunction rescale(\r\n  value: number,\r\n  srcRange: [number, number],\r\n  dstRange: [number, number]\r\n) {\r\n  const [dstMin, dstMax] = dstRange;\r\n  const [srcMin, srcMax] = srcRange;\r\n\r\n  if (srcMin == srcMax) {\r\n    return dstMin;\r\n  }\r\n\r\n  const scale = (value - srcMin) / (srcMax - srcMin);\r\n  return scale * (dstMax - dstMin) + dstMin;\r\n}\r\n\r\nfunction interpolate(scale: number[], value: number) {\r\n  const count = scale.length - 1;\r\n  const low = Math.max(Math.floor(count * value), 0) | 0;\r\n  const high = Math.min(Math.ceil(count * value), count) | 0;\r\n  return lerp(\r\n    scale[low],\r\n    scale[high],\r\n    rescale(value, [low / count, high / count], [0, 1])\r\n  );\r\n}\r\n\r\nfunction ThreeHex(hex: string) {\r\n  var color = new THREE.Color(hex);\r\n  return color.getHex();\r\n}\r\n\r\nconst dayLight = () => {\r\n  const showHelpers = false;\r\n  const output = document.querySelector(\"#timeofday\");\r\n\r\n  let sunmooncolors = chroma.scale([\r\n    0x31a2ff,\r\n    0x31a2ff,\r\n    0xffffff,\r\n    0x31a2ff,\r\n    0x31a2ff\r\n  ]);\r\n  const suncolors = chroma\r\n    .scale([\r\n      \"#31A2FF\",\r\n      \"#7338BD\",\r\n      \"#FFC5B8\",\r\n      \"#FFEBB8\",\r\n      \"#FFCE84\",\r\n      \"#FF7ECC\",\r\n      \"#31A2FF\"\r\n    ])\r\n    .domain([0, 0.23, 0.37, 0.48, 0.86, 0.93, 1]);\r\n\r\n  // const suncolors = chroma.scale([\"#FFEBB8\"]);\r\n  const mooncolors = chroma\r\n    .scale([\r\n      \"#FFCE84\",\r\n      \"#FF7ECC\",\r\n      \"#31A2FF\",\r\n      \"#31A2FF\",\r\n      \"#7338BD\",\r\n      \"#FFC5B8\",\r\n      \"#FFEBB8\"\r\n    ])\r\n    .domain([0.86, 0.93, 1, 0, 0.23, 0.37, 0.48]);\r\n  /*\r\n  \r\n  \r\n  */\r\n\r\n  const sunGroup = new THREE.Group();\r\n  sunGroup.position.set(0, 7, 0);\r\n\r\n  const moonGroup = new THREE.Group();\r\n  moonGroup.position.set(0, -7, 0);\r\n\r\n  const sun = new THREE.DirectionalLight(0xff0000, 1);\r\n\r\n  const sunSphere = new THREE.Mesh(new THREE.SphereGeometry(0.5));\r\n  sunSphere.position.set(0, 50, 20);\r\n  sunGroup.add(sunSphere);\r\n\r\n  const suncentersphereMesh = new THREE.Mesh(new THREE.SphereGeometry(0.2));\r\n  sunGroup.add(suncentersphereMesh);\r\n\r\n  sun.castShadow = true;\r\n  sun.shadow.mapSize.setScalar(2048);\r\n  sun.shadow.mapSize.width = 2048;\r\n  sun.shadow.mapSize.height = sun.shadow.mapSize.width;\r\n  sun.shadow.camera.near = 0.5; // default\r\n  sun.shadow.camera.far = 100; // default\r\n  sun.shadow.bias = -0.00005; //1e-5;\r\n  sun.shadow.normalBias = 0.02; //1e-2;\r\n\r\n  const sunShadowCam = sun.shadow.camera;\r\n  sunShadowCam.left = sunShadowCam.bottom = -10;\r\n  sunShadowCam.right = sunShadowCam.top = 10;\r\n  sunShadowCam.updateProjectionMatrix();\r\n\r\n  const moon = new THREE.DirectionalLight(0xffffff, 1);\r\n\r\n  const moonSphere = new THREE.Mesh(new THREE.SphereGeometry(0.2));\r\n  moonSphere.position.set(2, -50, 20);\r\n  moonGroup.add(moonSphere);\r\n\r\n  const centersphereMesh = new THREE.Mesh(new THREE.SphereGeometry(0.2));\r\n  moonGroup.add(centersphereMesh);\r\n\r\n  moon.castShadow = true;\r\n  // moon.shadow.mapSize.setScalar(1024);\r\n  moon.shadow.mapSize.width = sun.shadow.mapSize.width;\r\n  moon.shadow.mapSize.height = sun.shadow.mapSize.height;\r\n  moon.shadow.camera.near = sun.shadow.camera.near; // default\r\n  moon.shadow.camera.far = sun.shadow.camera.far; // default\r\n  moon.shadow.bias = sun.shadow.bias;\r\n  moon.shadow.normalBias = sun.shadow.normalBias;\r\n\r\n  const moonShadowCam = moon.shadow.camera;\r\n  moonShadowCam.left = moonShadowCam.bottom = sunShadowCam.left;\r\n  moonShadowCam.right = moonShadowCam.top = sunShadowCam.right;\r\n  moonShadowCam.updateProjectionMatrix();\r\n\r\n  const skycolors = chroma.scale([0xaaaaaa, 0xffeeb1, 0xaaaaaa]);\r\n  const groundcolors = chroma.scale([0xffcf73, 0x080820, 0xffcf73]);\r\n\r\n  const hemisphereLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 1);\r\n  //sunGroup.add(sun);\r\n\r\n  let sunHelper: THREE.DirectionalLightHelper;\r\n  let moonHelper: THREE.DirectionalLightHelper;\r\n\r\n  const render = (scene: THREE.Scene) => {\r\n    scene.add(sun);\r\n    scene.add(moon);\r\n    // scene.add(sunTarget);\r\n    // sun.target = sunTarget;\r\n    scene.add(sunGroup);\r\n    scene.add(moonGroup);\r\n    scene.add(hemisphereLight);\r\n\r\n    if (showHelpers) {\r\n      moonHelper = new THREE.DirectionalLightHelper(moon, 0.1);\r\n      scene.add(moonHelper);\r\n      sunHelper = new THREE.DirectionalLightHelper(sun, 0.1);\r\n      scene.add(sunHelper);\r\n\r\n      const sunshadowhelper = new THREE.CameraHelper(sun.shadow.camera);\r\n      scene.add(sunshadowhelper);\r\n    }\r\n  };\r\n  const setTime = ({ hour = 1, minutes = 0 }) => {\r\n    const timeofday = (hour * 60 + minutes) / (24 * 60);\r\n    console.log(\"timeofday\", timeofday);\r\n    if (output) {\r\n      output.innerHTML = hour + \":\" + minutes;\r\n    }\r\n    const sunbrightness = interpolate([0, 0, 0, 1, 1, 1, 1, 0, 0], timeofday);\r\n    const moonbrightness = interpolate([1, 1, 0, 0, 0, 0, 0, 0, 1], timeofday);\r\n\r\n    //sun.color.setHex(0xffffff);\r\n    sun.color.setHex(ThreeHex(suncolors(timeofday).hex()));\r\n    sun.intensity = sunbrightness; //directColors[1];\r\n\r\n    moon.color.setHex(ThreeHex(mooncolors(0).hex()));\r\n    moon.intensity = moonbrightness; ///directColors[1];\r\n\r\n    const skybrightness = interpolate(\r\n      [0.1, 0.1, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.1],\r\n      timeofday\r\n    );\r\n\r\n    let hemiColors = [\r\n      skycolors(timeofday).hex(),\r\n      0xffffff, //groundcolors(timeofday).hex(),\r\n      skybrightness / 4\r\n    ];\r\n    hemisphereLight.color.setHex(ThreeHex(hemiColors[0]));\r\n    hemisphereLight.groundColor.setHex(hemiColors[1]);\r\n    hemisphereLight.intensity = hemiColors[2];\r\n\r\n    sunShadowCam.updateProjectionMatrix();\r\n\r\n    sunGroup.rotation.z = THREE.MathUtils.degToRad(timeofday * 360 - 180);\r\n    moonGroup.rotation.z = THREE.MathUtils.degToRad(timeofday * 360 - 180);\r\n    // sun.position.copy(sphereMesh.position.clone());\r\n    //sunGroup.rotation.x = THREE.MathUtils.degToRad(10);\r\n    // sun.target.position.set(0, 0, 0);\r\n    // console.log(\r\n    //   \"getWorldPosition\",\r\n    //   sphereMesh.getWorldPosition(new THREE.Vector3())\r\n    // );\r\n    sun.position.copy(sunSphere.getWorldPosition(new THREE.Vector3()));\r\n    moon.position.copy(moonSphere.getWorldPosition(new THREE.Vector3()));\r\n\r\n    // sun.position.z = 2000 * Math.sin(timeofday) + 0;\r\n    // sphereMesh.position.x = Math.cos(timeofday * 10) * 50;\r\n    // sphereMesh.position.y = Math.cos(timeofday * 7) * 3;\r\n    // sphereMesh.position.z = Math.cos(timeofday * 8) * 40;\r\n\r\n    if (showHelpers) {\r\n      sunHelper.parent.updateMatrixWorld();\r\n      sunHelper.update();\r\n      moonHelper.parent.updateMatrixWorld();\r\n      moonHelper.update();\r\n    }\r\n  };\r\n  const setAutoUpdate = (autoUpdate: boolean) => {\r\n    sun.shadow.autoUpdate = autoUpdate;\r\n    moon.shadow.autoUpdate = autoUpdate;\r\n  };\r\n  return { render, setTime, setAutoUpdate };\r\n};\r\nexport default dayLight;\r\n","// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n","import \"./styles.css\";\r\nimport * as THREE from \"three\";\r\n\r\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer\";\r\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass\";\r\n\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n// import { FatLinesBatch } from \"./js/FatLinesBatch\";\r\n// import { GUI } from \"three/examples/jsm/libs/lil-gui.module.min\";\r\n// import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\n//console.clear();\r\n\r\nimport spanishHouse from \"./houses/spanish\";\r\nimport init, { IHouseFloor, IHouseSide } from \"./house\";\r\nimport {\r\n  awning,\r\n  retractableAwning,\r\n  balcony,\r\n  balconydoor,\r\n  wallRailing,\r\n  shuttersWithFrame,\r\n  plant,\r\n  hangingLights,\r\n  bulbLight,\r\n  chair,\r\n  table,\r\n} from \"./shapes/shapes\";\r\n\r\nimport {\r\n  windowMaterial,\r\n  wallMaterial,\r\n  pavementMaterial,\r\n  colors,\r\n  groundMaterial,\r\n  backgroundMaterial,\r\n  floorMaterial,\r\n} from \"./materials\";\r\n\r\nimport dayLight from \"./daylight\";\r\n\r\nimport { PencilLinesPass } from \"./js/pencil-effect/PencilLinesPass\";\r\n// import { WebGLCanvasMasker } from \"./js/fast-lines/WebGLCanvasMasker\";\r\n\r\nimport {\r\n  Evaluator,\r\n  EdgesHelper,\r\n  Operation,\r\n  OperationGroup,\r\n  ADDITION,\r\n  SUBTRACTION,\r\n} from \"three-bvh-csg\";\r\n\r\nimport Stats from \"stats.js\";\r\n\r\nconst stats = new Stats();\r\nstats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\r\ndocument.body.appendChild(stats.dom);\r\n\r\nconst house = init(spanishHouse);\r\nconst settings = {\r\n  isNight: true,\r\n};\r\n\r\nlet scene = new THREE.Scene();\r\nif (settings.isNight) {\r\n  colors.background = 0x000000;\r\n}\r\nscene.background = new THREE.Color(colors.background);\r\n\r\nconst isocamera = false;\r\n\r\nlet camera: THREE.OrthographicCamera | THREE.PerspectiveCamera;\r\nlet cameraSettings = {\r\n  position: new THREE.Vector3(),\r\n  lookAt: new THREE.Vector3(),\r\n  fov: 45,\r\n  far: 250,\r\n};\r\n\r\nif (isocamera) {\r\n  const aspect = window.innerWidth / window.innerHeight;\r\n  const d = 20;\r\n  camera = new THREE.OrthographicCamera(\r\n    -d * aspect,\r\n    d * aspect,\r\n    d,\r\n    -d,\r\n    1,\r\n    4000\r\n  );\r\n\r\n  camera.position.set(20, 20, 20);\r\n  camera.rotation.order = \"YXZ\";\r\n  camera.rotation.y = -Math.PI / 4;\r\n  camera.rotation.x = Math.atan(-1 / Math.sqrt(2));\r\n} else {\r\n  let cameraPositionFront = {\r\n    fov: 15,\r\n    far: 250,\r\n    position: new THREE.Vector3(0, 7, 60),\r\n    lookAt: new THREE.Vector3(0, 5, 0),\r\n  };\r\n  let cameraPositionAngled = {\r\n    fov: 45,\r\n    far: 250,\r\n    position: new THREE.Vector3(15, 15, 20),\r\n    lookAt: new THREE.Vector3(0, 5, 0),\r\n  };\r\n  let cameraPositionISO = {\r\n    fov: 15,\r\n    far: 250,\r\n    position: new THREE.Vector3(50, 20, 50),\r\n    lookAt: new THREE.Vector3(0, 5, 0),\r\n  };\r\n  cameraSettings = cameraPositionAngled;\r\n  camera = new THREE.PerspectiveCamera(\r\n    cameraSettings.fov,\r\n    window.innerWidth / window.innerHeight,\r\n    0.1,\r\n    cameraSettings.far\r\n  );\r\n  camera.position.copy(cameraSettings.position);\r\n}\r\n\r\nconst renderer = new THREE.WebGLRenderer({ antialias: true });\r\nrenderer.setSize(window.innerWidth, window.innerHeight);\r\n// renderer.setClearColor(\"#eee\");\r\nrenderer.physicallyCorrectLights = true;\r\nrenderer.outputEncoding = THREE.sRGBEncoding;\r\nrenderer.toneMapping = THREE.CineonToneMapping;\r\n\r\n//deferred rendering,\r\nrenderer.toneMappingExposure = 1.75;\r\n// renderer.shadowMap.autoUpdate = false;\r\n// renderer.shadowMap.needsUpdate = true;\r\nrenderer.shadowMap.enabled = true;\r\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\r\n// progressive lightmap\r\n\r\ndocument.body.appendChild(renderer.domElement);\r\n\r\n// {\r\n//   const color = colors.background; // white\r\n//   const near = 20;\r\n//   const far = 50;\r\n//   scene.fog = new THREE.Fog(color, near, far);\r\n// }\r\n\r\nwindow.addEventListener(\"resize\", (event) => {\r\n  //camera.aspect = window.innerWidth / window.innerHeight;\r\n  //camera.updateProjectionMatrix();\r\n  renderer.setSize(window.innerWidth, window.innerHeight);\r\n});\r\n\r\nlet hour = 23;\r\nconst lights = dayLight();\r\nlights.render(scene);\r\nfunction updatetime() {\r\n  lights.setTime({ hour: hour });\r\n  hour = hour >= 23 ? (hour = 0) : hour + 1;\r\n\r\n  //setTimeout(updatetime, 300);\r\n  renderer.render(scene, camera);\r\n}\r\nupdatetime();\r\n\r\n//scene.add(new THREE.CameraHelper(directionalLight.shadow.camera));\r\n\r\n// const wallLight = new THREE.SpotLight(0xffcf73, 1);\r\n\r\n// wallLight.power = 50;\r\n// wallLight.decay = 0.7;\r\n// wallLight.position.set(330, 250, -100);\r\n// wallLight.target.position.set(330, 0, -100);\r\n// wallLight.target.updateMatrixWorld();\r\n// scene.add(wallLight);\r\n\r\n// const wallLightHelper = new THREE.SpotLightHelper(wallLight, 10);\r\n// scene.add(wallLightHelper);\r\n\r\n// const plane2 = new THREE.Mesh(\r\n//   new THREE.CylinderGeometry(1, 1, 0.1, 32),\r\n//   groundMaterial\r\n// );\r\n// plane2.position.set(0, 1, 5);\r\n// plane2.receiveShadow = true;\r\n// plane2.castShadow = true;\r\n// scene.add(plane2);\r\n\r\nlet controls = new OrbitControls(camera, renderer.domElement);\r\ncontrols.enableDamping = true;\r\ncontrols.enablePan = true;\r\ncontrols.target = cameraSettings.lookAt;\r\n\r\n// const axesHelper = new THREE.AxesHelper(500);\r\n// scene.add(axesHelper);\r\n\r\nif (hour >= 22 || hour < 6) {\r\n  // console.log(\"testbulb\", testbulb);\r\n  scene.add(bulbLight(-1, 9, -1));\r\n  scene.add(bulbLight(-1, 2, -1));\r\n\r\n  const chairmodel = chair(-2, 0, 3, 0);\r\n  scene.add(chairmodel);\r\n\r\n  const chairmodel2 = chairmodel.clone();\r\n  chairmodel2.position.set(-2.1, 0, 3.8);\r\n  chairmodel2.rotation.y = THREE.MathUtils.degToRad(20);\r\n  scene.add(chairmodel2);\r\n\r\n  const tablemodel = table(-1, 0, 3.5, -5);\r\n  scene.add(tablemodel);\r\n  // const sphereSize = 0.1;\r\n  // const pointLightHelper = new THREE.PointLightHelper(testbulb, sphereSize);\r\n  // scene.add(pointLightHelper);\r\n}\r\n// CSG\r\nlet csgEvaluator: any, result: any;\r\ncsgEvaluator = new Evaluator();\r\ncsgEvaluator.attributes = [\"position\", \"normal\"];\r\ncsgEvaluator.useGroups = false;\r\ncsgEvaluator.debug.enabled = true;\r\n\r\nfunction renderOutput(outputGroup: any) {\r\n  if (result && result.geometry) {\r\n    //result.geometry.dispose();\r\n    //result.parent.remove(result);\r\n  }\r\n\r\n  result = csgEvaluator.evaluateHierarchy(outputGroup);\r\n  result.material = wallMaterial;\r\n  result.castShadow = true;\r\n  result.receiveShadow = true;\r\n\r\n  result.matrixAutoUpdate = false;\r\n  result.updateMatrix();\r\n  scene.add(result);\r\n\r\n  // console.log(result.intersectionEdges);\r\n}\r\n\r\nconst houseGroup = new Operation(new THREE.BoxGeometry(0.01, 0.01, 0.01)); //BoxBufferGeometry\r\nhouseGroup.operation = ADDITION;\r\nhouseGroup.receiveShadow = true;\r\n\r\nfunction addFloorHoles(\r\n  shapesgroup: any,\r\n  floorSideGroup: any,\r\n  side: IHouseSide\r\n) {\r\n  if (side.holes) {\r\n    side.holes.forEach((hole) => {\r\n      if (hole && hole.shapes) {\r\n        let generatedShape: {\r\n          shape?: any;\r\n          hole?: any;\r\n        };\r\n        for (const shape of hole.shapes) {\r\n          generatedShape = {};\r\n          switch (shape.type) {\r\n            case \"shuttersWithFrame\":\r\n              generatedShape = shuttersWithFrame({\r\n                settings: shape,\r\n                hole: hole,\r\n              });\r\n              break;\r\n            case \"awning\":\r\n              generatedShape = awning({\r\n                settings: shape,\r\n                hole: hole,\r\n              });\r\n              break;\r\n            case \"retractable-awning\":\r\n              generatedShape = retractableAwning({\r\n                settings: { ...shape },\r\n                hole: hole,\r\n              });\r\n              break;\r\n            case \"balconydoor\":\r\n              generatedShape = balconydoor({ settings: shape, hole: hole });\r\n              break;\r\n            case \"balcony\":\r\n              generatedShape = balcony({\r\n                settings: shape,\r\n                hole: hole,\r\n              });\r\n              break;\r\n            case \"wallRailing\":\r\n              generatedShape = wallRailing({\r\n                settings: shape,\r\n                hole: hole,\r\n              });\r\n              break;\r\n            case \"plant\":\r\n              generatedShape = plant({\r\n                settings: shape,\r\n                hole: hole,\r\n              });\r\n              break;\r\n            case \"hangingLights\":\r\n              generatedShape = hangingLights({\r\n                settings: shape,\r\n                hole: hole,\r\n              });\r\n              break;\r\n          }\r\n          if (generatedShape && generatedShape.shape) {\r\n            shapesgroup.add(generatedShape.shape);\r\n          }\r\n          if (generatedShape && generatedShape.hole) {\r\n            generatedShape.hole.receiveShadow = true;\r\n            // generatedShape.hole.operation = ADDITION;\r\n            floorSideGroup.add(generatedShape.hole);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction isWithin(center: THREE.Vector3, point: THREE.Vector3, dist: number) {\r\n  if (point.distanceTo(center) < dist) {\r\n    return true;\r\n  }\r\n  if (point.distanceTo(center) < dist + 200 && Math.random() > 0.3) {\r\n    return true;\r\n  }\r\n  if (point.distanceTo(center) < dist + 400 && Math.random() > 0.7) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction addPavement() {\r\n  const center = new THREE.Vector3(0, 0, 0); // Your point\r\n  const g = new THREE.Group();\r\n  g.position.y = -0.1;\r\n  const gridSize = 40;\r\n  const gap = 0.1;\r\n  let width = 0.8;\r\n  const maskRadius = 5;\r\n\r\n  const shape = new THREE.Shape();\r\n\r\n  shape.moveTo(0, 0);\r\n  shape.lineTo(0, width);\r\n  shape.lineTo(width, width);\r\n  shape.lineTo(width, 0);\r\n  shape.lineTo(0, 0);\r\n\r\n  const extrudeSettings = {\r\n    steps: 1,\r\n    depth: 0.02,\r\n    bevelEnabled: true,\r\n    bevelThickness: 0.05,\r\n    bevelSize: 0.01,\r\n    bevelOffset: 0,\r\n    bevelSegments: 1,\r\n  };\r\n  const geometry = new THREE.ExtrudeGeometry(shape, extrudeSettings);\r\n  geometry.rotateX(Math.PI / 2);\r\n  const plate = new THREE.Mesh(geometry, pavementMaterial);\r\n\r\n  let x = 0;\r\n  let z = -(gridSize * (width + gap)) / 2;\r\n\r\n  for (var i = 0; i < gridSize; i++) {\r\n    x = -(gridSize * (width + gap)) / 2;\r\n    for (var ii = 0; ii < gridSize; ii++) {\r\n      if (isWithin(center, new THREE.Vector3(x, 0, z), maskRadius)) {\r\n        const plateclone = plate.clone();\r\n        plateclone.position.x = x;\r\n        plateclone.position.z = z;\r\n        plateclone.castShadow = true;\r\n        plateclone.receiveShadow = true;\r\n        g.add(plateclone);\r\n      }\r\n\r\n      x += width + gap;\r\n    }\r\n    z += width + gap;\r\n  }\r\n\r\n  scene.add(g);\r\n\r\n  // const plane = new THREE.Mesh(\r\n  //   // new THREE.PlaneGeometry(5000, 5000),\r\n  //   new THREE.CylinderGeometry(\r\n  //     maskRadius + 50 / 2,\r\n  //     maskRadius + 50 / 2,\r\n  //     10,\r\n  //     32\r\n  //   ),\r\n  //   groundMaterial\r\n  // );\r\n  // plane.position.y = -10;\r\n  // plane.receiveShadow = true;\r\n  // scene.add(plane);\r\n}\r\n\r\nfunction addRealFloor(floor: IHouseFloor) {\r\n  if (floor.sides.length > 0) {\r\n    const shape = new THREE.Shape();\r\n    if (floor.sides[0].end && floor.sides[0].start) {\r\n      shape.moveTo(floor.sides[0].end.x, floor.sides[0].end.z);\r\n      for (var i = 1; i < floor.sides.length; i++) {\r\n        if (floor.sides[i].end && floor.sides[i].end.x !== null) {\r\n          shape.lineTo(floor.sides[i].end.x, floor.sides[i].end.z);\r\n        }\r\n      }\r\n      shape.closePath();\r\n\r\n      const extrudeSettings = {\r\n        steps: 1,\r\n        depth: 0.02,\r\n        bevelEnabled: false,\r\n      };\r\n      const geometry = new THREE.ExtrudeGeometry(shape, extrudeSettings);\r\n      geometry.rotateX(Math.PI / 2);\r\n      geometry.scale(0.99, 1, 0.99);\r\n      const mesh = new THREE.Mesh(geometry, floor.materials.floor); //, floor.materials.default\r\n      mesh.position.y = floor.sides[0].start.y + 0.01;\r\n      mesh.castShadow = true;\r\n      mesh.receiveShadow = true;\r\n      scene.add(mesh);\r\n    }\r\n  }\r\n}\r\n\r\nfunction addFloor(floor: IHouseFloor) {\r\n  if (floor.floor === true) {\r\n    addRealFloor(floor);\r\n  }\r\n\r\n  const floorGroup = new OperationGroup();\r\n\r\n  const dummy = new Operation(new THREE.BoxGeometry(1, 1, 1));\r\n\r\n  let s = 0;\r\n  floor.sides.forEach((side) => {\r\n    const wallWidth = side.width || 0.01;\r\n\r\n    const floorSideGroup = new OperationGroup();\r\n    floorSideGroup.position.x = side.start?.x;\r\n    floorSideGroup.position.z = side.start?.z;\r\n    floorSideGroup.position.y = side.start?.y;\r\n\r\n    const shapesGroup = new THREE.Group();\r\n    shapesGroup.position.set(\r\n      floorSideGroup.position.x,\r\n      floorSideGroup.position.y,\r\n      floorSideGroup.position.z\r\n    );\r\n    // shapesGroup.add(dummy);\r\n    // const sphere = new Operation(\r\n    //   new THREE.SphereGeometry(30 * count, 30 * count, 30 * count)\r\n    // );\r\n    // shapesGroup.add(sphere);\r\n\r\n    const wallGeo = new THREE.BoxGeometry(\r\n      wallWidth,\r\n      floor.height,\r\n      house.wallthickness\r\n    );\r\n    wallGeo.translate(wallWidth / 2, 0, -house.wallthickness / 2);\r\n    const wall = new Operation(wallGeo); //BoxBufferGeometry\r\n    wall.operation = ADDITION;\r\n    wall.receiveShadow = true;\r\n    wall.position.y = floor.height / 2;\r\n    wall.position.x = 0;\r\n    wall.position.z = 0;\r\n    // floorSideGroup.rotation.y = Math.PI / 2;\r\n    floorSideGroup.add(wall);\r\n\r\n    addFloorHoles(shapesGroup, floorSideGroup, side);\r\n    floorGroup.add(floorSideGroup);\r\n    //floorSideGroup.rotation.y = Math.PI / -2;\r\n\r\n    if (s < floor.sides.length - 1) {\r\n      dummy.position.copy(side.end);\r\n      dummy.lookAt(side.start);\r\n      floorSideGroup.rotation.y = dummy.rotation.y + Math.PI / 2;\r\n    } else {\r\n      dummy.position.copy(side.start);\r\n      dummy.lookAt(side.end);\r\n      floorSideGroup.rotation.y = dummy.rotation.y - Math.PI / 2;\r\n    }\r\n\r\n    shapesGroup.rotation.y = floorSideGroup.rotation.y;\r\n    scene.add(shapesGroup);\r\n\r\n    s++;\r\n  });\r\n\r\n  // dummy.parent.remove(dummy);\r\n  //floorGroup.add(wall);\r\n\r\n  // houseGroup.add(floorGroup);\r\n  return floorGroup;\r\n  //renderOutput(wall, wallMaterial);\r\n}\r\n\r\n//addPavement();\r\n\r\nconst groundPlane = new THREE.Mesh(\r\n  new THREE.CylinderGeometry(30, 30, 1, 32),\r\n  groundMaterial\r\n);\r\ngroundPlane.position.y = -0.5;\r\ngroundPlane.castShadow = true;\r\ngroundPlane.receiveShadow = true;\r\nscene.add(groundPlane);\r\n\r\nfor (const floor of house.floors) {\r\n  houseGroup.add(addFloor(floor));\r\n}\r\n\r\nrenderOutput(houseGroup);\r\n\r\n// renderer.setAnimationLoop((_) => {\r\n//   // let t = clock.getElapsedTime();\r\n//   // controls.update();\r\n//   renderer.render(scene, camera);\r\n// });\r\n\r\nfunction animate() {\r\n  stats.begin();\r\n  requestAnimationFrame(animate);\r\n  // setTimeout(animate, 200);\r\n\r\n  //edgesHelper.setEdges(csgEvaluator.debug.intersectionEdges);\r\n  //edgesHelper.visible = true;\r\n\r\n  renderer.render(scene, camera);\r\n  // renderer.shadowMap.needsUpdate = false;\r\n  lights.setAutoUpdate(false);\r\n  stats.end();\r\n}\r\nanimate();\r\ncontrols.update();\r\n\r\n//controls.addEventListener(\"change\", animate);\r\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}