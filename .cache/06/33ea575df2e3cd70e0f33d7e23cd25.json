{"id":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","dependencies":[{"name":"F:\\Projects\\2024\\Learning\\test\\House_threejs\\package.json","includedInParent":true,"mtime":1720167476590},{"name":"F:\\Projects\\2024\\Learning\\test\\House_threejs\\.babelrc","includedInParent":true,"mtime":1720167298394},{"name":"F:\\Projects\\2024\\Learning\\test\\House_threejs\\node_modules\\three-mesh-bvh\\package.json","includedInParent":true,"mtime":1720167446927}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shaderStructs = exports.shaderIntersectFunction = exports.shaderDistanceFunction = void 0;\n// Note that a struct cannot be used for the hit record including faceIndices, faceNormal, barycoord,\n// side, and dist because on some mobile GPUS (such as Adreno) numbers are afforded less precision specifically\n// when in a struct leading to inaccurate hit results. See KhronosGroup/WebGL#3351 for more details.\nconst shaderStructs = exports.shaderStructs = /* glsl */`\n#ifndef TRI_INTERSECT_EPSILON\n#define TRI_INTERSECT_EPSILON 1e-5\n#endif\n\n#ifndef INFINITY\n#define INFINITY 1e20\n#endif\n\nstruct BVH {\n\n\tusampler2D index;\n\tsampler2D position;\n\n\tsampler2D bvhBounds;\n\tusampler2D bvhContents;\n\n};\n`;\nconst shaderIntersectFunction = exports.shaderIntersectFunction = /* glsl */`\n\n// Utilities\nuvec4 uTexelFetch1D( usampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nivec4 iTexelFetch1D( isampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nvec4 texelFetch1D( sampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nvec4 textureSampleBarycoord( sampler2D tex, vec3 barycoord, uvec3 faceIndices ) {\n\n\treturn\n\t\tbarycoord.x * texelFetch1D( tex, faceIndices.x ) +\n\t\tbarycoord.y * texelFetch1D( tex, faceIndices.y ) +\n\t\tbarycoord.z * texelFetch1D( tex, faceIndices.z );\n\n}\n\nvoid ndcToCameraRay(\n\tvec2 coord, mat4 cameraWorld, mat4 invProjectionMatrix,\n\tout vec3 rayOrigin, out vec3 rayDirection\n) {\n\n\t// get camera look direction and near plane for camera clipping\n\tvec4 lookDirection = cameraWorld * vec4( 0.0, 0.0, - 1.0, 0.0 );\n\tvec4 nearVector = invProjectionMatrix * vec4( 0.0, 0.0, - 1.0, 1.0 );\n\tfloat near = abs( nearVector.z / nearVector.w );\n\n\t// get the camera direction and position from camera matrices\n\tvec4 origin = cameraWorld * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec4 direction = invProjectionMatrix * vec4( coord, 0.5, 1.0 );\n\tdirection /= direction.w;\n\tdirection = cameraWorld * direction - origin;\n\n\t// slide the origin along the ray until it sits at the near clip plane position\n\torigin.xyz += direction.xyz * near / dot( direction, lookDirection );\n\n\trayOrigin = origin.xyz;\n\trayDirection = direction.xyz;\n\n}\n\n// Raycasting\nfloat intersectsBounds( vec3 rayOrigin, vec3 rayDirection, vec3 boundsMin, vec3 boundsMax ) {\n\n\t// https://www.reddit.com/r/opengl/comments/8ntzz5/fast_glsl_ray_box_intersection/\n\t// https://tavianator.com/2011/ray_box.html\n\tvec3 invDir = 1.0 / rayDirection;\n\n\t// find intersection distances for each plane\n\tvec3 tMinPlane = invDir * ( boundsMin - rayOrigin );\n\tvec3 tMaxPlane = invDir * ( boundsMax - rayOrigin );\n\n\t// get the min and max distances from each intersection\n\tvec3 tMinHit = min( tMaxPlane, tMinPlane );\n\tvec3 tMaxHit = max( tMaxPlane, tMinPlane );\n\n\t// get the furthest hit distance\n\tvec2 t = max( tMinHit.xx, tMinHit.yz );\n\tfloat t0 = max( t.x, t.y );\n\n\t// get the minimum hit distance\n\tt = min( tMaxHit.xx, tMaxHit.yz );\n\tfloat t1 = min( t.x, t.y );\n\n\t// set distance to 0.0 if the ray starts inside the box\n\tfloat dist = max( t0, 0.0 );\n\n\treturn t1 >= dist ? dist : INFINITY;\n\n}\n\nbool intersectsTriangle(\n\tvec3 rayOrigin, vec3 rayDirection, vec3 a, vec3 b, vec3 c,\n\tout vec3 barycoord, out vec3 norm, out float dist, out float side\n) {\n\n\t// https://stackoverflow.com/questions/42740765/intersection-between-line-and-triangle-in-3d\n\tvec3 edge1 = b - a;\n\tvec3 edge2 = c - a;\n\tnorm = cross( edge1, edge2 );\n\n\tfloat det = - dot( rayDirection, norm );\n\tfloat invdet = 1.0 / det;\n\n\tvec3 AO = rayOrigin - a;\n\tvec3 DAO = cross( AO, rayDirection );\n\n\tvec4 uvt;\n\tuvt.x = dot( edge2, DAO ) * invdet;\n\tuvt.y = - dot( edge1, DAO ) * invdet;\n\tuvt.z = dot( AO, norm ) * invdet;\n\tuvt.w = 1.0 - uvt.x - uvt.y;\n\n\t// set the hit information\n\tbarycoord = uvt.wxy; // arranged in A, B, C order\n\tdist = uvt.z;\n\tside = sign( det );\n\tnorm = side * normalize( norm );\n\n\t// add an epsilon to avoid misses between triangles\n\tuvt += vec4( TRI_INTERSECT_EPSILON );\n\n\treturn all( greaterThanEqual( uvt, vec4( 0.0 ) ) );\n\n}\n\nbool intersectTriangles(\n\tBVH bvh, vec3 rayOrigin, vec3 rayDirection, uint offset, uint count,\n\tinout float minDistance,\n\n\t// output variables\n\tout uvec4 faceIndices, out vec3 faceNormal, out vec3 barycoord,\n\tout float side, out float dist\n) {\n\n\tbool found = false;\n\tvec3 localBarycoord, localNormal;\n\tfloat localDist, localSide;\n\tfor ( uint i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\tuvec3 indices = uTexelFetch1D( bvh.index, i ).xyz;\n\t\tvec3 a = texelFetch1D( bvh.position, indices.x ).rgb;\n\t\tvec3 b = texelFetch1D( bvh.position, indices.y ).rgb;\n\t\tvec3 c = texelFetch1D( bvh.position, indices.z ).rgb;\n\n\t\tif (\n\t\t\tintersectsTriangle( rayOrigin, rayDirection, a, b, c, localBarycoord, localNormal, localDist, localSide )\n\t\t\t&& localDist < minDistance\n\t\t) {\n\n\t\t\tfound = true;\n\t\t\tminDistance = localDist;\n\n\t\t\tfaceIndices = uvec4( indices.xyz, i );\n\t\t\tfaceNormal = localNormal;\n\n\t\t\tside = localSide;\n\t\t\tbarycoord = localBarycoord;\n\t\t\tdist = localDist;\n\n\t\t}\n\n\t}\n\n\treturn found;\n\n}\n\nfloat intersectsBVHNodeBounds( vec3 rayOrigin, vec3 rayDirection, BVH bvh, uint currNodeIndex ) {\n\n\tvec3 boundsMin = texelFetch1D( bvh.bvhBounds, currNodeIndex * 2u + 0u ).xyz;\n\tvec3 boundsMax = texelFetch1D( bvh.bvhBounds, currNodeIndex * 2u + 1u ).xyz;\n\treturn intersectsBounds( rayOrigin, rayDirection, boundsMin, boundsMax );\n\n}\n\nbool bvhIntersectFirstHit(\n\tBVH bvh, vec3 rayOrigin, vec3 rayDirection,\n\n\t// output variables\n\tout uvec4 faceIndices, out vec3 faceNormal, out vec3 barycoord,\n\tout float side, out float dist\n) {\n\n\t// stack needs to be twice as long as the deepest tree we expect because\n\t// we push both the left and right child onto the stack every traversal\n\tint ptr = 0;\n\tuint stack[ 60 ];\n\tstack[ 0 ] = 0u;\n\n\tfloat triangleDistance = 1e20;\n\tbool found = false;\n\twhile ( ptr > - 1 && ptr < 60 ) {\n\n\t\tuint currNodeIndex = stack[ ptr ];\n\t\tptr --;\n\n\t\t// check if we intersect the current bounds\n\t\tfloat boundsHitDistance = intersectsBVHNodeBounds( rayOrigin, rayDirection, bvh, currNodeIndex );\n\t\tif ( boundsHitDistance == INFINITY || boundsHitDistance > triangleDistance ) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tuvec2 boundsInfo = uTexelFetch1D( bvh.bvhContents, currNodeIndex ).xy;\n\t\tbool isLeaf = bool( boundsInfo.x & 0xffff0000u );\n\n\t\tif ( isLeaf ) {\n\n\t\t\tuint count = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint offset = boundsInfo.y;\n\n\t\t\tfound = intersectTriangles(\n\t\t\t\tbvh, rayOrigin, rayDirection, offset, count, triangleDistance,\n\t\t\t\tfaceIndices, faceNormal, barycoord, side, dist\n\t\t\t) || found;\n\n\t\t} else {\n\n\t\t\tuint leftIndex = currNodeIndex + 1u;\n\t\t\tuint splitAxis = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint rightIndex = boundsInfo.y;\n\n\t\t\tbool leftToRight = rayDirection[ splitAxis ] >= 0.0;\n\t\t\tuint c1 = leftToRight ? leftIndex : rightIndex;\n\t\t\tuint c2 = leftToRight ? rightIndex : leftIndex;\n\n\t\t\t// set c2 in the stack so we traverse it later. We need to keep track of a pointer in\n\t\t\t// the stack while we traverse. The second pointer added is the one that will be\n\t\t\t// traversed first\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c2;\n\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c1;\n\n\t\t}\n\n\t}\n\n\treturn found;\n\n}\n`;\n\n// Distance to Point\nconst shaderDistanceFunction = exports.shaderDistanceFunction = /* glsl */`\n\nfloat dot2( in vec3 v ) {\n\n\treturn dot( v, v );\n\n}\n\n\n// https://www.shadertoy.com/view/ttfGWl\nvec3 closestPointToTriangle( vec3 p, vec3 v0, vec3 v1, vec3 v2, out vec3 barycoord ) {\n\n    vec3 v10 = v1 - v0;\n    vec3 v21 = v2 - v1;\n    vec3 v02 = v0 - v2;\n\n\tvec3 p0 = p - v0;\n\tvec3 p1 = p - v1;\n\tvec3 p2 = p - v2;\n\n    vec3 nor = cross( v10, v02 );\n\n    // method 2, in barycentric space\n    vec3  q = cross( nor, p0 );\n    float d = 1.0 / dot2( nor );\n    float u = d * dot( q, v02 );\n    float v = d * dot( q, v10 );\n    float w = 1.0 - u - v;\n\n\tif( u < 0.0 ) {\n\n\t\tw = clamp( dot( p2, v02 ) / dot2( v02 ), 0.0, 1.0 );\n\t\tu = 0.0;\n\t\tv = 1.0 - w;\n\n\t} else if( v < 0.0 ) {\n\n\t\tu = clamp( dot( p0, v10 ) / dot2( v10 ), 0.0, 1.0 );\n\t\tv = 0.0;\n\t\tw = 1.0 - u;\n\n\t} else if( w < 0.0 ) {\n\n\t\tv = clamp( dot( p1, v21 ) / dot2( v21 ), 0.0, 1.0 );\n\t\tw = 0.0;\n\t\tu = 1.0-v;\n\n\t}\n\n\tbarycoord = vec3( u, v, w );\n    return u * v1 + v * v2 + w * v0;\n\n}\n\nfloat distanceToTriangles(\n\tBVH bvh, vec3 point, uint offset, uint count, float closestDistanceSquared,\n\n\tout uvec4 faceIndices, out vec3 faceNormal, out vec3 barycoord, out float side, out vec3 outPoint\n) {\n\n\tbool found = false;\n\tuvec3 localIndices;\n\tvec3 localBarycoord;\n\tvec3 localNormal;\n\tfor ( uint i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\tuvec3 indices = uTexelFetch1D( bvh.index, i ).xyz;\n\t\tvec3 a = texelFetch1D( bvh.position, indices.x ).rgb;\n\t\tvec3 b = texelFetch1D( bvh.position, indices.y ).rgb;\n\t\tvec3 c = texelFetch1D( bvh.position, indices.z ).rgb;\n\n\t\t// get the closest point and barycoord\n\t\tvec3 closestPoint = closestPointToTriangle( point, a, b, c, localBarycoord );\n\t\tvec3 delta = point - closestPoint;\n\t\tfloat sqDist = dot2( delta );\n\t\tif ( sqDist < closestDistanceSquared ) {\n\n\t\t\t// set the output results\n\t\t\tclosestDistanceSquared = sqDist;\n\t\t\tfaceIndices = uvec4( indices.xyz, i );\n\t\t\tfaceNormal = normalize( cross( a - b, b - c ) );\n\t\t\tbarycoord = localBarycoord;\n\t\t\toutPoint = closestPoint;\n\t\t\tside = sign( dot( faceNormal, delta ) );\n\n\t\t}\n\n\t}\n\n\treturn closestDistanceSquared;\n\n}\n\nfloat distanceSqToBounds( vec3 point, vec3 boundsMin, vec3 boundsMax ) {\n\n\tvec3 clampedPoint = clamp( point, boundsMin, boundsMax );\n\tvec3 delta = point - clampedPoint;\n\treturn dot( delta, delta );\n\n}\n\nfloat distanceSqToBVHNodeBoundsPoint( vec3 point, BVH bvh, uint currNodeIndex ) {\n\n\tvec3 boundsMin = texelFetch1D( bvh.bvhBounds, currNodeIndex * 2u + 0u ).xyz;\n\tvec3 boundsMax = texelFetch1D( bvh.bvhBounds, currNodeIndex * 2u + 1u ).xyz;\n\treturn distanceSqToBounds( point, boundsMin, boundsMax );\n\n}\n\nfloat bvhClosestPointToPoint(\n\tBVH bvh, vec3 point,\n\n\t// output variables\n\tout uvec4 faceIndices, out vec3 faceNormal, out vec3 barycoord,\n\tout float side, out vec3 outPoint\n ) {\n\n\t// stack needs to be twice as long as the deepest tree we expect because\n\t// we push both the left and right child onto the stack every traversal\n\tint ptr = 0;\n\tuint stack[ 60 ];\n\tstack[ 0 ] = 0u;\n\tfloat closestDistanceSquared = pow( 100000.0, 2.0 );\n\tbool found = false;\n\twhile ( ptr > - 1 && ptr < 60 ) {\n\n\t\tuint currNodeIndex = stack[ ptr ];\n\t\tptr --;\n\n\t\t// check if we intersect the current bounds\n\t\tfloat boundsHitDistance = distanceSqToBVHNodeBoundsPoint( point, bvh, currNodeIndex );\n\t\tif ( boundsHitDistance > closestDistanceSquared ) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tuvec2 boundsInfo = uTexelFetch1D( bvh.bvhContents, currNodeIndex ).xy;\n\t\tbool isLeaf = bool( boundsInfo.x & 0xffff0000u );\n\t\tif ( isLeaf ) {\n\n\t\t\tuint count = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint offset = boundsInfo.y;\n\t\t\tclosestDistanceSquared = distanceToTriangles(\n\t\t\t\tbvh, point, offset, count, closestDistanceSquared,\n\n\t\t\t\t// outputs\n\t\t\t\tfaceIndices, faceNormal, barycoord, side, outPoint\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tuint leftIndex = currNodeIndex + 1u;\n\t\t\tuint splitAxis = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint rightIndex = boundsInfo.y;\n\t\t\tbool leftToRight = distanceSqToBVHNodeBoundsPoint( point, bvh, leftIndex ) < distanceSqToBVHNodeBoundsPoint( point, bvh, rightIndex );//rayDirection[ splitAxis ] >= 0.0;\n\t\t\tuint c1 = leftToRight ? leftIndex : rightIndex;\n\t\t\tuint c2 = leftToRight ? rightIndex : leftIndex;\n\n\t\t\t// set c2 in the stack so we traverse it later. We need to keep track of a pointer in\n\t\t\t// the stack while we traverse. The second pointer added is the one that will be\n\t\t\t// traversed first\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c2;\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c1;\n\n\t\t}\n\n\t}\n\n\treturn sqrt( closestDistanceSquared );\n\n}\n`;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":4,"column":7}},{"generated":{"line":10,"column":6},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":4,"column":13},"name":"shaderStructs"},{"generated":{"line":10,"column":19},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":4,"column":26}},{"generated":{"line":10,"column":22},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":4,"column":26},"name":"exports"},{"generated":{"line":10,"column":29},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":4,"column":26}},{"generated":{"line":10,"column":30},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":4,"column":26},"name":"shaderStructs"},{"generated":{"line":10,"column":43},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":4,"column":26}},{"generated":{"line":10,"column":46},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":4,"column":29}},{"generated":{"line":10,"column":56},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":4,"column":39}},{"generated":{"line":11,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":9,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":16,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":19,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":20,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":21,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":22,"column":0}},{"generated":{"line":28,"column":1},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":22,"column":1}},{"generated":{"line":29,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":24,"column":7}},{"generated":{"line":29,"column":6},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":24,"column":13},"name":"shaderIntersectFunction"},{"generated":{"line":29,"column":29},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":24,"column":36}},{"generated":{"line":29,"column":32},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":24,"column":36},"name":"exports"},{"generated":{"line":29,"column":39},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":24,"column":36}},{"generated":{"line":29,"column":40},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":24,"column":36},"name":"shaderIntersectFunction"},{"generated":{"line":29,"column":63},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":24,"column":36}},{"generated":{"line":29,"column":66},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":24,"column":39}},{"generated":{"line":29,"column":76},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":24,"column":49}},{"generated":{"line":30,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":25,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":26,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":27,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":28,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":29,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":30,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":31,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":32,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":33,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":34,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":35,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":36,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":37,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":38,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":39,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":40,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":41,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":42,"column":0}},{"generated":{"line":48,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":43,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":44,"column":0}},{"generated":{"line":50,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":45,"column":0}},{"generated":{"line":51,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":46,"column":0}},{"generated":{"line":52,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":47,"column":0}},{"generated":{"line":53,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":48,"column":0}},{"generated":{"line":54,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":49,"column":0}},{"generated":{"line":55,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":50,"column":0}},{"generated":{"line":56,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":51,"column":0}},{"generated":{"line":57,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":52,"column":0}},{"generated":{"line":58,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":53,"column":0}},{"generated":{"line":59,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":54,"column":0}},{"generated":{"line":60,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":55,"column":0}},{"generated":{"line":61,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":56,"column":0}},{"generated":{"line":62,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":57,"column":0}},{"generated":{"line":63,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":58,"column":0}},{"generated":{"line":64,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":59,"column":0}},{"generated":{"line":65,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":60,"column":0}},{"generated":{"line":66,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":61,"column":0}},{"generated":{"line":67,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":62,"column":0}},{"generated":{"line":68,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":63,"column":0}},{"generated":{"line":69,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":64,"column":0}},{"generated":{"line":70,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":65,"column":0}},{"generated":{"line":71,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":66,"column":0}},{"generated":{"line":72,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":67,"column":0}},{"generated":{"line":73,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":68,"column":0}},{"generated":{"line":74,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":69,"column":0}},{"generated":{"line":75,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":70,"column":0}},{"generated":{"line":76,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":71,"column":0}},{"generated":{"line":77,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":72,"column":0}},{"generated":{"line":78,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":73,"column":0}},{"generated":{"line":79,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":74,"column":0}},{"generated":{"line":80,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":75,"column":0}},{"generated":{"line":81,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":76,"column":0}},{"generated":{"line":82,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":77,"column":0}},{"generated":{"line":83,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":78,"column":0}},{"generated":{"line":84,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":79,"column":0}},{"generated":{"line":85,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":80,"column":0}},{"generated":{"line":86,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":81,"column":0}},{"generated":{"line":87,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":82,"column":0}},{"generated":{"line":88,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":83,"column":0}},{"generated":{"line":89,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":84,"column":0}},{"generated":{"line":90,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":85,"column":0}},{"generated":{"line":91,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":86,"column":0}},{"generated":{"line":92,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":87,"column":0}},{"generated":{"line":93,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":88,"column":0}},{"generated":{"line":94,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":89,"column":0}},{"generated":{"line":95,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":90,"column":0}},{"generated":{"line":96,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":91,"column":0}},{"generated":{"line":97,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":92,"column":0}},{"generated":{"line":98,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":93,"column":0}},{"generated":{"line":99,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":94,"column":0}},{"generated":{"line":100,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":95,"column":0}},{"generated":{"line":101,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":96,"column":0}},{"generated":{"line":102,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":97,"column":0}},{"generated":{"line":103,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":98,"column":0}},{"generated":{"line":104,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":99,"column":0}},{"generated":{"line":105,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":100,"column":0}},{"generated":{"line":106,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":101,"column":0}},{"generated":{"line":107,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":102,"column":0}},{"generated":{"line":108,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":103,"column":0}},{"generated":{"line":109,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":104,"column":0}},{"generated":{"line":110,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":105,"column":0}},{"generated":{"line":111,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":106,"column":0}},{"generated":{"line":112,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":107,"column":0}},{"generated":{"line":113,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":108,"column":0}},{"generated":{"line":114,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":109,"column":0}},{"generated":{"line":115,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":110,"column":0}},{"generated":{"line":116,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":111,"column":0}},{"generated":{"line":117,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":112,"column":0}},{"generated":{"line":118,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":113,"column":0}},{"generated":{"line":119,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":114,"column":0}},{"generated":{"line":120,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":115,"column":0}},{"generated":{"line":121,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":116,"column":0}},{"generated":{"line":122,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":117,"column":0}},{"generated":{"line":123,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":118,"column":0}},{"generated":{"line":124,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":119,"column":0}},{"generated":{"line":125,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":120,"column":0}},{"generated":{"line":126,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":121,"column":0}},{"generated":{"line":127,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":122,"column":0}},{"generated":{"line":128,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":123,"column":0}},{"generated":{"line":129,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":124,"column":0}},{"generated":{"line":130,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":125,"column":0}},{"generated":{"line":131,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":126,"column":0}},{"generated":{"line":132,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":127,"column":0}},{"generated":{"line":133,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":128,"column":0}},{"generated":{"line":134,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":129,"column":0}},{"generated":{"line":135,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":130,"column":0}},{"generated":{"line":136,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":131,"column":0}},{"generated":{"line":137,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":132,"column":0}},{"generated":{"line":138,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":133,"column":0}},{"generated":{"line":139,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":134,"column":0}},{"generated":{"line":140,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":135,"column":0}},{"generated":{"line":141,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":136,"column":0}},{"generated":{"line":142,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":137,"column":0}},{"generated":{"line":143,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":138,"column":0}},{"generated":{"line":144,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":139,"column":0}},{"generated":{"line":145,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":140,"column":0}},{"generated":{"line":146,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":141,"column":0}},{"generated":{"line":147,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":142,"column":0}},{"generated":{"line":148,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":143,"column":0}},{"generated":{"line":149,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":144,"column":0}},{"generated":{"line":150,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":145,"column":0}},{"generated":{"line":151,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":146,"column":0}},{"generated":{"line":152,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":147,"column":0}},{"generated":{"line":153,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":148,"column":0}},{"generated":{"line":154,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":149,"column":0}},{"generated":{"line":155,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":150,"column":0}},{"generated":{"line":156,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":151,"column":0}},{"generated":{"line":157,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":152,"column":0}},{"generated":{"line":158,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":153,"column":0}},{"generated":{"line":159,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":154,"column":0}},{"generated":{"line":160,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":155,"column":0}},{"generated":{"line":161,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":156,"column":0}},{"generated":{"line":162,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":157,"column":0}},{"generated":{"line":163,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":158,"column":0}},{"generated":{"line":164,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":159,"column":0}},{"generated":{"line":165,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":160,"column":0}},{"generated":{"line":166,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":161,"column":0}},{"generated":{"line":167,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":162,"column":0}},{"generated":{"line":168,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":163,"column":0}},{"generated":{"line":169,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":164,"column":0}},{"generated":{"line":170,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":165,"column":0}},{"generated":{"line":171,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":166,"column":0}},{"generated":{"line":172,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":167,"column":0}},{"generated":{"line":173,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":168,"column":0}},{"generated":{"line":174,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":169,"column":0}},{"generated":{"line":175,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":170,"column":0}},{"generated":{"line":176,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":171,"column":0}},{"generated":{"line":177,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":172,"column":0}},{"generated":{"line":178,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":173,"column":0}},{"generated":{"line":179,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":174,"column":0}},{"generated":{"line":180,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":175,"column":0}},{"generated":{"line":181,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":176,"column":0}},{"generated":{"line":182,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":177,"column":0}},{"generated":{"line":183,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":178,"column":0}},{"generated":{"line":184,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":179,"column":0}},{"generated":{"line":185,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":180,"column":0}},{"generated":{"line":186,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":181,"column":0}},{"generated":{"line":187,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":182,"column":0}},{"generated":{"line":188,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":183,"column":0}},{"generated":{"line":189,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":184,"column":0}},{"generated":{"line":190,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":185,"column":0}},{"generated":{"line":191,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":186,"column":0}},{"generated":{"line":192,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":187,"column":0}},{"generated":{"line":193,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":188,"column":0}},{"generated":{"line":194,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":189,"column":0}},{"generated":{"line":195,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":190,"column":0}},{"generated":{"line":196,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":191,"column":0}},{"generated":{"line":197,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":192,"column":0}},{"generated":{"line":198,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":193,"column":0}},{"generated":{"line":199,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":194,"column":0}},{"generated":{"line":200,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":195,"column":0}},{"generated":{"line":201,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":196,"column":0}},{"generated":{"line":202,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":197,"column":0}},{"generated":{"line":203,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":198,"column":0}},{"generated":{"line":204,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":199,"column":0}},{"generated":{"line":205,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":200,"column":0}},{"generated":{"line":206,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":201,"column":0}},{"generated":{"line":207,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":202,"column":0}},{"generated":{"line":208,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":203,"column":0}},{"generated":{"line":209,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":204,"column":0}},{"generated":{"line":210,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":205,"column":0}},{"generated":{"line":211,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":206,"column":0}},{"generated":{"line":212,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":207,"column":0}},{"generated":{"line":213,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":208,"column":0}},{"generated":{"line":214,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":209,"column":0}},{"generated":{"line":215,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":210,"column":0}},{"generated":{"line":216,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":211,"column":0}},{"generated":{"line":217,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":212,"column":0}},{"generated":{"line":218,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":213,"column":0}},{"generated":{"line":219,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":214,"column":0}},{"generated":{"line":220,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":215,"column":0}},{"generated":{"line":221,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":216,"column":0}},{"generated":{"line":222,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":217,"column":0}},{"generated":{"line":223,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":218,"column":0}},{"generated":{"line":224,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":219,"column":0}},{"generated":{"line":225,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":220,"column":0}},{"generated":{"line":226,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":221,"column":0}},{"generated":{"line":227,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":222,"column":0}},{"generated":{"line":228,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":223,"column":0}},{"generated":{"line":229,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":224,"column":0}},{"generated":{"line":230,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":225,"column":0}},{"generated":{"line":231,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":226,"column":0}},{"generated":{"line":232,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":227,"column":0}},{"generated":{"line":233,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":228,"column":0}},{"generated":{"line":234,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":229,"column":0}},{"generated":{"line":235,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":230,"column":0}},{"generated":{"line":236,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":231,"column":0}},{"generated":{"line":237,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":232,"column":0}},{"generated":{"line":238,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":233,"column":0}},{"generated":{"line":239,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":234,"column":0}},{"generated":{"line":240,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":235,"column":0}},{"generated":{"line":241,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":236,"column":0}},{"generated":{"line":242,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":237,"column":0}},{"generated":{"line":243,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":238,"column":0}},{"generated":{"line":244,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":239,"column":0}},{"generated":{"line":245,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":240,"column":0}},{"generated":{"line":246,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":241,"column":0}},{"generated":{"line":247,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":242,"column":0}},{"generated":{"line":248,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":243,"column":0}},{"generated":{"line":249,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":244,"column":0}},{"generated":{"line":250,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":245,"column":0}},{"generated":{"line":251,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":246,"column":0}},{"generated":{"line":252,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":247,"column":0}},{"generated":{"line":253,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":248,"column":0}},{"generated":{"line":254,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":249,"column":0}},{"generated":{"line":255,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":250,"column":0}},{"generated":{"line":256,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":251,"column":0}},{"generated":{"line":257,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":252,"column":0}},{"generated":{"line":258,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":253,"column":0}},{"generated":{"line":259,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":254,"column":0}},{"generated":{"line":260,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":255,"column":0}},{"generated":{"line":261,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":256,"column":0}},{"generated":{"line":262,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":257,"column":0}},{"generated":{"line":263,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":258,"column":0}},{"generated":{"line":264,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":259,"column":0}},{"generated":{"line":265,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":260,"column":0}},{"generated":{"line":266,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":261,"column":0}},{"generated":{"line":267,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":262,"column":0}},{"generated":{"line":268,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":263,"column":0}},{"generated":{"line":269,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":264,"column":0}},{"generated":{"line":270,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":265,"column":0}},{"generated":{"line":271,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":266,"column":0}},{"generated":{"line":272,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":267,"column":0}},{"generated":{"line":273,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":268,"column":0}},{"generated":{"line":274,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":269,"column":0}},{"generated":{"line":275,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":270,"column":0}},{"generated":{"line":276,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":271,"column":0}},{"generated":{"line":277,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":272,"column":0}},{"generated":{"line":278,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":273,"column":0}},{"generated":{"line":279,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":274,"column":0}},{"generated":{"line":280,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":275,"column":0}},{"generated":{"line":281,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":276,"column":0}},{"generated":{"line":281,"column":1},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":276,"column":1}},{"generated":{"line":283,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":278,"column":0}},{"generated":{"line":284,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":279,"column":7}},{"generated":{"line":284,"column":6},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":279,"column":13},"name":"shaderDistanceFunction"},{"generated":{"line":284,"column":28},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":279,"column":35}},{"generated":{"line":284,"column":31},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":279,"column":35},"name":"exports"},{"generated":{"line":284,"column":38},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":279,"column":35}},{"generated":{"line":284,"column":39},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":279,"column":35},"name":"shaderDistanceFunction"},{"generated":{"line":284,"column":61},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":279,"column":35}},{"generated":{"line":284,"column":64},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":279,"column":38}},{"generated":{"line":284,"column":74},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":279,"column":48}},{"generated":{"line":285,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":280,"column":0}},{"generated":{"line":286,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":281,"column":0}},{"generated":{"line":287,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":282,"column":0}},{"generated":{"line":288,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":283,"column":0}},{"generated":{"line":289,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":284,"column":0}},{"generated":{"line":290,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":285,"column":0}},{"generated":{"line":291,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":286,"column":0}},{"generated":{"line":292,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":287,"column":0}},{"generated":{"line":293,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":288,"column":0}},{"generated":{"line":294,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":289,"column":0}},{"generated":{"line":295,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":290,"column":0}},{"generated":{"line":296,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":291,"column":0}},{"generated":{"line":297,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":292,"column":0}},{"generated":{"line":298,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":293,"column":0}},{"generated":{"line":299,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":294,"column":0}},{"generated":{"line":300,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":295,"column":0}},{"generated":{"line":301,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":296,"column":0}},{"generated":{"line":302,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":297,"column":0}},{"generated":{"line":303,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":298,"column":0}},{"generated":{"line":304,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":299,"column":0}},{"generated":{"line":305,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":300,"column":0}},{"generated":{"line":306,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":301,"column":0}},{"generated":{"line":307,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":302,"column":0}},{"generated":{"line":308,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":303,"column":0}},{"generated":{"line":309,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":304,"column":0}},{"generated":{"line":310,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":305,"column":0}},{"generated":{"line":311,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":306,"column":0}},{"generated":{"line":312,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":307,"column":0}},{"generated":{"line":313,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":308,"column":0}},{"generated":{"line":314,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":309,"column":0}},{"generated":{"line":315,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":310,"column":0}},{"generated":{"line":316,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":311,"column":0}},{"generated":{"line":317,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":312,"column":0}},{"generated":{"line":318,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":313,"column":0}},{"generated":{"line":319,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":314,"column":0}},{"generated":{"line":320,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":315,"column":0}},{"generated":{"line":321,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":316,"column":0}},{"generated":{"line":322,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":317,"column":0}},{"generated":{"line":323,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":318,"column":0}},{"generated":{"line":324,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":319,"column":0}},{"generated":{"line":325,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":320,"column":0}},{"generated":{"line":326,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":321,"column":0}},{"generated":{"line":327,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":322,"column":0}},{"generated":{"line":328,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":323,"column":0}},{"generated":{"line":329,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":324,"column":0}},{"generated":{"line":330,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":325,"column":0}},{"generated":{"line":331,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":326,"column":0}},{"generated":{"line":332,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":327,"column":0}},{"generated":{"line":333,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":328,"column":0}},{"generated":{"line":334,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":329,"column":0}},{"generated":{"line":335,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":330,"column":0}},{"generated":{"line":336,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":331,"column":0}},{"generated":{"line":337,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":332,"column":0}},{"generated":{"line":338,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":333,"column":0}},{"generated":{"line":339,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":334,"column":0}},{"generated":{"line":340,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":335,"column":0}},{"generated":{"line":341,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":336,"column":0}},{"generated":{"line":342,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":337,"column":0}},{"generated":{"line":343,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":338,"column":0}},{"generated":{"line":344,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":339,"column":0}},{"generated":{"line":345,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":340,"column":0}},{"generated":{"line":346,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":341,"column":0}},{"generated":{"line":347,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":342,"column":0}},{"generated":{"line":348,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":343,"column":0}},{"generated":{"line":349,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":344,"column":0}},{"generated":{"line":350,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":345,"column":0}},{"generated":{"line":351,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":346,"column":0}},{"generated":{"line":352,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":347,"column":0}},{"generated":{"line":353,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":348,"column":0}},{"generated":{"line":354,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":349,"column":0}},{"generated":{"line":355,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":350,"column":0}},{"generated":{"line":356,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":351,"column":0}},{"generated":{"line":357,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":352,"column":0}},{"generated":{"line":358,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":353,"column":0}},{"generated":{"line":359,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":354,"column":0}},{"generated":{"line":360,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":355,"column":0}},{"generated":{"line":361,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":356,"column":0}},{"generated":{"line":362,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":357,"column":0}},{"generated":{"line":363,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":358,"column":0}},{"generated":{"line":364,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":359,"column":0}},{"generated":{"line":365,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":360,"column":0}},{"generated":{"line":366,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":361,"column":0}},{"generated":{"line":367,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":362,"column":0}},{"generated":{"line":368,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":363,"column":0}},{"generated":{"line":369,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":364,"column":0}},{"generated":{"line":370,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":365,"column":0}},{"generated":{"line":371,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":366,"column":0}},{"generated":{"line":372,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":367,"column":0}},{"generated":{"line":373,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":368,"column":0}},{"generated":{"line":374,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":369,"column":0}},{"generated":{"line":375,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":370,"column":0}},{"generated":{"line":376,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":371,"column":0}},{"generated":{"line":377,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":372,"column":0}},{"generated":{"line":378,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":373,"column":0}},{"generated":{"line":379,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":374,"column":0}},{"generated":{"line":380,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":375,"column":0}},{"generated":{"line":381,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":376,"column":0}},{"generated":{"line":382,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":377,"column":0}},{"generated":{"line":383,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":378,"column":0}},{"generated":{"line":384,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":379,"column":0}},{"generated":{"line":385,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":380,"column":0}},{"generated":{"line":386,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":381,"column":0}},{"generated":{"line":387,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":382,"column":0}},{"generated":{"line":388,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":383,"column":0}},{"generated":{"line":389,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":384,"column":0}},{"generated":{"line":390,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":385,"column":0}},{"generated":{"line":391,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":386,"column":0}},{"generated":{"line":392,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":387,"column":0}},{"generated":{"line":393,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":388,"column":0}},{"generated":{"line":394,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":389,"column":0}},{"generated":{"line":395,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":390,"column":0}},{"generated":{"line":396,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":391,"column":0}},{"generated":{"line":397,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":392,"column":0}},{"generated":{"line":398,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":393,"column":0}},{"generated":{"line":399,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":394,"column":0}},{"generated":{"line":400,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":395,"column":0}},{"generated":{"line":401,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":396,"column":0}},{"generated":{"line":402,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":397,"column":0}},{"generated":{"line":403,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":398,"column":0}},{"generated":{"line":404,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":399,"column":0}},{"generated":{"line":405,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":400,"column":0}},{"generated":{"line":406,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":401,"column":0}},{"generated":{"line":407,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":402,"column":0}},{"generated":{"line":408,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":403,"column":0}},{"generated":{"line":409,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":404,"column":0}},{"generated":{"line":410,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":405,"column":0}},{"generated":{"line":411,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":406,"column":0}},{"generated":{"line":412,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":407,"column":0}},{"generated":{"line":413,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":408,"column":0}},{"generated":{"line":414,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":409,"column":0}},{"generated":{"line":415,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":410,"column":0}},{"generated":{"line":416,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":411,"column":0}},{"generated":{"line":417,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":412,"column":0}},{"generated":{"line":418,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":413,"column":0}},{"generated":{"line":419,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":414,"column":0}},{"generated":{"line":420,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":415,"column":0}},{"generated":{"line":421,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":416,"column":0}},{"generated":{"line":422,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":417,"column":0}},{"generated":{"line":423,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":418,"column":0}},{"generated":{"line":424,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":419,"column":0}},{"generated":{"line":425,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":420,"column":0}},{"generated":{"line":426,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":421,"column":0}},{"generated":{"line":427,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":422,"column":0}},{"generated":{"line":428,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":423,"column":0}},{"generated":{"line":429,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":424,"column":0}},{"generated":{"line":430,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":425,"column":0}},{"generated":{"line":431,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":426,"column":0}},{"generated":{"line":432,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":427,"column":0}},{"generated":{"line":433,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":428,"column":0}},{"generated":{"line":434,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":429,"column":0}},{"generated":{"line":435,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":430,"column":0}},{"generated":{"line":436,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":431,"column":0}},{"generated":{"line":437,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":432,"column":0}},{"generated":{"line":438,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":433,"column":0}},{"generated":{"line":439,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":434,"column":0}},{"generated":{"line":440,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":435,"column":0}},{"generated":{"line":441,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":436,"column":0}},{"generated":{"line":442,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":437,"column":0}},{"generated":{"line":443,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":438,"column":0}},{"generated":{"line":444,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":439,"column":0}},{"generated":{"line":445,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":440,"column":0}},{"generated":{"line":446,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":441,"column":0}},{"generated":{"line":447,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":442,"column":0}},{"generated":{"line":448,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":443,"column":0}},{"generated":{"line":449,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":444,"column":0}},{"generated":{"line":450,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":445,"column":0}},{"generated":{"line":451,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":446,"column":0}},{"generated":{"line":452,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":447,"column":0}},{"generated":{"line":453,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":448,"column":0}},{"generated":{"line":454,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":449,"column":0}},{"generated":{"line":455,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":450,"column":0}},{"generated":{"line":456,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":451,"column":0}},{"generated":{"line":457,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":452,"column":0}},{"generated":{"line":458,"column":0},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":453,"column":0}},{"generated":{"line":458,"column":1},"source":"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js","original":{"line":453,"column":1}}],"sources":{"node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js":"// Note that a struct cannot be used for the hit record including faceIndices, faceNormal, barycoord,\n// side, and dist because on some mobile GPUS (such as Adreno) numbers are afforded less precision specifically\n// when in a struct leading to inaccurate hit results. See KhronosGroup/WebGL#3351 for more details.\nexport const shaderStructs = /* glsl */`\n#ifndef TRI_INTERSECT_EPSILON\n#define TRI_INTERSECT_EPSILON 1e-5\n#endif\n\n#ifndef INFINITY\n#define INFINITY 1e20\n#endif\n\nstruct BVH {\n\n\tusampler2D index;\n\tsampler2D position;\n\n\tsampler2D bvhBounds;\n\tusampler2D bvhContents;\n\n};\n`;\n\nexport const shaderIntersectFunction = /* glsl */`\n\n// Utilities\nuvec4 uTexelFetch1D( usampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nivec4 iTexelFetch1D( isampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nvec4 texelFetch1D( sampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nvec4 textureSampleBarycoord( sampler2D tex, vec3 barycoord, uvec3 faceIndices ) {\n\n\treturn\n\t\tbarycoord.x * texelFetch1D( tex, faceIndices.x ) +\n\t\tbarycoord.y * texelFetch1D( tex, faceIndices.y ) +\n\t\tbarycoord.z * texelFetch1D( tex, faceIndices.z );\n\n}\n\nvoid ndcToCameraRay(\n\tvec2 coord, mat4 cameraWorld, mat4 invProjectionMatrix,\n\tout vec3 rayOrigin, out vec3 rayDirection\n) {\n\n\t// get camera look direction and near plane for camera clipping\n\tvec4 lookDirection = cameraWorld * vec4( 0.0, 0.0, - 1.0, 0.0 );\n\tvec4 nearVector = invProjectionMatrix * vec4( 0.0, 0.0, - 1.0, 1.0 );\n\tfloat near = abs( nearVector.z / nearVector.w );\n\n\t// get the camera direction and position from camera matrices\n\tvec4 origin = cameraWorld * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec4 direction = invProjectionMatrix * vec4( coord, 0.5, 1.0 );\n\tdirection /= direction.w;\n\tdirection = cameraWorld * direction - origin;\n\n\t// slide the origin along the ray until it sits at the near clip plane position\n\torigin.xyz += direction.xyz * near / dot( direction, lookDirection );\n\n\trayOrigin = origin.xyz;\n\trayDirection = direction.xyz;\n\n}\n\n// Raycasting\nfloat intersectsBounds( vec3 rayOrigin, vec3 rayDirection, vec3 boundsMin, vec3 boundsMax ) {\n\n\t// https://www.reddit.com/r/opengl/comments/8ntzz5/fast_glsl_ray_box_intersection/\n\t// https://tavianator.com/2011/ray_box.html\n\tvec3 invDir = 1.0 / rayDirection;\n\n\t// find intersection distances for each plane\n\tvec3 tMinPlane = invDir * ( boundsMin - rayOrigin );\n\tvec3 tMaxPlane = invDir * ( boundsMax - rayOrigin );\n\n\t// get the min and max distances from each intersection\n\tvec3 tMinHit = min( tMaxPlane, tMinPlane );\n\tvec3 tMaxHit = max( tMaxPlane, tMinPlane );\n\n\t// get the furthest hit distance\n\tvec2 t = max( tMinHit.xx, tMinHit.yz );\n\tfloat t0 = max( t.x, t.y );\n\n\t// get the minimum hit distance\n\tt = min( tMaxHit.xx, tMaxHit.yz );\n\tfloat t1 = min( t.x, t.y );\n\n\t// set distance to 0.0 if the ray starts inside the box\n\tfloat dist = max( t0, 0.0 );\n\n\treturn t1 >= dist ? dist : INFINITY;\n\n}\n\nbool intersectsTriangle(\n\tvec3 rayOrigin, vec3 rayDirection, vec3 a, vec3 b, vec3 c,\n\tout vec3 barycoord, out vec3 norm, out float dist, out float side\n) {\n\n\t// https://stackoverflow.com/questions/42740765/intersection-between-line-and-triangle-in-3d\n\tvec3 edge1 = b - a;\n\tvec3 edge2 = c - a;\n\tnorm = cross( edge1, edge2 );\n\n\tfloat det = - dot( rayDirection, norm );\n\tfloat invdet = 1.0 / det;\n\n\tvec3 AO = rayOrigin - a;\n\tvec3 DAO = cross( AO, rayDirection );\n\n\tvec4 uvt;\n\tuvt.x = dot( edge2, DAO ) * invdet;\n\tuvt.y = - dot( edge1, DAO ) * invdet;\n\tuvt.z = dot( AO, norm ) * invdet;\n\tuvt.w = 1.0 - uvt.x - uvt.y;\n\n\t// set the hit information\n\tbarycoord = uvt.wxy; // arranged in A, B, C order\n\tdist = uvt.z;\n\tside = sign( det );\n\tnorm = side * normalize( norm );\n\n\t// add an epsilon to avoid misses between triangles\n\tuvt += vec4( TRI_INTERSECT_EPSILON );\n\n\treturn all( greaterThanEqual( uvt, vec4( 0.0 ) ) );\n\n}\n\nbool intersectTriangles(\n\tBVH bvh, vec3 rayOrigin, vec3 rayDirection, uint offset, uint count,\n\tinout float minDistance,\n\n\t// output variables\n\tout uvec4 faceIndices, out vec3 faceNormal, out vec3 barycoord,\n\tout float side, out float dist\n) {\n\n\tbool found = false;\n\tvec3 localBarycoord, localNormal;\n\tfloat localDist, localSide;\n\tfor ( uint i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\tuvec3 indices = uTexelFetch1D( bvh.index, i ).xyz;\n\t\tvec3 a = texelFetch1D( bvh.position, indices.x ).rgb;\n\t\tvec3 b = texelFetch1D( bvh.position, indices.y ).rgb;\n\t\tvec3 c = texelFetch1D( bvh.position, indices.z ).rgb;\n\n\t\tif (\n\t\t\tintersectsTriangle( rayOrigin, rayDirection, a, b, c, localBarycoord, localNormal, localDist, localSide )\n\t\t\t&& localDist < minDistance\n\t\t) {\n\n\t\t\tfound = true;\n\t\t\tminDistance = localDist;\n\n\t\t\tfaceIndices = uvec4( indices.xyz, i );\n\t\t\tfaceNormal = localNormal;\n\n\t\t\tside = localSide;\n\t\t\tbarycoord = localBarycoord;\n\t\t\tdist = localDist;\n\n\t\t}\n\n\t}\n\n\treturn found;\n\n}\n\nfloat intersectsBVHNodeBounds( vec3 rayOrigin, vec3 rayDirection, BVH bvh, uint currNodeIndex ) {\n\n\tvec3 boundsMin = texelFetch1D( bvh.bvhBounds, currNodeIndex * 2u + 0u ).xyz;\n\tvec3 boundsMax = texelFetch1D( bvh.bvhBounds, currNodeIndex * 2u + 1u ).xyz;\n\treturn intersectsBounds( rayOrigin, rayDirection, boundsMin, boundsMax );\n\n}\n\nbool bvhIntersectFirstHit(\n\tBVH bvh, vec3 rayOrigin, vec3 rayDirection,\n\n\t// output variables\n\tout uvec4 faceIndices, out vec3 faceNormal, out vec3 barycoord,\n\tout float side, out float dist\n) {\n\n\t// stack needs to be twice as long as the deepest tree we expect because\n\t// we push both the left and right child onto the stack every traversal\n\tint ptr = 0;\n\tuint stack[ 60 ];\n\tstack[ 0 ] = 0u;\n\n\tfloat triangleDistance = 1e20;\n\tbool found = false;\n\twhile ( ptr > - 1 && ptr < 60 ) {\n\n\t\tuint currNodeIndex = stack[ ptr ];\n\t\tptr --;\n\n\t\t// check if we intersect the current bounds\n\t\tfloat boundsHitDistance = intersectsBVHNodeBounds( rayOrigin, rayDirection, bvh, currNodeIndex );\n\t\tif ( boundsHitDistance == INFINITY || boundsHitDistance > triangleDistance ) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tuvec2 boundsInfo = uTexelFetch1D( bvh.bvhContents, currNodeIndex ).xy;\n\t\tbool isLeaf = bool( boundsInfo.x & 0xffff0000u );\n\n\t\tif ( isLeaf ) {\n\n\t\t\tuint count = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint offset = boundsInfo.y;\n\n\t\t\tfound = intersectTriangles(\n\t\t\t\tbvh, rayOrigin, rayDirection, offset, count, triangleDistance,\n\t\t\t\tfaceIndices, faceNormal, barycoord, side, dist\n\t\t\t) || found;\n\n\t\t} else {\n\n\t\t\tuint leftIndex = currNodeIndex + 1u;\n\t\t\tuint splitAxis = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint rightIndex = boundsInfo.y;\n\n\t\t\tbool leftToRight = rayDirection[ splitAxis ] >= 0.0;\n\t\t\tuint c1 = leftToRight ? leftIndex : rightIndex;\n\t\t\tuint c2 = leftToRight ? rightIndex : leftIndex;\n\n\t\t\t// set c2 in the stack so we traverse it later. We need to keep track of a pointer in\n\t\t\t// the stack while we traverse. The second pointer added is the one that will be\n\t\t\t// traversed first\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c2;\n\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c1;\n\n\t\t}\n\n\t}\n\n\treturn found;\n\n}\n`;\n\n// Distance to Point\nexport const shaderDistanceFunction = /* glsl */`\n\nfloat dot2( in vec3 v ) {\n\n\treturn dot( v, v );\n\n}\n\n\n// https://www.shadertoy.com/view/ttfGWl\nvec3 closestPointToTriangle( vec3 p, vec3 v0, vec3 v1, vec3 v2, out vec3 barycoord ) {\n\n    vec3 v10 = v1 - v0;\n    vec3 v21 = v2 - v1;\n    vec3 v02 = v0 - v2;\n\n\tvec3 p0 = p - v0;\n\tvec3 p1 = p - v1;\n\tvec3 p2 = p - v2;\n\n    vec3 nor = cross( v10, v02 );\n\n    // method 2, in barycentric space\n    vec3  q = cross( nor, p0 );\n    float d = 1.0 / dot2( nor );\n    float u = d * dot( q, v02 );\n    float v = d * dot( q, v10 );\n    float w = 1.0 - u - v;\n\n\tif( u < 0.0 ) {\n\n\t\tw = clamp( dot( p2, v02 ) / dot2( v02 ), 0.0, 1.0 );\n\t\tu = 0.0;\n\t\tv = 1.0 - w;\n\n\t} else if( v < 0.0 ) {\n\n\t\tu = clamp( dot( p0, v10 ) / dot2( v10 ), 0.0, 1.0 );\n\t\tv = 0.0;\n\t\tw = 1.0 - u;\n\n\t} else if( w < 0.0 ) {\n\n\t\tv = clamp( dot( p1, v21 ) / dot2( v21 ), 0.0, 1.0 );\n\t\tw = 0.0;\n\t\tu = 1.0-v;\n\n\t}\n\n\tbarycoord = vec3( u, v, w );\n    return u * v1 + v * v2 + w * v0;\n\n}\n\nfloat distanceToTriangles(\n\tBVH bvh, vec3 point, uint offset, uint count, float closestDistanceSquared,\n\n\tout uvec4 faceIndices, out vec3 faceNormal, out vec3 barycoord, out float side, out vec3 outPoint\n) {\n\n\tbool found = false;\n\tuvec3 localIndices;\n\tvec3 localBarycoord;\n\tvec3 localNormal;\n\tfor ( uint i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\tuvec3 indices = uTexelFetch1D( bvh.index, i ).xyz;\n\t\tvec3 a = texelFetch1D( bvh.position, indices.x ).rgb;\n\t\tvec3 b = texelFetch1D( bvh.position, indices.y ).rgb;\n\t\tvec3 c = texelFetch1D( bvh.position, indices.z ).rgb;\n\n\t\t// get the closest point and barycoord\n\t\tvec3 closestPoint = closestPointToTriangle( point, a, b, c, localBarycoord );\n\t\tvec3 delta = point - closestPoint;\n\t\tfloat sqDist = dot2( delta );\n\t\tif ( sqDist < closestDistanceSquared ) {\n\n\t\t\t// set the output results\n\t\t\tclosestDistanceSquared = sqDist;\n\t\t\tfaceIndices = uvec4( indices.xyz, i );\n\t\t\tfaceNormal = normalize( cross( a - b, b - c ) );\n\t\t\tbarycoord = localBarycoord;\n\t\t\toutPoint = closestPoint;\n\t\t\tside = sign( dot( faceNormal, delta ) );\n\n\t\t}\n\n\t}\n\n\treturn closestDistanceSquared;\n\n}\n\nfloat distanceSqToBounds( vec3 point, vec3 boundsMin, vec3 boundsMax ) {\n\n\tvec3 clampedPoint = clamp( point, boundsMin, boundsMax );\n\tvec3 delta = point - clampedPoint;\n\treturn dot( delta, delta );\n\n}\n\nfloat distanceSqToBVHNodeBoundsPoint( vec3 point, BVH bvh, uint currNodeIndex ) {\n\n\tvec3 boundsMin = texelFetch1D( bvh.bvhBounds, currNodeIndex * 2u + 0u ).xyz;\n\tvec3 boundsMax = texelFetch1D( bvh.bvhBounds, currNodeIndex * 2u + 1u ).xyz;\n\treturn distanceSqToBounds( point, boundsMin, boundsMax );\n\n}\n\nfloat bvhClosestPointToPoint(\n\tBVH bvh, vec3 point,\n\n\t// output variables\n\tout uvec4 faceIndices, out vec3 faceNormal, out vec3 barycoord,\n\tout float side, out vec3 outPoint\n ) {\n\n\t// stack needs to be twice as long as the deepest tree we expect because\n\t// we push both the left and right child onto the stack every traversal\n\tint ptr = 0;\n\tuint stack[ 60 ];\n\tstack[ 0 ] = 0u;\n\tfloat closestDistanceSquared = pow( 100000.0, 2.0 );\n\tbool found = false;\n\twhile ( ptr > - 1 && ptr < 60 ) {\n\n\t\tuint currNodeIndex = stack[ ptr ];\n\t\tptr --;\n\n\t\t// check if we intersect the current bounds\n\t\tfloat boundsHitDistance = distanceSqToBVHNodeBoundsPoint( point, bvh, currNodeIndex );\n\t\tif ( boundsHitDistance > closestDistanceSquared ) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tuvec2 boundsInfo = uTexelFetch1D( bvh.bvhContents, currNodeIndex ).xy;\n\t\tbool isLeaf = bool( boundsInfo.x & 0xffff0000u );\n\t\tif ( isLeaf ) {\n\n\t\t\tuint count = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint offset = boundsInfo.y;\n\t\t\tclosestDistanceSquared = distanceToTriangles(\n\t\t\t\tbvh, point, offset, count, closestDistanceSquared,\n\n\t\t\t\t// outputs\n\t\t\t\tfaceIndices, faceNormal, barycoord, side, outPoint\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tuint leftIndex = currNodeIndex + 1u;\n\t\t\tuint splitAxis = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint rightIndex = boundsInfo.y;\n\t\t\tbool leftToRight = distanceSqToBVHNodeBoundsPoint( point, bvh, leftIndex ) < distanceSqToBVHNodeBoundsPoint( point, bvh, rightIndex );//rayDirection[ splitAxis ] >= 0.0;\n\t\t\tuint c1 = leftToRight ? leftIndex : rightIndex;\n\t\t\tuint c2 = leftToRight ? rightIndex : leftIndex;\n\n\t\t\t// set c2 in the stack so we traverse it later. We need to keep track of a pointer in\n\t\t\t// the stack while we traverse. The second pointer added is the one that will be\n\t\t\t// traversed first\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c2;\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c1;\n\n\t\t}\n\n\t}\n\n\treturn sqrt( closestDistanceSquared );\n\n}\n`;\n"},"lineCount":null}},"error":null,"hash":"74356cfc7303eaf7f1944f605f396f23","cacheData":{"env":{}}}